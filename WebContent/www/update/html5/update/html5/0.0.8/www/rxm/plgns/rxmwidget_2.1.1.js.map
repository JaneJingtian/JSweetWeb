{"version":3,"sources":["originalConfig.js","plgns/private/RxmDialogNoModal.js","plgns/private/rxmModalPanel.js","plgns/private/RxmUtil.js","plgns/ts/objLoginBase.js","plgns/ts/RxmAppTool.js","plgns/ts/RxmAuthBase.js","plgns/ts/rxmCmdMgr.js","plgns/ts/rxmContainerTab.js","plgns/ts/RxmInputCombo.js","plgns/ts/RxmInputCombotree.js","plgns/ts/RxmLayoutForm.js","plgns/ts/rxmLayoutLR.js","plgns/ts/rxmLayoutSlidePanel.js","plgns/ts/RxmPopMenu.js","plgns/ts/rxmShowGrid.js","plgns/ts/RxmShowIconList.js","plgns/ts/RxmShowSingleImage.js","plgns/ts/RxmShowSlider.js","plgns/ts/RxmShowTree.js","plgns/ts/RxmShowVideoPlayer.js","plgns/ts/RxmTopCmdQueue.js","plgns/js/config/login.js","plgns/js/config/objMd5Build.js","plgns/js/config/ormdefault.js","plgns/js/config/rsa.js","plgns/js/zgtuch/gestureDefault.js","plgns/js/zgtuch/objGesture.js","plgns/js/zgtuch/objGestureEasy.js","plgns/js/zgtuch/objGestureTimer.js","plgns/js/widget/datagrid/clsBufferGridView.js","plgns/js/widget/datagrid/clsGridDocument.js","plgns/js/widget/datagrid/clsGridMobile.js","plgns/js/widget/fileUploader/clsFormFileUploader.js","plgns/js/widget/fileUploader/clsInputOrmAudio.js","plgns/js/widget/fileUploader/clsInputOrmFile.js","plgns/js/widget/fileUploader/clsInputOrmFiles.js","plgns/js/widget/fileUploader/clsInputOrmImage.js","plgns/js/widget/base/ArrEvt.js","plgns/js/widget/base/dataBase.js","plgns/js/widget/base/dataCollectionBase.js","plgns/js/widget/base/dataEvt.js","plgns/js/widget/base/dataList.js","plgns/js/widget/base/dataObjectBase.js","plgns/js/widget/base/eventBase.js","plgns/js/widget/base/inherit.js","plgns/js/widget/base/lang.js","plgns/js/widget/base/widgetBase.js","plgns/js/widget/search/clsInputSearch.js","plgns/js/widget/search/clsSearchGrid.js","plgns/js/widget/search/clsSearchMobile.js","plgns/js/widget/searchBlock/searchBlock.js","plgns/js/widget/switch/clsSwitch.js","ts/clsSlidebarMobile.js","ts/mobileAjaxEx.js","ts/objOrmWidgetForApp.js","js/app/clsFileReader.js","js/app/clsOrmDownloadExt.js","js/app/clsOrmMessageListener.js","js/app/objOrmActionSheet.js","js/app/objOrmAudio.js","js/app/objOrmCamera.js","js/app/objOrmClip.js","js/app/objOrmContact.js","js/app/objOrmControl.js","js/app/objOrmDataBaseMgr.js","js/app/objOrmDevice.js","js/app/objOrmDialog.js","js/app/objOrmDownloadExt.js","js/app/objOrmDownloadExtMulti.js","js/app/objOrmFile.js","js/app/objOrmImage.js","js/app/objOrmLocalNotification.js","js/app/objOrmLocation.js","js/app/objOrmMessage.js","js/app/objOrmOpenFile.js","js/app/objOrmOpenPdf.js","js/app/objOrmPhone.js","js/app/objOrmScanner.js","js/app/objOrmSpeech.js","js/app/objOrmVideo.js","js/fileUploader/clsFileInfo.js","js/fileUploader/clsFileUploader.js","js/app/native/clsDbConnect.js","js/app/native/clsOrmFileUploader.js","js/app/native/cssNativeBase.js","js/app/native/ormActionSheetBase.js","js/app/native/ormAudioBase.js","js/app/native/ormCameraBase.js","js/app/native/ormClipBase.js","js/app/native/ormContactBase.js","js/app/native/ormControlBase.js","js/app/native/ormDialogBase.js","js/app/native/ormFileMgrBase.js","js/app/native/ormImageBase.js","js/app/native/ormLocalNotificationBase.js","js/app/native/ormLocationBase.js","js/app/native/ormScannerBase.js","js/app/native/ormSpeechBase.js","js/app/native/ormVideoBase.js","js/fileUploader/nativeApp/clsAppFileUploader.js","js/fileUploader/nativeApp/clsAppUploader.js","js/fileUploader/nativeApp/fileExplorer.js"],"names":[],"mappingsntdzvZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClijgjlylvtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfrxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnjwpjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClpvgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5gjjhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzjkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvnlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxrvljhlztjxtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClbfile":"rxmwidget_2.1.1.js","sourcesContent":["/*\n * require.js配置\n */\nvar isapp = typeof rxm_request == 'undefined' ? false : true;\nvar rxm_cfgPathStringDefine = {\n    rxm: {\n        SearchBlock: 'RxmSearchBlock',\n        PopMenu: 'RxmPopMenu',\n        PageBase: 'RxmPageBase',\n        AppTool: 'RxmAppTool',\n        MobileWdgt: 'RxmMobileWdgt',\n        DesktopWdgt: 'RxmDesktopWdgt',\n        CmdMgr: 'RxmCmdMgr',\n        RouterMgr: 'RxmRouterMgr',\n        Download: 'RxmDownload',\n        DownloadA: 'RxmDownloadA',\n        FileUploader: 'RxmFileUploader',\n        FormUploader: 'RxmFormUploader',\n        FileInfo: 'RxmFileInfo',\n        ActionSheet: 'RxmActionSheet',\n        Audio: 'RxmAudio',\n        Camera: 'RxmCamera',\n        Contact: 'RxmContact',\n        Control: 'RxmControl',\n        DataBaseMgr: 'RxmDataBaseMgr',\n        Device: 'RxmDevice',\n        NativeDialog: 'RxmNativeDialog',\n        Loaction: 'RxmLoaction',\n        OpenFile: 'RxmOpenFile',\n        Phone: 'RxmPhone',\n        Scanner: 'RxmScanner',\n        Video: 'RxmDisplayVideo',\n        NativeFile: 'RxmFile',\n        SliderIconView: 'RxmSliderIconView',\n        Message: 'RxmMessage',\n        MessageListener: 'RxmMessageListener',\n        MobileGrid: 'RxmMobileGrid',\n        RxmGrid: 'RxmGrid',\n        IconList: 'RxmIconList',\n        Slider: 'RxmSlider',\n        SingleImage: 'RxmSingleImage',\n        BufferGrid: 'RxmBufferGrid',\n        Util: 'RxmUtil',\n        InputSelect: 'RxmInputSelect',\n        Typeahead: 'RxmTypeahead',\n        LayoutForm: 'RxmLayoutForm',\n        Search: \"RxmSearch\",\n        SearchGrid: \"RxmSearchGrid\",\n        Tree: 'RxmTree',\n        SlidebarStack: 'RxmSlidebar',\n        SlidePanel: 'RxmSlidePanel',\n        ModalPanel: 'RxmModalPanel',\n        Speech: 'RxmSpeech',\n        ArtTemplate: \"RxmArtTemplate\",\n        Image: 'RxmImage',\n        Tab: 'RxmTab',\n        InputSearch: \"RxmInputSearch\",\n        ComboTree: \"RxmComboTree\",\n        Combo: \"RxmCombo\",\n        RxmLRLayout: \"RxmLRLayout\",\n    }\n};\nvar rxm_cfgPathDefine = {\n    baseUrl: getServer() + '/',\n    paths: {\n        // 基础模块配置\n        'Bootstrap': 'www/rxm/bootstrap/js/bootstrap.min',\n        'JQuery.validate': 'www/rxm/jquery/plugins/validate/jquery.validate.min',\n        'JQuery.validate.extra': 'www/rxm/jquery/plugins/validate/additional-methods',\n        'JQuery.validate.message': 'www/rxm/jquery/plugins/validate/localization/messages_zh',\n        'JQuery.validate.defaults': 'www/rxm/jquery/plugins/validate/defaults',\n        'JQuery.pubsub': 'www/rxm/jquery/plugins/pubsub/pubsub',\n        'ZTree': 'www/rxm/jquery/plugins/zTree/js/jquery.ztree.all-3.5.min',\n        \"ZTreeExhide\": \"www/rxm/jquery/plugins/zTree/js/jquery.ztree.exhide-3.5\",\n        'OrmLocalZTreeDir': 'www/rxm/util/localZTree/localZTree',\n        'WebUploader': 'static/original/modules/webuploader/webuploader.min',\n        'Date': 'www/rxm/bootstrap/plugins/datetimepicker/js/bootstrap-datetimepicker.min',\n        'DateCN': 'www/rxm/bootstrap/plugins/datetimepicker/js/datetimepicker.cn',\n        'ClockPicker': 'www/rxm/bootstrap/plugins/clockpicker/js/bootstrap-clockpicker.min',\n        /* 第三方模块文件夹 */\n        'pdf': 'www/rxm/pdfjs/pdf',\n        'pdfviewer': 'www/rxm/pdfjs/pdf_viewer',\n        // \"MCScrollbarDir\": \"www/rxm/jquery/plugins/mCustomScrollbar\",\n        /* CSS文件路径映射 */\n        'BootstrapCss': 'www/rxm/bootstrap/css/bootstrap.min',\n        'ZTreeCss': 'www/rxm/jquery/plugins/zTree/css/zTreeStyle/csTreeStyle',\n        'DateCss': 'www/rxm/bootstrap/plugins/datetimepicker/css/datetimepicker.min',\n        'FontAwesome': 'www/rxm/Font-Awesome/css/font-awesome',\n        'WebUploaderCss': 'static/original/modules/webuploader/css/webuploader',\n        /* 静态模块路径配置 */\n        'RxmGlobalDir': 'www/rxm/global',\n        'RxmModuleDir': 'www/rxm',\n        'RxmWidgetDir': 'www/rxm/widget',\n        // art模板目录\n        'RxmTemplateDir': 'www/rxm/widget/rxmtemplate',\n        'RxmNativeDir': 'www/rxm/core/app/native',\n        // require  config 路径\n        'RxmConfigDir': 'www/config',\n        // 保留了 08-09\n        'OriginalConfigDir': 'www/rxm/global/originalConfig',\n        'OrmFileUpDownDir': 'www/rxm/widget/fileUploader',\n        'RxmStaticModuleDir': 'static/original/modules',\n        'RxmStaticDir': 'static',\n        'RxmFrameBase': \"static/original/modules/jquery/framebase\",\n        'OriginalCustomScrollbarCss': 'static/original/modules/jquery/plugins/mCustomScrollbar/jquery.mCustomScrollbar.min',\n        'OriginalCustomScrollbarjs': 'static/original/modules/jquery/plugins/mCustomScrollbar/jquery.mCustomScrollbar.concat.min',\n        // 编辑状态下的路径设置  保留 08-09\n        'SomPageIDEDir': 'static/rxmdk/somIDE/pageIDE'\n    },\n    waitSeconds: 0,\n    shim: {\n        'DateCN': ['Date']\n    },\n    map: {\n        '*': {\n            'css': 'www/rxm/requirejs/plugin/require-css/css.min',\n            'text': 'www/rxm/requirejs/plugin/h5',\n            'h5': 'www/rxm/requirejs/plugin/h5'\n        }\n    }\n};\n/**路径在这里定义 */\nrxm_cfgPathDefine.paths[rxm_cfgPathStringDefine.rxm.ArtTemplate] = 'www/rxm/tencent/template-web',\n    require.config(rxm_cfgPathDefine);\n/**@typedef  {rxm_cfgPathStringDefine}  rxm.cfgPath */\nrequire.rxm = rxm_cfgPathStringDefine.rxm;\n","define(\"RxmDialogNoModal\", [\"require\", \"exports\", \"RxmArtTemplate\", \"RxmModalPanel\", \"text!RxmWidgetDir/rxmtemplate/rxmDialog.html\", \"RxmAppTool\"], function (require, exports, ArtTemplate, modelPanel, rxm_dlg_tmplt, appTool) {\n    \"use strict\";\n    var _dlgInfo = {\n        alert: {\n            tid: 'rxm_alert_tmplt',\n            panelCls: 'rxm-alert-background'\n        },\n        dialog: {\n            tid: 'rxm_dialog_tmplt',\n            panelCls: 'rxm-dialog-background'\n        },\n        confirm: {\n            tid: 'rxm_confirm_tmplt',\n            panelCls: 'rxm-confirm-background'\n        },\n        loading: {\n            tid: 'rxm_loading_tmplt',\n            panelCls: ''\n        },\n        toast: {\n            tid: 'rxm_loading_tmplt',\n        }\n    };\n    var rxm_dlg_cmd_ok = 'rxm_dlg_cmd_ok';\n    var rxm_dlg_cmd_cancel = 'rxm_dlg_cmd_cancel';\n    /**获取模板 */\n    function getRegText(id) {\n        !id && (id = 'rxm_dialog_tmplt');\n        var regText = rxm_dlg_tmplt;\n        var reg = new RegExp('<template\\\\s*id\\\\s*=\\\\s*\"' + id + '\">[\\\\s|\\\\S|\\\\r\\\\n]*?<\\/template>', 'g');\n        var ret = reg.exec(regText);\n        reg = /<div[\\s|\\S|\\r\\n]*<\\/div>/;\n        ret = reg.exec(ret[0]);\n        return ret;\n    }\n    // var appTool = require(require.rxm.AppTool)\n    var ThisObj = appTool.thisObj;\n    var ClsFactory = function (config) {\n        var _dlgtype = config.dlgType || 'alert';\n        var _panelid = appTool.unid(7);\n        !config.id && (config.id = appTool.unid(7));\n        var _id;\n        if (_id = ThisObj(config.id)) {\n            return _id;\n        }\n        _id = config.id;\n        var RxmDialogNoModel = /** @class */ (function () {\n            function RxmDialogNoModel(config) {\n                this.show = this.modal;\n            }\n            RxmDialogNoModel.prototype.modal = function () {\n                var regText = getRegText(_dlgInfo[_dlgtype].tid);\n                if (regText && regText.length > 0) {\n                    var rend = ArtTemplate.compile(regText[0]);\n                    this.modelpanel = modelPanel({ id: _panelid, cls: _dlgInfo[_dlgtype].panelCls });\n                    this.modelpanel.render(rend({ data: config }));\n                    //隐藏按钮 add by wanghuan 2019-03-18\n                    if (typeof config.showBtn != 'undefined' && config.showBtn == false) {\n                        $('[rxmcmdid=\"rxm_dlg_cmd_ok\"]').parent().empty();\n                    }\n                    else {\n                        $('[rxmcmdid=\"rxm_dlg_cmd_ok\"]').focus();\n                    }\n                    var me = this;\n                    //设置按钮的点击事件\n                    $('#' + _id).tap('[rxmcmdid]', function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        var cmdid = $(e.currentTarget).attr('rxmcmdid');\n                        //需要带有msgType 否则消息不会激发 modify by wanghuan\n                        cmdid = $(cmdid).rxmTriggerCmd({ id: _id, sayTo: 'self', msgType: cmdid });\n                        if (cmdid != false) {\n                            me.close();\n                        }\n                    });\n                }\n            };\n            RxmDialogNoModel.prototype.bindTapOkBtn = function (args) {\n                args.id = _id;\n                $('rxm_dlg_cmd_ok').rxmBindCmd(args);\n            };\n            RxmDialogNoModel.prototype.bindTapCancelBtn = function (args) {\n                args.id = _id;\n                $('rxm_dlg_cmd_cancel').rxmBindCmd(args);\n            };\n            RxmDialogNoModel.prototype.bindTapBackGroundPanel = function (args) {\n                args.id = _panelid;\n                $('rxm_dlg_cmd_backpanel').rxmBindCmd(args);\n            };\n            RxmDialogNoModel.prototype.setTitle = function (title) {\n            };\n            RxmDialogNoModel.prototype.setBody = function (body) {\n                //设置dialog的内容\n                $('.rxm-dlg-content').append(body);\n            };\n            RxmDialogNoModel.prototype.close = function (a) {\n                this.modelpanel.close();\n            };\n            RxmDialogNoModel.prototype.setFoot = function (buttons, defaultClose) {\n                if ($.isArray(buttons)) {\n                    var html = '';\n                    for (var i = 0; i < buttons.length; i++) {\n                        var tmp = buttons[i];\n                        var cmdid = tmp.rxmcmdid;\n                        html += \"<button rxmcmdid='\" + cmdid + \"'>\" + tmp.btnText + \"</button>\";\n                        var arg = {\n                            id: _id,\n                            callback: tmp.callback\n                        };\n                        //绑定按钮的回调函数\n                        $(cmdid).rxmBindCmd(arg);\n                    }\n                    //添加扩展按钮\n                    $('.rxm-dlg-content').siblings('.rxm-dlg-foot').find('.rxm-cmd-btnbar').append(html);\n                }\n            };\n            return RxmDialogNoModel;\n        }());\n        return new RxmDialogNoModel(config);\n    };\n    return ClsFactory;\n});\n","define(\"RxmModalPanel\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    ///<amd-module name='RxmModalPanel'/>\n    var clsFactory = function (cfg) {\n        var rqr = window;\n        /*slientpanel  代表 唯一的弹出背板，背板是全局的，但是仍然采用了 new 多个对象的写法 */\n        var RxmSPHtml = '<div id=\"{{id}}\" class=\"rxm-modal-panel\" style=\"z-index:{{zindex}}\"></div>';\n        var rxmSPcls = 'rxm-modal-panel';\n        var clsdef = {\n            rxmPath: 'RxmModalPanel',\n            clsName: 'rxm-modal-panel',\n            juryFn: ' RxmModalPanel'\n        };\n        var msgName = {\n            tap: 'rxm_dlg_cmd_backpanel'\n        };\n        var toolapp = rqr.require(\"RxmAppTool\");\n        /**获得tree对象本身，这么做是为了防止内存泄露 以前都是放在链表中或者 thisObj */\n        var soleThisObj = toolapp.thisObj;\n        /**@type {Object.<string,HTMLElement>} */\n        var allObjClosed;\n        /**@type  {Number} */\n        var curIndex;\n        /** */\n        var allObjRenderedSet;\n        /*全部的私有函数 */\n        /**\n         *\n         * @param {String} id\n         * @param {String} templateId\n         * @returns {HTMLElement}\n         */\n        var getRenderObjFromTemplate = function (id, templateId) {\n            /**@type {HTMLElement} */\n            var ret = allObjClosed[id] || function () { }();\n            return ret;\n        };\n        /**获取最高的z-index值\n         * @returns {{maxIndex:Number,maxEle:HTMLElement}}\n         */\n        var zindex = function () {\n            /**@type  {HTMLElement} */\n            var ele;\n            /**@type  Number */\n            var maxIndex = 1045;\n            var maxEle;\n            ///判断有没有菜单，菜单之上就不能产生panel了\n            var jqSilent = $('.' + clsdef.clsName);\n            for (var i = 0; i < jqSilent.length; i++) {\n                ele = jqSilent[i];\n                if ((0 + ele.style['z-index']) > maxIndex) {\n                    maxIndex = ele.style['z-index'];\n                    maxEle = ele;\n                }\n            }\n            return { maxIndex: maxIndex, maxEle: maxEle };\n        };\n        /**点击在slient 区域内 */\n        var tapBind = function (e, data) {\n            var ev = event;\n            ev.stopPropagation();\n            ev.preventDefault();\n            var id = e.data.id;\n            var tmp;\n            (tmp = e.target) && (tmp = tmp.id);\n            if (tmp != id) {\n                return;\n            }\n            $('rxm_dlg_cmd_backpanel').rxmTriggerCmd({ id: id, sayTo: 'self' });\n        };\n        /**\n         * 点击在区域slient panel 之外的区域\n         * @param {mouseEvent} e\n        */\n        var _ontouchEnd = function (e, data) {\n            console.info(e.target);\n        };\n        if (!cfg.id) {\n            console.error('需要id');\n        }\n        /**@type {String} */\n        var _id;\n        if (_id = soleThisObj(cfg.id))\n            return _id;\n        _id = cfg.id;\n        /**父亲dom\n         * @type {rxm.jqueryobj}\n         */\n        var _parentDom = $(cfg.parentDom || document.body);\n        var RxmModalPanellmpl = /** @class */ (function () {\n            function RxmModalPanellmpl() {\n            }\n            /**\n             * @returns  {HTMLElement}\n             */\n            RxmModalPanellmpl.prototype.attrHmlEle = function () {\n                return document.getElementById(_id);\n            };\n            RxmModalPanellmpl.prototype.render = function (html) {\n                var jqThis = $('#' + _id);\n                html && (jqThis.append(html));\n                jqThis.css({ visibility: 'visible' });\n            };\n            /**\n             * close  pannel and remain  the object rendered\n             */\n            RxmModalPanellmpl.prototype.close = function () {\n                this.destory();\n            };\n            /**\n             * destory  pannel  and  destory  the object rendered\n             * @param {String} _id\n             */\n            RxmModalPanellmpl.prototype.destory = function () {\n                $('#' + _id).data(clsdef.rxmPath, undefined);\n                $('#' + _id).remove();\n            };\n            /**绑定点击事件 */\n            RxmModalPanellmpl.prototype.bindTapCmd = function (args, scope) {\n                args.id = _id;\n                $('rxm_dlg_cmd_backpanel').rxmBindCmd(args);\n            };\n            return RxmModalPanellmpl;\n        }());\n        /**@type  {Number} */\n        var vIndex;\n        vIndex = zindex();\n        vIndex = vIndex.maxIndex + 1;\n        var rxmSPHtml = RxmSPHtml.replace('{{id}}', _id);\n        rxmSPHtml = rxmSPHtml.replace('{{zindex}}', vIndex);\n        var jqEle = $(rxmSPHtml);\n        cfg.cls && jqEle.addClass(cfg.cls);\n        jqEle.prependTo(_parentDom);\n        //因为过去每次id 都不同，所以既没有出现事件回调被重复激发\n        $('#' + _id).tap({ id: _id }, tapBind);\n        return new RxmModalPanellmpl();\n    };\n    return clsFactory;\n});\n","/**\n*modified  by wangyong  2017-09-7\n*对侧边栏sliderbar和 对话框dialog 相关的应用进行封装\n*/\ndefine(\"RxmUtil\", [\"require\", \"exports\", \"RxmSlidebar\", \"RxmDialogNoModal\", \"RxmNativeDialog\", \"RxmAppTool\"], function (require, exports, Slidebar, RxmDialogNoModel, RxmNativeDialog, appTool) {\n    \"use strict\";\n    !cssOrm.default.ormUtil && (cssOrm.default.ormUtil = {});\n    !cssOrm.default.ormUtil.slidebar && (cssOrm.default.ormUtil.slidebar = {});\n    !cssOrm.default.ormUtil.slidebar.position && (cssOrm.default.ormUtil.slidebar.position = { float: 'right' });\n    !cssOrm.default.ormUtil.slidebar.mode && (cssOrm.default.ormUtil.slidebar.mode = 'slidebar'); // window,iframe;\n    !cssOrm.on && (cssOrm.on = function (option) {\n        /// <summary>加载命令响应函数</summary>\n        /// <param  name=\"option\"  value=\" cssArgs.cssOrm.on\"></param>\n        if (typeof option.callback === 'undefined')\n            return;\n        var type = option.msgType + (option.id ? '_' + option.id : '');\n        if (option.one) {\n            $(document).off(type);\n            $(document).one(type, option.data, option.callback);\n        }\n        else {\n            $(document).on(type, option.data, option.callback);\n        }\n    });\n    !cssOrm.trigger && (cssOrm.trigger = function (type, id, data) {\n        var d = id;\n        if (!(typeof id === 'string' || id instanceof String)) {\n            data = id;\n            d = '';\n        }\n        type = type + (d.length > 0 ? ('_' + d) : '');\n        $(document).trigger(type, data);\n    });\n    var rxmUtil = /** @class */ (function () {\n        function rxmUtil() {\n        }\n        rxmUtil.prototype.alert = function (param, okCallback, modal) {\n            var temParam;\n            if (typeof param === 'string') {\n                var tmp = param;\n                param = {\n                    content: tmp,\n                    modal: modal\n                };\n            }\n            temParam = $.extend(true, {}, cssOrm.default.confirm, param);\n            //okCallback=okCallback||param.callback\n            if (temParam.modal == 0) {\n                RxmNativeDialog.alert(param);\n            }\n            else {\n                temParam.okBtnText = temParam.okBtnText || temParam.btnTitle || '确定';\n                temParam.dlgType = \"alert\";\n                temParam.posCls = temParam.posCls || 'rxm-dlg-xs-center';\n                var dialog = RxmDialogNoModel(temParam);\n                dialog.bindTapOkBtn({ callback: okCallback });\n                dialog.modal();\n            }\n        };\n        /**\n         * 用法：require([require.rxm.Util],function(u){u.confirm(\"确认提交？\",function(){},function(){})})\n         * @param\n         * { title: \"标题\" ,content: \"确定对话框~~\",\n              okBT: \"确定\" ,    //确定按钮标题\n              cancelBT: \"取消\" ,    //取消按钮标题\n              okCb: function(){}, //确定回调函数\n              cancelCb: function(){} //取消回调函数\n        };\n         */\n        rxmUtil.prototype.confirm = function (param, okCallback, cancelCallback, modal) {\n            var temParam;\n            if (typeof param === 'string') {\n                var tmp = param;\n                param = $.extend(true, {}, {\n                    content: tmp,\n                    modal: modal\n                });\n            }\n            temParam = $.extend(true, {}, cssOrm.default.confirm, param);\n            okCallback = okCallback || param.okCb || function () { console.warn(\"dlg_default\"); };\n            cancelCallback = cancelCallback || param.cancelCb || function () { console.warn(\"dlg_default\"); };\n            if (temParam.modal == 0) {\n                RxmNativeDialog.alert(param);\n            }\n            else {\n                temParam.okBtnText = temParam.okBtnText || temParam.okBT || \"确定\";\n                temParam.cancelBtnText = temParam.cancelBtnText || temParam.cancelBT || '取消';\n                temParam.dlgType = \"confirm\";\n                temParam.posCls = temParam.posCls || 'rxm-dlg-xs-center';\n                var dialog = RxmDialogNoModel(temParam);\n                dialog.bindTapOkBtn({ callback: okCallback });\n                dialog.bindTapCancelBtn({ callback: cancelCallback });\n                dialog.modal();\n            }\n        };\n        ;\n        /**\n       * @param {rxm.page.loading} config\n       */\n        rxmUtil.prototype.loading = function (config) {\n            var cfg = config;\n            cfg.dlgType = \"loading\";\n            !cfg.text && (config.text = '正在加载……');\n            var dialog = RxmDialogNoModel(cfg);\n            return dialog;\n        };\n        /**\n         * config = {\n         *   setting : {},                   //dialogSetting\n         *   template : templateURL,         //dialogBodyTemplate\n         *   afterLoad : function(dialog){},   //afterDialogLoaded callback\n         * }\n         */\n        rxmUtil.prototype.contentDialog = function (cnfg, okCallback, cancelCallback) {\n            //目前定义还不正确，需要改进\n            var config = $.extend({\n                cache: false,\n                dialogSize: 'modal-lg',\n                dlgType: 'dialog',\n                modal: 'hide',\n                posCls: 'rxm-dlg-xs-center',\n                showBtn: true,\n                title: '提示'\n            }, cnfg);\n            //确认按钮的回调函数\n            okCallback = okCallback || config.okCb || function () { console.warn(\"dlg_default\"); };\n            //取消按钮的回调函数\n            cancelCallback = cancelCallback || config.cancelCb || function () { console.warn(\"dlg_default\"); };\n            //确认按钮的文字\n            config.okBtnText = config.okBtnText || config.okBT || '确定';\n            //取消按钮的文字\n            config.cancelBtnText = config.cancelBtnText || config.cancelBT || '取消';\n            var dialog;\n            if (typeof (config.body) == \"string\") {\n                dialog = RxmDialogNoModel(config);\n                dialog.show();\n                if (config.buttons) { //存在扩展的按钮\n                    $.each(config.buttons, function (index, item) {\n                        item.close = typeof item.close !== 'undefined' ? item.close : true;\n                    });\n                    //显示扩展按钮\n                    dialog.setFoot(config.buttons, false);\n                }\n                //绑定默认的确认按钮、取消按钮被点击的回调函数\n                dialog.bindTapOkBtn({ callback: okCallback });\n                dialog.bindTapCancelBtn({ callback: cancelCallback });\n                //设置dialog的内容\n                dialog.setBody(config.body);\n                typeof config.afterLoad == \"function\" && config.afterLoad.call(null);\n            }\n            else {\n                var template = void 0;\n                dialog = RxmDialogNoModel(config);\n                dialog.show();\n                if (config.buttons) { //存在扩展的按钮\n                    $.each(config.buttons, function (index, item) {\n                        item.close = typeof item.close !== 'undefined' ? item.close : true;\n                    });\n                    //显示扩展按钮\n                    dialog.setFoot(config.buttons, false);\n                }\n                //绑定默认的确认按钮、取消按钮被点击的回调函数\n                dialog.bindTapOkBtn({ callback: okCallback });\n                dialog.bindTapCancelBtn({ callback: cancelCallback });\n                //设置dialog的内容\n                dialog.setBody(template);\n                typeof config.afterLoad == \"function\" && config.afterLoad.call(null);\n            }\n            return dialog;\n        };\n        ;\n        /**\n         * 弹出侧边编辑栏组件\n         */\n        rxmUtil.prototype.slidebar = function (Router, arg) {\n            var args = arg;\n            var router = Router;\n            //将默认改为10 2019-6-27\n            router.pageType = Router.pageType || '10';\n            if (appTool.isAppOpen()) { // 移动\n                var ret = new Slidebar(router, args);\n                if (!args || !args.notRender) {\n                    ret.render();\n                }\n                return ret;\n            }\n            else {\n                args = args || {};\n                args.mode = args.mode || cssOrm.default.ormUtil.slidebar.mode;\n                //args.position = arg.position || cssOrm.default.ormUtil.slidebar.position\n                appTool.isMobileSimulator() && (args._isMblSmltr = true) && (args.isRxmdk = appTool.isRxmdk());\n                switch (args.mode) {\n                    case 'slidebar':\n                        {\n                            var widget = window;\n                            router.sponsorWindow = window;\n                            cssOrm.trigger('slidebarBegin', '', { config: router, args: args });\n                            if (args.afterClose) {\n                                cssOrm.on({ msgType: 'slidebarReturn', data: args, id: '', one: true, callback: args.afterClose });\n                                args.afterClose = undefined;\n                            }\n                            return Slidebar.createSlidebar(router, args);\n                        }\n                        ;\n                        break;\n                    case 'window':\n                        {\n                            var windowId = args.windowId ? args.windowId : appTool.unid(7);\n                            var path = router.pageType == '10' || router.pageType == '12' ? router.pageUrl : 'resoft/x/oindex';\n                            var feature = args.windowFeature;\n                            var win = window.open(getServer() + '/' + path, windowId, feature, true);\n                            win.onload = function () {\n                                win.postMessage({\n                                    msgName: 'orm_init_args',\n                                    router: router,\n                                    args: args\n                                }, '*');\n                            };\n                        }\n                        ;\n                        break;\n                    case 'subiframe':\n                        {\n                            var win = document.getElementById(args.subIframeId);\n                            var path = getServer() + '/resoft/x/oindex';\n                            (router.pageType == '10' || router.pageType == '12') && (path = router.pageUrl);\n                            win.src = path;\n                            win.onload = function () {\n                                win.contentWindow.postMessage({\n                                    msgName: 'orm_init_args',\n                                    router: router,\n                                    args: args\n                                }, '*');\n                            };\n                        }\n                        break;\n                } // end  switch\n            }\n        };\n        /**\n         * 组织人员组件初始化\n         */\n        rxmUtil.prototype.OrgSelect = function (cfg) {\n            var configdef = {\n                multi: true,\n                titleBarBgColor: \"#00a0f8\",\n                titleBarFontCololr: \"#ffffff\",\n                selectedFontColor: \"#00a0f8\",\n                saveBtnBgColor: \"#00a0f8\",\n                saveBtnFontColor: \"#ffffff\",\n                tagType: [\"dept\", \"user\", \"role\", \"roleMember\", \"gw\"],\n                imgSrc: \"www/rxm/widget/org/views/selected-img.png\",\n                hideNode: {},\n                rootNode: {},\n                data: {},\n                callback: function (data) {\n                    console.log(data);\n                }\n            };\n            var config = $.extend(false, configdef, cfg);\n            // this.callback=this.config.callback\n            // this.config.callback=undefined\n            // //SelectOrg\n            // var _this = this;\n            var loadPageA = {\n                //页面id 必填\n                pageId: \"rxmSelectOrg\",\n                //页面名称\n                pageName: \"人员组织选择\",\n                //页面序号\n                pageOrder: \"0\",\n                pageType: \"10\",\n                //页面控制  必填\n                pageCtrlUrl: \"www/rxm/widget/org/addOrg\",\n                //页面描述\n                pageDesc: \"人员组织选择\",\n                //页面路由地址  必填\n                pageRouter: \"rxmSelectOrg\",\n                //页面地址  必填\n                pageUrl: \"www/rxm/widget/org/views/addOrg.html\",\n                //打开方式\n                pageOpen: \"_blank\"\n            };\n            ///var page = require(require.rxm.PageBase)\n            var callbackFn = config.callback;\n            delete config.callback;\n            this.slidebar(loadPageA, {\n                title: \"侧边栏\",\n                data: config,\n                titleColor: config.titleBarFontCololr,\n                titleBarBg: config.titleBarBgColor,\n                hiddenTitleBar: true,\n                hiddenBackBtn: false,\n                afterClose: function (evt, args) {\n                    callbackFn && callbackFn(args);\n                }\n            });\n        };\n        ;\n        /**\n         * rxm_dialog.prompt\n         */\n        rxmUtil.prototype.prompt = function (args) {\n            if (typeof args === 'object') {\n                if (args.title == undefined) {\n                    args.title = cssOrm.default.utilPrompt.title;\n                }\n                if (args.btnok == undefined) {\n                    args.btnok = cssOrm.default.utilPrompt.btnok;\n                }\n                if (args.btncancel == undefined) {\n                    args.btncancel = cssOrm.default.utilPrompt.btncancel;\n                }\n                if (args.text == undefined) {\n                    args.text = cssOrm.default.utilPrompt.text;\n                }\n                RxmNativeDialog.prompt(args);\n            }\n        };\n        return rxmUtil;\n    }());\n    return new rxmUtil();\n});\n","define(\"RxmModuleLoginDir\", [\"require\", \"exports\", \"RxmDevice\", \"RxmRsa\", \"RxmMessage\", \"JQuery.validate\", \"RxmAppTool\", \"RxmUtil\", \"RxmRouterMgr\", \"RxmPageBase\"], function (require, exports, device, rsa, rxmMessage, validate, appTool, util, RxmRouterMgr, rxmpage) {\n    \"use strict\";\n    var dollar = $;\n    dollar.validator.setDefaults({\n        errorElement: 'span',\n        highlight: function (target) {\n            var fg = $(target).closest('.login-item'); //.closest获取最近的祖先元素\n            //直接是输入框时，修改输入框的边框样式，比如table中的输入框验证\n            fg.addClass('has-error');\n        },\n        success: function (message) {\n            var fg = message.closest('.login-item');\n            fg.length && fg.removeClass('has-error');\n            message.remove();\n        }\n    });\n    //监听focus事件\n    $(\".login_item\").on(\"focusin\", function () {\n        $(this).addClass(\"has_focus\");\n    });\n    $(\".login_item\").on(\"focusout\", function () {\n        $(this).removeClass(\"has_focus\");\n    });\n    //配置validate\n    var _isRegister;\n    var _rsaPublicExponent;\n    var _rsaPublicModulus;\n    var _selectKeyIndex;\n    //成员变量\n    //登录名录入框选择器\n    var inputLoginNameSelector = \"#pd_web_login_name\";\n    //密码录入框选择器\n    var inputPwdSelector = \"#pd_web_pwd\";\n    //激活码录入框选择器\n    var inputRegisterCode = \"#pd_web_registerCode\";\n    //验证码录入框选择器\n    var inputCaptchaSelector = \"#pd_web_captcha\";\n    //记住密码录入框选择器\n    var inputRememberPsdSelector = \"#pd_web_check_pwd\";\n    //记住用户登录名录入框选择器\n    var inputRememberLoginNameSelector = \"#pd_web_check_login_name\";\n    //自动登录录入框选择器\n    var inputAutoLoginSelector = \"#pd_web_check_autologin\";\n    //提交按钮\n    var btnSubmitSelector = '#pd_web_btn_submit';\n    var formSelector = \"#pd_web_login_form\";\n    var imgCaptchaSelector = \"#pd_web_captcha_img\";\n    var captchaWidth = 112;\n    var captchaHeight = 40;\n    var _captchaUrl = \"\";\n    var _tabsLength = 0;\n    var _curFocus = 0;\n    var _enterSubmit = true;\n    var validator = undefined;\n    var _beginUrl = \"/resoft/x/login/roomuInit\";\n    var _chckPwdUrl = \"/resoft/x/login/roomuChk\";\n    var _submitData;\n    var _onfocus = function (evt) {\n        ///<summary>焦点事件</summary>\n        _curFocus = parseInt($(evt.target).attr(\"tabindex\"));\n        if (_curFocus > _tabsLength - 1 || _curFocus < 0) {\n            _curFocus = 0;\n        }\n        _enterSubmit = true; //可以回车提交\n    };\n    var _initFocus = function () {\n        ///<summary>初始化焦点 </summary>\n        var s = formSelector + \" \" + \":input,button\";\n        var inputs = $(s);\n        inputs.focus($.proxy(this, _onfocus));\n        for (var i = 0; i < inputs.length; i++) {\n            var it = inputs[i];\n            if ($(it).val().length == 0) {\n                $(it).focus();\n                _curFocus = i;\n                break;\n            }\n        }\n    };\n    //设备信息回调\n    var _fDevice = function (e, deviceData) {\n        //将设备信息保存在sessionStorage中\n        sessionStorage.setItem(\"odid\", deviceData.ODID);\n        sessionStorage.setItem(\"phoneNum\", deviceData.MOBILE);\n        sessionStorage.setItem(\"macAddress\", deviceData.MAC_ADDRESS);\n        sessionStorage.setItem(\"deviceType\", deviceData.MODEL);\n        sessionStorage.setItem(\"os\", deviceData.OS);\n        sessionStorage.setItem(\"windowsize\", deviceData.WINDOWSIZE);\n        sessionStorage.setItem(\"manufacturer\", deviceData.MANUFACTURER);\n        var deviceInfo = {\n            \"odid\": deviceData.ODID,\n            \"phoneNum\": deviceData.MOBILE,\n            \"macAddress\": deviceData.MAC_ADDRESS,\n            \"deviceType\": deviceData.MODEL,\n            \"os\": deviceData.OS,\n            \"windowsize\": deviceData.WINDOWSIZE,\n            \"manufacturer\": deviceData.MANUFACTURER\n        };\n        if (e.data != null) {\n            e.data(deviceInfo);\n        }\n    };\n    var onfetchInfoBeforeLoginSuccess = function (d) {\n    };\n    var onfetchInfoBeforeLoginError = function (d) {\n        var param = {\n            modal: 1,\n            title: \"提示\",\n            content: cssOrm.default.prompt.loginError,\n            okBT: \"重试\",\n            cancelBT: \"取消\",\n            okCb: function () {\n                rxm_page.logout(1);\n            },\n            cancelCb: function () { } //取消回调函数\n        };\n        util.confirm(param);\n        // util.alert(cssOrm.default.prompt.loginError);\n    };\n    var fetchInfoBeforeLogin = function () {\n        ///登录之前取 rsa 公钥等信息。\n        if (typeof _rsaPublicExponent === \"undefined\") {\n            var fAjax = function (deviceInfo) {\n                var beginurl = _beginUrl;\n                if (_beginUrl.indexOf(\"/\") != 0) {\n                    beginurl = \"/\" + _beginUrl;\n                }\n                $.ajax({\n                    url: getServer() + beginurl,\n                    data: deviceInfo,\n                    timeout: 10000,\n                    global: false,\n                    success: function (d) {\n                        var isRegister = d.data.deviceActivateTag;\n                        var selectKeyIndex = d.data.selectKeyIndex;\n                        if (isRegister == false) { //需要进行注册验证\n                            $(\"#registerDiv\").css(\"display\", \"\");\n                        }\n                        else { //不需要进行验证\n                            $(\"#registerDiv\").css(\"display\", \"none\");\n                        }\n                        _isRegister = isRegister;\n                        _rsaPublicExponent = d.data.publicExponent;\n                        _rsaPublicModulus = d.data.publicModulus;\n                        _selectKeyIndex = selectKeyIndex;\n                        if (d.RememberUser) { //记住用户名\n                            d.usercode;\n                        }\n                        //将密钥信息保存在localStorage中\n                        localStorage.setItem(\"publicExponent\", _rsaPublicExponent);\n                        localStorage.setItem(\"publicModulus\", _rsaPublicModulus);\n                        localStorage.setItem(\"selectKeyIndex\", _selectKeyIndex);\n                        //预留函数，准备为重写\n                        onfetchInfoBeforeLoginSuccess(d);\n                    },\n                    error: function (d, reason, error) {\n                        onfetchInfoBeforeLoginError(d);\n                    }\n                });\n            };\n            device && device.getDeviceInfo({ callback: _fDevice, data: fAjax });\n        }\n    };\n    var _initTabindex = function () {\n        ///<summary>初始化tab键顺序 </summary>\n        var s = formSelector + \" \" + \":input,button\";\n        var inputs = $(s);\n        for (var i = 0; i < inputs.length; i++) {\n            var it = inputs[i];\n            $(it).attr(\"tabindex\", i + 1);\n            _tabsLength++;\n        }\n    };\n    var onRefreshCaptcha = function () {\n        ///<summary>校验码刷新事件</summary>\n        ///String.valueOf(random());\n        var s = Math.round(Math.random() * 10000).toString();\n        s = _captchaUrl + \"&r=\" + s;\n        if (captchaHeight > 0 && captchaWidth > 0)\n            s += \"&width=\" + captchaWidth.toString() + \"&height=\" + captchaHeight.toString();\n        $(imgCaptchaSelector).attr(\"src\", s);\n        $(inputCaptchaSelector).val(\"\");\n    };\n    var onUserCodeChanged = function (evt) {\n        $(\"#pd_web_pwd\").val(\"\");\n        $(\"#pd_web_check_pwd\").removeAttr(\"checked\");\n    };\n    //没用\n    var _fetchAppVersion = function () {\n        $.ajax({\n            url: getServer() + \"/resoft/x/version/getNewVersion\",\n            type: \"post\",\n            data: {},\n            success: function (result) {\n                // var item = eval(\"(\" + result + \")\");\n                var href = result.data;\n                if ((href != null) && (href != \"\")) {\n                    $(\"#versionDownBtn\").attr(\"href\", getServer() + href);\n                }\n            }\n        });\n    };\n    var _deviceInfo = function (data) {\n        var _this = this;\n        var fChk = function (_data) {\n            var isRegister = _isRegister;\n            var rsaKey = rsa.getKeyPair(_rsaPublicExponent, \"\", _rsaPublicModulus);\n            var _data = _submitData || {};\n            $(btnSubmitSelector).html(\"请求中……\").addClass(\"disabled\");\n            _data.isRegister = rsa.encryptedString(rsaKey, isRegister.toString());\n            _data.password = rsa.encryptedString(rsaKey, $(inputPwdSelector).val());\n            _data.selectKeyIndex = _selectKeyIndex;\n            _data.name = $(inputLoginNameSelector).val();\n            _data.code = \"\";\n            _data.rememberUser = \"\";\n            if (isRegister == false) { //需要进行验证\n                //获取注册码\n                _data.registerCode = rsa.encryptedString(rsaKey, $(inputRegisterCode).val());\n            }\n            else { //不需要进行验证\n                //do nothing\n            }\n            //设备信息 \n            _data.odid = sessionStorage.getItem(\"odid\");\n            _data.phoneNum = sessionStorage.getItem(\"phoneNum\");\n            _data.macAddress = sessionStorage.getItem(\"macAddress\");\n            _data.deviceType = sessionStorage.getItem(\"deviceType\");\n            _data.os = sessionStorage.getItem(\"os\");\n            _data.windowsize = sessionStorage.getItem(\"windowsize\");\n            _data.manufacturer = sessionStorage.getItem(\"manufacturer\");\n            var svr = _chckPwdUrl;\n            if (_chckPwdUrl.indexOf(\"/\") != 0) {\n                svr = \"/\" + _chckPwdUrl;\n            }\n            $.ajax({\n                global: false,\n                url: getServer() + svr,\n                data: _data,\n                success: $.proxy(_this.onPostCheckPwdSuccess, _this),\n                error: $.proxy(_this.onPostCheckPwdError, _this)\n            });\n        };\n        device && device.getDeviceInfo({ callback: _fDevice, data: fChk });\n    };\n    var RxmLoginImpl = /** @class */ (function () {\n        function RxmLoginImpl() {\n            ///没用到，只是保留\n            this.fetchInfoBeforeLogin = fetchInfoBeforeLogin;\n        }\n        RxmLoginImpl.prototype.init = function () {\n            ///<summary>初始化函数 </summary>\n            fetchInfoBeforeLogin();\n            _initTabindex();\n            this.initValidate();\n            $(btnSubmitSelector).unbind();\n            $(btnSubmitSelector).tap($.proxy(this.onLoginSubmit, this));\n            $(\"#pd_web_login_name\").change($.proxy(onUserCodeChanged, this));\n        };\n        ;\n        RxmLoginImpl.prototype.initValidate = function () {\n            ///<summary>初始化校验参数 </summary>\n            validator = $(formSelector).validate({\n                rules: {\n                    pd_web_login_name: \"required\",\n                    pd_web_pwd: \"required\",\n                    pd_web_captcha: \"required\"\n                },\n                messages: {\n                    pd_web_login_name: \"请填写登录名\",\n                    pd_web_pwd: \"请填写密码\",\n                    pd_web_captcha: \"请填写验证码\"\n                },\n                errorPlacement: $.proxy(this.onValidatePlacement, this),\n                Onubmit: false,\n                onfocusout: false,\n                onkeyup: false,\n                onclick: false\n            });\n        };\n        ;\n        RxmLoginImpl.prototype._validateEach = function () {\n            var s = formSelector + \" input,\" + formSelector + \" select\";\n            var inputs = $(s);\n            var b = true;\n            var bFirstFinded = false;\n            for (var i = 0; i < inputs.length; i++) {\n                var it = inputs[i];\n                b = validator.element(it);\n                if (!b && !bFirstFinded) {\n                    $(it).focus();\n                    bFirstFinded = true;\n                }\n            }\n            return !bFirstFinded;\n        };\n        RxmLoginImpl.prototype.onValidatePlacement = function (error, element) {\n            $(element).closest(\".login-item\").find(\".error\").append(error);\n        };\n        RxmLoginImpl.prototype.parseData = function (args) {\n            ///<param  name=\"args\" type=\"String\"></param>\n            var r = args.split(\">|<\");\n            if (r.length == 2) {\n                localStorage._t_n = r[0];\n                localStorage._u_s = r[1];\n            }\n        };\n        RxmLoginImpl.prototype.onPostCheckPwdSuccess = function (data) {\n            var auth = RxmRouterMgr;\n            if (device) { //手机app登录\n                var widget = rxmpage;\n                var message = rxmMessage;\n                if (data.success) {\n                    //var  auth=cssOrm.obj.objOrmPageAuth();\n                    this.parseData(data.data);\n                    if (typeof message !== \"undefined\") {\n                        var tags = [];\n                        tags.push(appTool.getUserID());\n                        message.setTags(tags); //推送标签为用户id\n                    }\n                    if (typeof rxm_count !== \"undefined\") {\n                        rxm_count.setUserId(appTool.getUserID()); //统计日志\n                    }\n                    if (typeof widget !== \"undefined\") {\n                        widget.setLoginStatus('1', '1');\n                    } //改成0，0\n                    auth.load();\n                    $(btnSubmitSelector).html(\"验证通过\");\n                }\n                else {\n                    util.alert(cssOrm.default.prompt.userError);\n                    //alert(\"用户名或密码错误！\");//你们自己 写一下，密码错误的提示\n                    //this.onRefreshCaptcha();\n                    $(btnSubmitSelector).html(\"登录\").removeClass(\"disabled\");\n                    _enterSubmit = true;\n                }\n            }\n            else { //手机模拟器\n                auth.load();\n            }\n        };\n        ;\n        RxmLoginImpl.prototype.onPostCheckPwdError = function (data) {\n            $(btnSubmitSelector).html(\"请求异常\").removeClass(\"disabled\");\n            _enterSubmit = true;\n        };\n        ;\n        //监听登录按钮点击事件\n        RxmLoginImpl.prototype.onLoginSubmit = function () {\n            if (_enterSubmit) {\n                if (this._validateEach()) {\n                    ///添加设备信息，登录信息验证\n                    _deviceInfo.call(this);\n                }\n                ;\n            }\n        };\n        ;\n        RxmLoginImpl.prototype.checkPwd = function (data) {\n            _deviceInfo.call(this, data);\n        };\n        /**从表单获取用户名、密码等\n         *override函数\n        */\n        RxmLoginImpl.prototype.getFormVal = function () {\n            var ret = {\n                name: '',\n                password: '',\n                rememberUser: ''\n            };\n            ret.password = $(inputPwdSelector).val();\n            ret.name = $(inputLoginNameSelector).val();\n            return ret;\n        };\n        //设置_chckPwdUrl\n        RxmLoginImpl.prototype.setChckPwdUrl = function (url) {\n            _chckPwdUrl = url;\n        };\n        //设置_beginUrl\n        RxmLoginImpl.prototype.setBeginUrl = function (url) {\n            _beginUrl = url;\n        };\n        //设置_enterSubmit\n        RxmLoginImpl.prototype.setEnterSubmit = function (flag) {\n            _enterSubmit = flag;\n        };\n        return RxmLoginImpl;\n    }());\n    ;\n    return new RxmLoginImpl();\n});\n","///<amd-module name='RxmAppTool'/>\ndefine(\"RxmAppTool\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var RxmAppToolImpl = /** @class */ (function () {\n        function RxmAppToolImpl() {\n            this.getServer = getServer;\n        }\n        /**\n         * 序列化表单元素为JSON对象（兼容工作流项目组）\n         * @param form          Form表单id或表单jquery DOM对象\n         * @returns {{}}\n         */\n        RxmAppToolImpl.prototype.serialize = function (form) {\n            var $form = (typeof (form) == \"string\" ? $(\"#\" + form) : form);\n            var dataArray = $form.serializeArray(), result = {};\n            $(dataArray).each(function () {\n                if (result[this.name]) {\n                    result[this.name].push(this.value);\n                }\n                else {\n                    var element = $form.find(\"[name='\" + this.name + \"']\")[0];\n                    var type = (element.type || element.nodeName).toLowerCase();\n                    result[this.name] = (/^(select-multiple|checkbox)$/i).test(type) ? [this.value] : this.value;\n                }\n            });\n            return result;\n        };\n        ;\n        /**\n         * 设置表单值（兼容工作流项目组）\n         * @param form     Form表单id或表单jquery DOM对象\n         * @param data     json对象，多选时为数组\n         */\n        RxmAppToolImpl.prototype.deserialize = function (form, data) {\n            var rcheck = /^(?:radio|checkbox)$/i, rselect = /^(?:option|select-one|select-multiple)$/i, rvalue = /^(?:button|color|date|datetime|datetime-local|email|hidden|month|number|password|range|reset|search|submit|tel|text|textarea|time|url|week)$/i;\n            var $form = (typeof (form) == \"string\" ? $(\"#\" + form) : form);\n            //得到所有表单元素\n            function getElements(elements) {\n                return elements.map(function () {\n                    return this.elements ? jQuery.makeArray(this.elements) : this;\n                }).filter(\":input:not(:disabled)\").get();\n            }\n            //把表单元素转为json对象\n            function elementsToJson(elements) {\n                var current, elementsByName = {};\n                jQuery.each(elements, function (i, element) {\n                    current = elementsByName[element.name];\n                    elementsByName[element.name] = current === undefined ? element :\n                        (jQuery.isArray(current) ? current.concat(element) : [current, element]);\n                });\n                return elementsByName;\n            }\n            var elementsJson = elementsToJson(getElements($form));\n            for (var key in data) {\n                var val = data[key];\n                var dataArr = [];\n                if ($.isArray(val)) {\n                    for (var i = 0, v; v = val[i++];) {\n                        dataArr.push({ name: key, value: v });\n                    }\n                }\n                else {\n                    dataArr.push({ name: key, value: val });\n                }\n                for (var m = 0, vObj; vObj = dataArr[m++];) {\n                    var element;\n                    //如果表单中无元素则跳过\n                    if (!(element = elementsJson[vObj.name])) {\n                        continue;\n                    }\n                    var type = element.length ? element[0] : element;\n                    type = (type.type || type.nodeName).toLowerCase();\n                    var property = null;\n                    if (rvalue.test(type)) {\n                        element.value = (typeof (vObj.value) == \"undefined\" || vObj.value == null) ? \"\" : vObj.value;\n                    }\n                    else if (rcheck.test(type)) {\n                        property = \"checked\";\n                    }\n                    else if (rselect.test(type)) {\n                        property = \"selected\";\n                    }\n                    //设置选中\n                    if (property) {\n                        for (var n = 0, e; e = element[n++];) {\n                            if (e.value == vObj.value) {\n                                e[property] = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        // 得到home路径\n        RxmAppToolImpl.prototype.getHomeUrl = function (l) {\n            /// <summary>get home  path</summary>\n            /// <param>local path</param>\n            /// <returns type=\"String\"></returns>\n            var home = '/www/pages/home.html';\n            if (this.isLocalLoad()) {\n                home = 'www/pages/home.html';\n            }\n            l = l || '';\n            return home + l;\n        };\n        RxmAppToolImpl.prototype.getJumpUrl = function (l) {\n            /// <summary>get home  path</summary>\n            /// <param>local path</param>\n            /// <returns type=\"String\"></returns>\n            var jump = '/www/pages/jumpPage.html';\n            if (this.isLocalLoad()) {\n                jump = 'www/pages/jumpPage.html';\n            }\n            l = l || '';\n            return jump + l;\n        };\n        // 得到actionid\n        RxmAppToolImpl.prototype.getActionId = function () {\n            return cssOrm._global_.__ormglobal.actionId;\n        };\n        // 得到app传进来的参数\n        RxmAppToolImpl.prototype.getAppArgs = function () {\n            return cssOrm._global_.__ormglobal.args;\n        };\n        RxmAppToolImpl.prototype.getWidgetInitData = function () {\n            var ret = {};\n            var _g = cssOrm._global_.__ormglobal;\n            _g.args && _g.args.data && (ret = _g.args.data);\n            return ret;\n        };\n        RxmAppToolImpl.prototype.isJump = function () {\n            return (!!cssOrm._global_.__ormglobal.args) && (!!cssOrm._global_.__ormglobal.args._jump);\n        };\n        // 本地加载\n        RxmAppToolImpl.prototype.isLocalLoad = function () {\n            return cssOrm._global_.__ormglobal.isLocalLoad;\n        };\n        // 是否是app打开的程序\n        RxmAppToolImpl.prototype.isAppOpen = function () {\n            return cssOrm._global_.__ormglobal.isAppOpen;\n        };\n        RxmAppToolImpl.prototype.isDesktopOpen = function () {\n            /// <summary>桌面系统打开 </summary>\n            // 这个函数不是返回手机的真实像素，而是 放大了的，iphone 6plus 414 实际上要高的多\n            return (window.screen.width >= 1024);\n        };\n        RxmAppToolImpl.prototype.isMobileOpen = function () {\n            return !this.isDesktopOpen();\n        };\n        RxmAppToolImpl.prototype.getUpdateUrl = function () {\n            var r = cssOrm._global_.__ormglobal.url;\n            if (!r) {\n                r = window.location.protocol + '//' + window.location.host;\n            }\n            else if (r.lastIndexOf('/') === r.length - 1) {\n                r = r.substr(0, r.length - 1);\n            }\n            return r;\n        };\n        RxmAppToolImpl.prototype.getHostUrl = function () {\n            return window.location.protocol + '//' + window.location.host + getServer();\n        };\n        RxmAppToolImpl.prototype.isAndriod = function () {\n            /// <summary>判断是不是android</summary>\n            return navigator.userAgent.toLowerCase().indexOf('android') != -1;\n        };\n        RxmAppToolImpl.prototype.isIOS = function (flatform) {\n            /// <summary>判断是不是IOS</summary>\n            /// <param  name=\"flatform\" type=\"String\">移动平台种类 iPad iPhone 等</param>\n            /// <returns  type=\"Boolean\"></returns>\n            var names = ['ipad', 'iphone', 'ipod', 'ios']; // basic functionality such as swipe, pinch, rotate, tap should work on every mobile safari, e.g. GalaxyTab\n            if (typeof flatform !== 'undefined') {\n                names = [];\n                names.push(flatform);\n            }\n            var _i;\n            for (_i = 0; _i < names.length; _i++) {\n                if (navigator.userAgent.toLowerCase().indexOf(names[_i]) !== -1) {\n                    return true;\n                }\n            }\n            ;\n            return false;\n        };\n        RxmAppToolImpl.prototype.isRxmdk = function () {\n            return cssOrm._global_.__ormglobal.isRxmdk;\n        };\n        /**在编辑器状态 */\n        RxmAppToolImpl.prototype.isInEditor = function () {\n            var r;\n            (r = parseInt(cssOrm._global_.__ormglobal.isRxmdk)) && (r = (r % 10 == 1));\n            return r;\n        };\n        /**在编辑器状态 */\n        RxmAppToolImpl.prototype.isInRun = function () {\n            var r = cssOrm._global_.__ormglobal.isRxmdk;\n            r && (r = (r % 10 != 1));\n            return r;\n        };\n        RxmAppToolImpl.prototype.isMobileSimulator = function () {\n            var r = cssOrm._global_.__ormglobal.isRxmdk;\n            if (r) {\n                return (r = r / 10 % 10 == 1);\n            }\n            return r;\n        };\n        // WdgtInstance (value: { _cfg: { id: string | number; }; }) {\n        //   cssOrm._global_.__ormglobal.wdgtInstance = cssOrm._global_.__ormglobal.wdgtInstance || {}\n        //   cssOrm._global_.__ormglobal.wdgtInstance[value._cfg.id] = value\n        // }\n        RxmAppToolImpl.prototype.chgMode = function (addressArgs, mode) {\n            if ($.isString(addressArgs)) {\n                var auth = cssOrm.obj.clsOrmPageAuth();\n                var args = auth._find(addressArgs);\n            }\n        };\n        RxmAppToolImpl.prototype.getUserID = function () {\n            if (window.history.state && window.history.state.urcb_user_id) {\n                localStorage._u_s = window.history.state.urcb_user_id;\n                return window.history.state.urcb_user_id;\n            }\n            else {\n                return (!!cssOrm._global_.__ormglobal.args.data ? cssOrm._global_.__ormglobal.args.data.userId : undefined) || localStorage._u_s;\n            }\n            // return (!!cssOrm._global_.__ormglobal.args.data?cssOrm._global_.__ormglobal.args.data.userId:undefined)||localStorage._u_s\n        };\n        RxmAppToolImpl.prototype.getSettingData = function () {\n            // 获取设置数据\n            var _s_d_name = '_s_d_' + localStorage._u_s;\n            var _s_d_data;\n            if (localStorage.getItem(_s_d_name) != null) {\n                var sdObj = JSON.parse(localStorage.getItem(_s_d_name));\n                sdObj.wifi = JSON.parse(sdObj.wifi);\n                sdObj.video = JSON.parse(sdObj.video);\n                sdObj.voice = JSON.parse(sdObj.voice);\n                sdObj.image = JSON.parse(sdObj.image);\n                _s_d_data = sdObj;\n            }\n            else {\n                // 默认设置\n                var sdObj = {};\n                sdObj.wifi = cssOrm.default.wifi;\n                sdObj.video = cssOrm.default.video;\n                sdObj.voice = cssOrm.default.voice;\n                sdObj.image = cssOrm.default.image;\n                var sdObjl = {};\n                sdObjl.wifi = JSON.stringify(cssOrm.default.wifi);\n                sdObjl.video = JSON.stringify(cssOrm.default.video);\n                sdObjl.voice = JSON.stringify(cssOrm.default.voice);\n                sdObjl.image = JSON.stringify(cssOrm.default.image);\n                localStorage.setItem(_s_d_name, JSON.stringify(sdObjl));\n                _s_d_data = sdObj;\n            }\n            return _s_d_data;\n        };\n        RxmAppToolImpl.prototype.setSettingVideo = function (args) {\n            // 设置视频参数数据\n            var _s_d_name = '_s_d_' + localStorage._u_s;\n            var storageArgs = { 'wifi': JSON.stringify(this.getSettingData().wifi), 'video': JSON.stringify($.extend(true, {}, cssOrm.default.video, args)), 'voice': JSON.stringify(this.getSettingData().voice), 'image': JSON.stringify(this.getSettingData().image) };\n            localStorage.setItem(_s_d_name, JSON.stringify(storageArgs));\n        };\n        RxmAppToolImpl.prototype.setSettingVoice = function (args) {\n            // 设置声音参数数据\n            var _s_d_name = '_s_d_' + localStorage._u_s;\n            var storageArgs = { 'wifi': JSON.stringify(this.getSettingData().wifi), 'video': JSON.stringify(this.getSettingData().video), 'voice': JSON.stringify($.extend(true, {}, cssOrm.default.voice, args)), 'image': JSON.stringify(this.getSettingData().image) };\n            localStorage.setItem(_s_d_name, JSON.stringify(storageArgs));\n        };\n        RxmAppToolImpl.prototype.setSettingImage = function (args) {\n            // 设置图片参数数据\n            var _s_d_name = '_s_d_' + localStorage._u_s;\n            var storageArgs = { 'wifi': JSON.stringify(this.getSettingData().wifi), 'video': JSON.stringify(this.getSettingData().video), 'voice': JSON.stringify(this.getSettingData().voice), 'image': JSON.stringify($.extend(true, {}, cssOrm.default.image, args)) };\n            localStorage.setItem(_s_d_name, JSON.stringify(storageArgs));\n        };\n        RxmAppToolImpl.prototype.setSettingWifi = function (args) {\n            // 设置wifi参数数据\n            var _s_d_name = '_s_d_' + localStorage._u_s;\n            var storageArgs = { 'wifi': JSON.stringify($.extend(true, {}, cssOrm.default.wifi, args)), 'video': JSON.stringify(this.getSettingData().video), 'voice': JSON.stringify(this.getSettingData().voice), 'image': JSON.stringify(this.getSettingData().image) };\n            localStorage.setItem(_s_d_name, JSON.stringify(storageArgs));\n        };\n        RxmAppToolImpl.prototype.uuid = function () {\n            /// <summary >产生32位uuid</summary>\n            /// <returns type=\"String\"></returns>\n            var UUID = {};\n            // INSTANCE SPECIFIC METHODS\n            //\n            UUID.createUUID = function () {\n                var dg = new Date(1582, 10, 15, 0, 0, 0, 0);\n                var dc = new Date();\n                var t = dc.getTime() - dg.getTime();\n                var tl = UUID.getIntegerBits(t, 0, 31);\n                var tm = UUID.getIntegerBits(t, 32, 47);\n                var thv = UUID.getIntegerBits(t, 48, 59) + '1'; // version 1, security version is 2\n                var csar = UUID.getIntegerBits(UUID.rand(4095), 0, 7);\n                var csl = UUID.getIntegerBits(UUID.rand(4095), 0, 7);\n                // since detection of anything about the machine/browser is far to buggy,\n                // include some more random numbers here\n                // if NIC or an IP can be obtained reliably, that should be put in\n                // here instead.\n                var n = UUID.getIntegerBits(UUID.rand(8191), 0, 7) +\n                    UUID.getIntegerBits(UUID.rand(8191), 8, 15) +\n                    UUID.getIntegerBits(UUID.rand(8191), 0, 7) +\n                    UUID.getIntegerBits(UUID.rand(8191), 8, 15) +\n                    UUID.getIntegerBits(UUID.rand(8191), 0, 15); // this last number is two octets long\n                return tl + tm + thv + csar + csl + n;\n            };\n            // Pull out only certain bits from a very large integer, used to get the time\n            // code information for the first part of a UUID. Will return zero's if there\n            // aren't enough bits to shift where it needs to.\n            UUID.getIntegerBits = function (val, start, end) {\n                var base16 = UUID.returnBase(val, 16);\n                var quadArray = new Array();\n                var quadString = '';\n                var i = 0;\n                for (i = 0; i < base16.length; i++) {\n                    quadArray.push(base16.substring(i, i + 1));\n                }\n                for (i = Math.floor(start / 4); i <= Math.floor(end / 4); i++) {\n                    if (!quadArray[i] || quadArray[i] == '') {\n                        quadString += '0';\n                    }\n                    else {\n                        quadString += quadArray[i];\n                    }\n                }\n                return quadString;\n            };\n            // Replaced from the original function to leverage the built in methods in\n            // JavaScript. Thanks to Robert Kieffer for pointing this one out\n            UUID.returnBase = function (number, base) {\n                return (number).toString(base).toUpperCase();\n            };\n            // pick a random number within a range of numbers\n            // int b rand(int a); where 0 <= b <= a\n            UUID.rand = function (max) {\n                return Math.floor(Math.random() * (max + 1));\n            };\n            return UUID.createUUID();\n        };\n        RxmAppToolImpl.prototype.unid = function (len) {\n            var l = len || 7;\n            return '' + Math.round(Math.random() * Math.pow(10, l));\n        };\n        /**判断是唯一对象 */\n        RxmAppToolImpl.prototype.thisObj = function (id, value, objName) {\n            var tmp;\n            var _id = id;\n            if (typeof id == \"string\") {\n                //判断id首字符是否为'#'号\n                if (id.indexOf(\"#\") !== 0) {\n                    _id = $(\"#\" + id);\n                }\n            }\n            !objName && (objName = 'rx_m__o');\n            if (!value && (tmp = $(_id).data(objName)))\n                return tmp;\n            value && $(_id).data(objName, value);\n            return value;\n        };\n        return RxmAppToolImpl;\n    }());\n    cssOrm.obj.rxm_app = new RxmAppToolImpl();\n    return cssOrm.obj.rxm_app;\n});\n","define(\"RxmRouterMgr\", [\"require\", \"exports\", \"RxmMd5Bulid\", \"RxmAppTool\"], function (require, exports, md5, appTool) {\n    \"use strict\";\n    var _ready;\n    //let _authIds: { [key: string]: TPageRouterArgs }\n    var rqr = window;\n    var pblcRoutersPath = ''; //'www/rxm/core/base/rxmPageAuth.json'\n    var privateRouterPath = 'resoft/page/getComPage'; //'resoft/page/getPrivatePage'\n    //公有路由\n    var _publicPage = {};\n    //私有路由\n    var _privatePage = {};\n    //窗口之间传递的路由\n    var _pageAuth;\n    //全部路由\n    var _auth;\n    var _sortByItem = function (arr, itemName) {\n        return arr.sort(function (a, b) { return a[itemName] - b[itemName]; });\n    };\n    var _isReady = function () {\n        return _ready;\n    };\n    /** 同步执行函数 根据名字和id 获取路由值\n     * @param pageRouter\n     */\n    var _getRouterValue = function (pageRouter) {\n        //优先判断一下 全局中的router\n        var item = cssOrm._global_.__ormglobal.args.router;\n        if (pageRouter && item.pageRouter !== pageRouter) {\n            item = _auth[pageRouter];\n        }\n        return item;\n    };\n    /**\n     *\n     * @param {String} pageRouter 权限路由或者pageId\n     * @returns  {Array.<rxm.router>}\n     */\n    var _getSons = function (auth, pRouter) {\n        var ret = [];\n        for (var key in auth) {\n            if (auth.hasOwnProperty((key))) {\n                var element = auth[(key)];\n                if (element.pagePid == pRouter) {\n                    ret.push(element);\n                }\n            }\n        }\n        ret = _sortByItem(ret, 'pageOrder');\n        return ret;\n    };\n    /**\n     * 生成HomeBar\n     */\n    var _homeBar = function (b, widgetArgs) {\n        var arrHome = [];\n        var hashOne;\n        //http模式 不传递\n        for (var i = 0; i < b.length; i++) {\n            var it = b[i];\n            var item = $.extend(true, {}, cssOrm.default.homePageDefault);\n            item.pageId = it.pageId;\n            item.pageActionID = 'CI';\n            item.pageArgs = {};\n            item.tabSelectImg = it.pageIcon;\n            var u = '' + it.pageIcon;\n            var len = u.lastIndexOf('.');\n            item.tabUnSelectImg = u.substr(0, len) + '_u' + u.substring(len, u.length);\n            item.pageUrl = (it.pageUrl.indexOf('http://') === 0 || it.pageType == '10') ? it.pageUrl : '#' + it.pageRouter;\n            item.tabTxt = it.pageName;\n            item.pageArgs = $.extend(true, {}, cssOrm.default.homePageArgs, widgetArgs, {\n                title: it.pageDesc,\n                router: it,\n                _tabIndex: i\n            });\n            arrHome.push(item);\n        }\n        return arrHome;\n    };\n    /**\n       *\n       * @param {Function} f\n       * @param {Array}}} a\n       */\n    var _load = function (f, a) {\n        var the = this;\n        if (!_isReady() || a) {\n            rqr.require([pblcRoutersPath.length > 0 ? 'text!' + getServer() + '/' + pblcRoutersPath : ''], function (_currentPageAuth) {\n                _ready = true;\n                if (_currentPageAuth != null) {\n                    var publicAuth = JSON.parse(_currentPageAuth);\n                    if (publicAuth.comPage != null) {\n                        for (var i = 0; i < publicAuth.comPage.length; i++) {\n                            _publicPage[publicAuth.comPage[i].pageRouter] = publicAuth.comPage[i];\n                        }\n                        _auth = $.extend({}, _pageAuth, _publicPage);\n                    }\n                }\n                if (a && a.url) {\n                    $.ajax({\n                        url: getServer() + \"/\" + a.url,\n                        success: function (data) {\n                            a.success && (a.success(data));\n                            var _data = data.data;\n                            for (var i = 0; i < _data.length; i++) {\n                                var item = _data[i];\n                                if (item.pageRouter != null) {\n                                    _privatePage[item.pageRouter] = item;\n                                }\n                            }\n                            _auth = $.extend(_auth, _privatePage);\n                            _ready = true;\n                            f && f(_auth);\n                        },\n                        error: function () {\n                            f && f(_auth);\n                        }\n                    });\n                }\n                else {\n                    f && f(_auth);\n                }\n            });\n        }\n        else {\n            f && f.apply(the, _auth);\n        }\n    };\n    /**\n    * 加载router 指定的页面\n    * router 为空时，按照当前的hash值加载后台定制的网页，hash值为空，表示加载home页\n    * @param {rxm.router} router\n    * @param {rxm.page.loadArgs2} widgetArgs\n    */\n    var _loadByRouter = function (router, widgetArgs) {\n        // if ($.isString(router)) {\n        //   var r = _getRouterValue(router)\n        //   if (!r && !_isReady()) {\n        //     _load(_loadByRouter)\n        //     return\n        //   }\n        //   router = r\n        // }\n        if (!!widgetArgs && !!widgetArgs.target && (widgetArgs.target === '_blank' || widgetArgs.target == '_self')) {\n            if (!router.pageOpen) {\n                router.pageOpen = widgetArgs.target;\n            }\n        }\n        else {\n            widgetArgs = typeof widgetArgs === 'undefined' ? {} : widgetArgs;\n            widgetArgs.target = router.pageOpen || cssOrm.default.loadTarget;\n        }\n        if (widgetArgs.target === '_blank') {\n            // 弹出窗口参数\n            var arg = $.extend(cssOrm.default.loadPageDefault, widgetArgs);\n            arg.router = router;\n            arg.target = '_self';\n            var jumpUrl = '';\n            // if (typeof  f!==\"undefined\") { cssOrm.on(cssOrm.evt.enumAppMsg.jumpPageMsg, router.uuid, f, true) };\n            if (router.pageType == '1') {\n                var hArgs = appTool;\n                jumpUrl = hArgs.getJumpUrl();\n                var hArgs = appTool;\n                if (hArgs.isAndriod()) {\n                    if (typeof router.pageRouter !== 'undefined') {\n                        jumpUrl += '#' + router.pageRouter;\n                    }\n                    ;\n                    arg.hash = undefined;\n                }\n                else {\n                    arg.hash = router.pageRouter;\n                }\n                ;\n            }\n            else if (router.pageType == '10') {\n                //不是斜杠\n                if (!(router.pageUrl.indexOf('/') === 0)) {\n                    //起始http,不处理\n                    if (router.pageUrl.indexOf('http') === 0) {\n                        jumpUrl = router.pageUrl;\n                    }\n                    //其他加杠 \n                    else {\n                        jumpUrl = '/' + router.pageUrl;\n                    }\n                }\n                //起始是斜杠\n                else {\n                    jumpUrl = router.pageUrl;\n                }\n            }\n            if (arg && !arg._auth) {\n                //var routerTmp: any = {}\n                //routerTmp[router.pageRouter] = router\n                if (appTool.isLocalLoad()) { //本地加载模式\n                    //arg._auth = $.extend({}, _pageAuth, routerTmp)\n                }\n                else { //http模式 不传递\n                    //arg._auth = routerTmp\n                }\n            }\n            var rxmPageBase = rqr.require('RxmPageBase');\n            rxmPageBase.jumpPage('CI', jumpUrl, arg);\n        }\n        else if (widgetArgs.target === '_self') {\n            if (_openHttpPage(router.pageUrl))\n                return;\n            var usrHash = router.pageRouter;\n            if (!!usrHash && usrHash.substr(0, 1) != '#') {\n                usrHash = '#' + usrHash;\n            }\n            if (usrHash) {\n                if (usrHash != window.location.hash) {\n                    var href = window.location.href.split('#')[0];\n                    if (widgetArgs.back) {\n                        // widgetArgs.back==true 时允许回退，否者不允许回退\n                        window.history.pushState({\n                            router: router,\n                            args: widgetArgs\n                        }, '', href + usrHash);\n                    }\n                    else {\n                        window.history.replaceState({\n                            router: router,\n                            args: widgetArgs\n                        }, '', href + usrHash);\n                    }\n                    ;\n                    window.location.reload();\n                }\n                else {\n                    window.location.reload();\n                }\n                ;\n            }\n        }\n    };\n    var _openHttpPage = function (url) {\n        if (!!url && (url.indexOf('http://') == 0 || url.indexOf('https://') == 0)) {\n            window.location.href = url;\n            return true;\n        }\n        return false;\n    };\n    /**\n       * 初始化页面或者加载当前的页面\n       */\n    var _loadEvt = function (a) {\n        /// <summary>  </summary>\n        var the = this;\n        if (a) {\n            var s = getServer() + '/';\n            var t = 'text!' + s + a.pageUrl;\n            var rqr_1 = window;\n            rqr_1.require([t], function (content) {\n                $('#rxm_content').html(content);\n                rqr_1.require([s + a.pageCtrlUrl + '.js'], function (page) {\n                    if (!page.init(the, appTool, a)) {\n                        $('#rxm_loading').remove();\n                    }\n                    $('#rxm_content').css('visibility', 'visible');\n                    if (appTool.isIOS()) {\n                        if ($('#rxm_content').find('.s_grid_ellipsis').length <= 0) {\n                            $('#rxm_content').css('height', $(document).height()).addClass('content-class');\n                        }\n                    }\n                });\n            });\n        }\n    };\n    var RxmRouterMgrImpl = /** @class */ (function () {\n        function RxmRouterMgrImpl() {\n            //权限缓加载方案，解决第二次解决 android 不同窗口之间的\n            var homeArgs = appTool;\n            //获取传递的权限参数\n            _pageAuth = {};\n            homeArgs.getAppArgs() && homeArgs.getAppArgs()._auth && (_pageAuth = homeArgs.getAppArgs()._auth);\n            _ready = false;\n            !_auth && (_auth = {});\n        }\n        RxmRouterMgrImpl.prototype.attrRemoteUrl = function (url) {\n            url && (privateRouterPath = url);\n            return privateRouterPath;\n        };\n        RxmRouterMgrImpl.prototype.attrJsonUrl = function (url) {\n            url && (pblcRoutersPath = url);\n            return pblcRoutersPath;\n        };\n        RxmRouterMgrImpl.prototype.getSonsByGroup = function (pageIdOrPageRouter, callback) {\n            _load.call(this, function (auths) {\n                var id = pageIdOrPageRouter;\n                var address = _getRouterValue(id);\n                if (typeof address !== 'undefined' && typeof address.pageId !== 'undefined') {\n                    id = address.pageId;\n                }\n                ;\n                var r = {};\n                $.each(auths, function (index, it) {\n                    if (it.pagePid == id) {\n                        var s = it.pageCtrl.length > 0 ? it.pageCtrl : 'noGroup';\n                        r[s] = r[s] || [];\n                        r[s].push(it);\n                    }\n                });\n                $.each(r, function (index, arr) {\n                    _sortByItem(arr, 'pageOrder');\n                });\n                callback && callback(r);\n            }, { url: getServer() + privateRouterPath });\n        };\n        /** 获取跟路由信息\n         *\n        */\n        RxmRouterMgrImpl.prototype.getAuthRoot = function (callback) {\n            this.getRouterValue('root', callback);\n        };\n        /** 获得home页面路由\n         * @returns {Array.<rxm.router>}\n         */\n        RxmRouterMgrImpl.prototype.getAuthHome = function (callback) {\n            //!_isReady() && _load()\n            this.getSons('root', callback);\n        };\n        /** 根据名字和id 获取路由值\n         * @param {String}  pageRouter\n         */\n        RxmRouterMgrImpl.prototype.getRouterValue = function (pageRouter, callback) {\n            //2019-7-5 大部分路由的信息都不需要访问网络\n            var item = _getRouterValue(pageRouter);\n            if (item) {\n                callback(item);\n            }\n            else {\n                _load.call(this, function () {\n                    var item = _getRouterValue(pageRouter);\n                    callback(item);\n                }, { url: getServer() + privateRouterPath });\n            }\n        };\n        /**\n         * 清除内存中的路由信息\n         */\n        RxmRouterMgrImpl.prototype.clean = function () {\n            _auth = {};\n        };\n        /**\n         * 根据id 路由名称获取所有的子路由\n         * @param  pageIdOrPageRouter\n         */\n        RxmRouterMgrImpl.prototype.getSons = function (pageIdOrPageRouter, callback) {\n            _load.call(this, function () {\n                var id = pageIdOrPageRouter;\n                var address = _getRouterValue(id);\n                if (typeof address !== 'undefined' && typeof address.pageId !== 'undefined') {\n                    id = address.pageId;\n                }\n                ;\n                var r = [];\n                $.each(_auth, function (index, it) {\n                    if (it.pagePid == id) {\n                        r.push(it);\n                    }\n                });\n                _sortByItem(r, 'pageOrder');\n                callback(r);\n            }, { url: getServer() + privateRouterPath });\n        };\n        /**\n         * 获取组成员\n         * @param {String} groupName\n         * @returns {Array.<vo.orm.router>}\n         */\n        RxmRouterMgrImpl.prototype.getGroupRemembers = function (groupName, callback) {\n            _load.call(this, function () {\n                var r = [];\n                $.each(_auth, function (index, it) {\n                    if (it.pageCtrl === groupName) {\n                        r.push(it);\n                    }\n                });\n                _sortByItem(r, 'pageOrder');\n                callback(r);\n            }, { url: getServer() + privateRouterPath });\n        };\n        /**\n         * 获取父亲路由值\n         * @param {String} pageIdOrPageRouter\n         * @returns {vo.orm.router}\n         */\n        RxmRouterMgrImpl.prototype.getParent = function (pageIdOrPageRouter, callback) {\n            _load.call(this, function () {\n                var id = pageIdOrPageRouter || window.location.hash.substr(1);\n                var address = _getRouterValue(id);\n                id = address.pageRouter || '';\n                callback(_getRouterValue(id));\n            }, { url: getServer() + privateRouterPath });\n        };\n        /**\n         * 关闭当前窗口\n         * @param {Object} data\n         * @returns {vo.orm.router} -返回数据\n         */\n        RxmRouterMgrImpl.prototype.closeJumpPage = function (data) {\n            var rxmPageBase = rqr.require('RxmPageBase');\n            rxmPageBase.closePage(data);\n        };\n        /**\n         * 加载router 指定的页面  保留为了维持老的代码\n         * router 为空时，按照当前的hash值加载后台定制的网页，hash值为空，表示加载home页\n         * @param router\n         * @param widgetArgs\n         */\n        RxmRouterMgrImpl.prototype.load = function (router, widgetArgs) {\n            if (typeof router === 'undefined') {\n                var h = window.location.hash.substr(1);\n                if (h.length == 0) {\n                    // 初始化Home\n                    this.loadHome();\n                    return;\n                }\n                else {\n                    //老的用路由的方式打开的页面，在 www/rxm/core/page/home.js 和jumppage.js中调用了\n                    this.getRouterValue(h, $.proxy(_loadEvt, this));\n                }\n            }\n            else if (router.pageRouter && (!!router.pageRouter || !!router.pageOpen || !!router.pageId)) {\n                !widgetArgs && (widgetArgs = {});\n                return _loadByRouter(router, widgetArgs);\n            }\n        };\n        RxmRouterMgrImpl.prototype.loadHome = function (args) {\n            var homes = [];\n            if (!args) {\n                _load.call(this, function (auths) {\n                    homes = _homeBar(_getSons(auths, 'root'));\n                    var rxmPageBase = rqr.require('RxmPageBase');\n                    rxmPageBase.jumpHome(homes, 1);\n                }, { url: getServer() + privateRouterPath });\n            }\n            else {\n                if (args.local && args.local.routers) {\n                    //本地的加载的权限\n                    // let routers=[]\n                    for (var i = 0; i < args.local.routers.length; i++) {\n                        if (!!args.local.routers[i].args) {\n                            var routerDdefault = [];\n                            routerDdefault.push(args.local.routers[i].router);\n                            var addDefaultRouter = _homeBar(routerDdefault, args.local.routers[i].args);\n                            homes.push(addDefaultRouter[0]);\n                        }\n                    }\n                    // homes = _homeBar(routers)\n                }\n                /** 远程的权限 */\n                if (args.remote && args.remote.url) {\n                    _load.call(this, function (auths) {\n                        var h = _homeBar(_getSons(auths, 'root'));\n                        homes.push.apply(homes, h);\n                        var rxmPageBase = rqr.require('RxmPageBase');\n                        rxmPageBase.jumpHome(homes, 1);\n                    }, args.remote);\n                }\n                else {\n                    var rxmPageBase = rqr.require('RxmPageBase');\n                    rxmPageBase.jumpHome(homes, 1);\n                }\n            }\n        };\n        RxmRouterMgrImpl.prototype.reset = function () {\n        };\n        return RxmRouterMgrImpl;\n    }());\n    var thisObj = new RxmRouterMgrImpl();\n    return thisObj;\n});\n","define(\"RxmCmdMgr\", [\"require\", \"exports\", \"RxmAppTool\", \"RxmTopCmdQueue\", \"RxmGstrEsy\"], function (require, exports, appTool, cmdQuery) {\n    \"use strict\";\n    var _cmdObj = {};\n    /**获取iframe id */\n    var selfid = function () {\n        return self.frameElement == null ? 'windowtop' : self.frameElement.id;\n    };\n    /**\n     * 解析 #id@cmd 形式的cmd selector\n     * @param {String} selector\n     * @returns {{id:'',msgType:''}}\n     */\n    var _parseSelector = function (selector) {\n        var ret = {};\n        if (!selector || selector.length == 0) {\n            return;\n        }\n        /**@type {Array.<String>} */\n        var tmpsplit = selector.split('@');\n        if (tmpsplit.length == 1) {\n            ret.msgType = tmpsplit[0];\n        }\n        if (tmpsplit.length == 2) {\n            ret.id = tmpsplit[0];\n            ret.msgType = tmpsplit[1];\n        }\n        return ret;\n    };\n    /** */\n    /**\n    * 根据rxmcmdid 绑定消息\n    * @param {rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}} args\n    */\n    var bindcmd = function (args) {\n        //绑定远程\n        args.bindWinId = selfid();\n        args.fn = args.fn || args.cb || args.callback;\n        if (!args.fn)\n            return;\n        !args.fn.unid && (args.fn.unid = appTool.unid());\n        if (this.selector && this.selector.length > 0) {\n            var tmp = _parseSelector(this.selector);\n            tmp && tmp.id && (args.id = tmp.id);\n            tmp && tmp.msgType && (args.msgType = tmp.msgType);\n        }\n        if (!args.msgType || args.msgType.length == 0) {\n            console.error('cmdType 不能为空');\n        }\n        var key = args.msgType;\n        if (key && key.length > 0) {\n            !_cmdObj[key] && (_cmdObj[key] = []);\n            _cmdObj[key].push(args);\n        }\n        if (args.hearFrom && args.hearFrom.length > 0) {\n            cmdQuery.bindCmd(args, triggerCmd);\n        }\n    };\n    /**\n     *\n     * @param {rxm.cmd.bindArgs |{bindWinId:'',triggerWinId:''}} bindcmd\n     * @param {rxm.cmd.bindArgs |{bindWinId:'',triggerWinId:''}} unbindcmd\n     */\n    var _isRemove = function (bindcmd, unbindcmd) {\n        var isRemove = true;\n        unbindcmd.fn && (isRemove = isRemove && (bindcmd.fn = unbindcmd.fn));\n        isRemove && unbindcmd.msgType && (isRemove = isRemove && (unbindcmd.msgType == bindcmd.msgType));\n        isRemove && unbindcmd.id && (isRemove = isRemove && (unbindcmd.id == bindcmd.id));\n        return isRemove;\n    };\n    /**\n    * 根据rxmcmdid 解绑定消息\n    * @param {rxm.cmd.bindArgs |{bindWinId:'',triggerWinId:''}} args   解绑的内容可选\n    */\n    var unbindcmd = function (args) {\n        args.fn = args.fn || args.cb || args.callback;\n        if (this.selector && this.selector.length > 0) {\n            var tmp = _parseSelector(this.selector);\n            tmp && tmp.id && (args.id = tmp.id);\n            tmp && tmp.msgType && (args.msgType = tmp.msgType);\n        }\n        if (!args.msgType || args.msgType.length == 0) {\n            console.error('cmdType 不能为空');\n        }\n        /**@type {Array.<rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}>} */\n        var its = _cmdObj[args.msgType];\n        /**@type {rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}} */\n        var it;\n        if (its && its.length > 0) {\n            for (var i = its.length - 1; i >= 0; i--) {\n                it = its[i];\n                if (_isRemove(it, args)) {\n                    its.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * @param {rxm.cmd.triggerArgs} trArgs 可选不填写\n     */\n    var triggerCmd = function (args) {\n        //var data, e, args\n        //trArgs&&(data=trArgs.data)&&(delete trArgs.data )\n        //trArgs&&(e=trArgs.originalEvent)&&(delete trArgs.originalEvent )\n        /**@type {cmdTopQueue} */\n        var dispatch;\n        var ret;\n        args.msgType = args.msgType || this.selector;\n        //确定消息类型，这个是需要改进的\n        if (!!(args.sayTo && (args.sayTo == 'self')) || (typeof args.triggerWinId != 'undefined')) {\n            //来自远程的激活 ，不用激活远程的监听,避免消息泛滥\n            args.triggerWinId = selfid();\n            localTrigger(args);\n        }\n        else {\n            //本地执行，并激活远程由远程类来决定需要激活的窗口\n            args.triggerWinId = selfid();\n            ret = localTrigger(args);\n            ret.fnreturn && (!args.rxmStopDispatch) && (cmdQuery) && (cmdQuery.triggerCmd(args));\n        }\n    };\n    /**\n  *\n  * @param {Object} data\n  * @param {Event} e\n  * @param {rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}} args\n  */\n    var localTrigger = function (args, e, data) {\n        data = args.data;\n        e = args.originalEvent;\n        //add by xiangcq 20190107 按钮添加active状态 判断按钮是否具有rxmactive属性\n        if (e) {\n            if (typeof ($(e.target).closest(\".rxm-cmd-btnbar\").attr(\"rxmactive\")) !== \"undefined\") {\n                $(e.target).closest(\".rxm-cmd-btnbar\").find('button').attr(\"class\", \"\");\n                $(e.target).closest(\"button\").addClass(\"rxm-active\");\n            }\n        }\n        /** @param {rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}} item */\n        function canExcByDispath(item) {\n            if (item.bindWinId == args.triggerWinId)\n                return true;\n            if (!item.hearFrom)\n                return false;\n            /**@type  {Array.<String>} */\n            var arrTmp = item.hearFrom.split(',');\n            arrTmp && (arrTmp.contains = function (val) {\n                for (var i = 0; i < this.length; i++) {\n                    if (this[i] == val) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n            if (arrTmp && arrTmp.contains('all') || arrTmp.contains(args.triggerWinId)) {\n                return true;\n            }\n            return false;\n        }\n        var ret = { fnreturn: true };\n        var type = args.msgType;\n        /**@type {Array.<rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}> }*/\n        var arrHandler;\n        /**@type {rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}} */\n        var item;\n        var one = [];\n        if (arrHandler = _cmdObj[type]) {\n            for (var i = 0; i < arrHandler.length; i++) {\n                //绑定有id但激活没有id 或者id 不相等，不执行\n                item = arrHandler[i];\n                if (item.id && args.id !== item.id)\n                    continue;\n                if (!canExcByDispath(item))\n                    continue;\n                item.triggerWinId = args.triggerWinId;\n                !e && (e = {});\n                item.data && (e.data = item.data);\n                //设置激活发起窗口id\n                e.rxmBindArgs = item;\n                var ctxt = args.context || item.context || e.target;\n                ret.fnreturn = item.fn.call(ctxt, e, data);\n                !(ret.fnreturn === false) && (ret.fnreturn = true);\n                ret.e = e;\n                if (item.one) {\n                    one.push(i);\n                }\n                if (!ret.fnreturn)\n                    break;\n            }\n            if (one.length > 0) {\n                for (var j = one.length - 1; j >= 0; j--) {\n                    arrHandler.splice(one[j], 1);\n                }\n            }\n        }\n        ;\n        return ret;\n    };\n    $.fn.rxmBindCmd = bindcmd;\n    $.fn.rxmTriggerCmd = triggerCmd;\n    $.fn.rxmUnbindCmd = unbindcmd;\n    //var  msgQueue =queue('rxm-cmd-mgr')\n    /**\n     * 处理 .rxm-cmd-btn'  的点击事件\n     * 这里有个疑虑，就是先销毁了菜单，但是，事件仍然传递下来，测试通过了\n     * @param {MouseEvent} e\n     * @param {*} data\n     */\n    var cmdTapedDefault = function (e, data) {\n        //如果点击的是 caret 类，弹出菜单\n        //\n        var children, cmdid;\n        if ((children = $(e.target).closest('.rxm-btn-menu')) && children.length != 0) {\n            //需要完善测试  2018-06-05\n            if (!(cmdid = children.attr('rxmchildrenid'))) {\n                children = children.closest('.rxm-cmd-btn').find('.rxm-cmd-dropdown-btnbar');\n                if (children.length > 0) {\n                    var cid = children.attr('id');\n                    !cid && (cid = appTool.unid()) && children.attr('id', cid);\n                    cmdid = cid;\n                }\n                else {\n                    cmdid = undefined;\n                }\n            }\n            //菜单类要接收这个事件，没有在这里‘引入’菜单类，将菜单类单独封装。\n            cmdid && $('rxmPopChildrenMenu').rxmTriggerCmd({\n                id: cmdid, originalEvent: e.originalEvent || e,\n                data: { triggerWinId: selfid() }\n            });\n        }\n        else {\n            //激活这个命令\n            var d = data || e.originalEvent.rxmCmdData;\n            var cmd = $(this).attr('rxmcmdid');\n            var tmp = $(this).closest('.rxm-dropmenu-btn');\n            if (tmp.length == 1) {\n                tmp.removeClass('rxm-dropmenu-btn');\n                setTimeout(function () {\n                    // console.info('settimeout')\n                    tmp.addClass('rxm-dropmenu-btn');\n                }, 300);\n            }\n            cmd && $(cmd).rxmTriggerCmd({ data: d, originalEvent: (e.originalEvent || e) });\n        }\n        e.stopPropagation();\n        e.preventDefault();\n    };\n    $('html').tap('.rxm-cmd-btn>button', cmdTapedDefault);\n    return {};\n});\n","define(\"RxmTab\", [\"require\", \"exports\", \"text!RxmTemplateDir/clsTabTmpl.html\", \"text!RxmTemplateDir/clsTabPanelTmpl.html\", \"RxmArtTemplate\"], function (require, exports, tpl, tplPanel, artTemplate) {\n    \"use strict\";\n    ///<amd-dependency path=\"text!RxmTemplateDir/clsTabTmpl.html\" name=\"tpl\"/>\n    ///<amd-dependency path=\"text!RxmTemplateDir/clsTabPanelTmpl.html\" name=\"tplPanel\"/>\n    ///<amd-dependency path=\"RxmArtTemplate\" name=\"artTemplate\"/>\n    var rqr = window;\n    var tool = rqr.require(\"RxmAppTool\");\n    //创建标签插件id\n    var createSomId = function (type) {\n        var order = 1;\n        var tmp = $('[id]');\n        for (var i = 0; i < tmp.length; i++) {\n            var id = tmp[i].id;\n            id && (id = id.substr(id.length - 3)) && (id = parseInt(id)) && $.isNumeric(id) && id > order && (order = id);\n        }\n        (!!type) && (type = type.split('-')) && (type.length > 0) && (type = type[type.length - 1]);\n        (!type) && (type = 'ormWidget');\n        var ret = '';\n        while (order) {\n            ret = order < 10 ? '00' : order < 100 ? '0' : '';\n            ret = type + ret + order;\n            order++;\n            if ($('#' + ret).length === 0)\n                break;\n        }\n        return ret;\n    };\n    //tab标签页切换分页初始化  \n    var _initTabPaging = function ($tabWrap) {\n        //判断是否出现滚动条\n        var wrapWidth = $tabWrap.width();\n        //默认这个宽度与wrapWidth相等 当出现滚动条会大于wrapWidth\n        var scroWidth = $tabWrap[0].scrollWidth;\n        var $lArrow = $tabWrap.parent().find(\".rxm-scroll-left\");\n        var $rArrow = $tabWrap.parent().find(\".rxm-scroll-right\");\n        //出现滚动条\n        if (scroWidth > wrapWidth) {\n            $lArrow.css(\"display\", \"block\");\n            $rArrow.css(\"display\", \"block\");\n            $tabWrap.addClass(\"rxm-tab-scroll\");\n            var i = 0;\n            //左箭头 上一页\n            var _leftScroll = function () {\n                i += -200;\n                //最左侧 scrollLeft为0\n                i < 0 && (i = 0);\n                $tabWrap.animate({ \"scrollLeft\": i }, \"0\");\n            };\n            //右箭头 下一页\n            var _rightScroll = function () {\n                //最右侧 scrollLeft为滚动轴最大值\n                if (Number($tabWrap.width() + $tabWrap.scrollLeft() + 200) >= Number($tabWrap[0].scrollWidth)) {\n                    i = Number($tabWrap[0].scrollWidth - $tabWrap.width());\n                }\n                else {\n                    i += 200;\n                }\n                $tabWrap.animate({ \"scrollLeft\": i }, \"0\");\n            };\n            $lArrow.tap(_leftScroll);\n            $rArrow.tap(_rightScroll);\n        }\n        else {\n            $lArrow.css(\"display\", \"none\");\n            $rArrow.css(\"display\", \"none\");\n            $tabWrap.removeClass(\"rxm-tab-scroll\");\n        }\n    };\n    //tab页签点击事件回叫函数\n    var _tabCallback = function (e) {\n        //当前tab页签jquery对象\n        _changeTabStatus(e, $(e.currentTarget));\n    };\n    //改变标签选中状态 转变为active\n    var _changeTabStatus = function (e, $obj) {\n        var $curLi = $obj;\n        var curTabId = $curLi.attr('id');\n        var $curUl = $curLi.parent();\n        //原有选中的tab页签状态修改\n        var $oldActiveLi = $curUl.find(\"li[class~='rxmactive']\");\n        var oldActiveTabId = $oldActiveLi.attr(\"id\");\n        //隐藏标签数据\n        var hd = {\n            data: {\n                tabBarId: $curUl.attr(\"id\"),\n                tabId: oldActiveTabId,\n                tabPanelId: $(\"div[rxmtabpanel='\" + oldActiveTabId + \"']\").attr(\"id\")\n            },\n            originalEvent: e\n        };\n        var hdn = $.extend(true, {}, hd);\n        //标签隐藏之前消息激发\n        $('rxmTabHide').rxmTriggerCmd(hd);\n        //删除原有active tab页签的active状态\n        $oldActiveLi.removeClass('rxmactive');\n        $oldActiveLi.addClass('rxminactive');\n        //隐藏原有内容区div\n        $(\"div[rxmtabpanel='\" + oldActiveTabId + \"']\").removeClass(\"rxmactive\");\n        //标签隐藏之后消息激发\n        $('rxmTabHidden').rxmTriggerCmd(hdn);\n        //显示标签数据\n        var sd = {\n            data: {\n                tabBarId: $curUl.attr(\"id\"),\n                tabId: curTabId,\n                tabPanelId: $(\"div[rxmtabpanel='\" + curTabId + \"']\").attr(\"id\")\n            },\n            originalEvent: e\n        };\n        var sdn = $.extend(true, {}, sd);\n        //标签显示之前消息激发\n        $('rxmTabShow').rxmTriggerCmd(sd);\n        //当前点击tab页签添加active\n        $curLi.removeClass('rxminactive');\n        $curLi.addClass(\"rxmactive\");\n        //显示点击页签对应的内容区div\n        $(\"div[rxmtabpanel='\" + curTabId + \"']\").addClass(\"rxmactive\");\n        $('rxmTabShown').rxmTriggerCmd(sdn);\n    };\n    //tab页签关闭按钮点击事件回叫函数\n    var _tabCloseCallback = function (e) {\n        if (!tool.isInEditor()) {\n            //关闭当前标签\n            var $li = $(e.currentTarget).parent().parent();\n            var $ul = $li.parent();\n            var $tabContent = $(\"div[rxmtabpanel='\" + $li.attr(\"id\") + \"']\");\n            var clos = {\n                data: {\n                    closeBtnId: $(e.currentTarget).attr(\"id\"),\n                    tabBarId: $ul.attr(\"id\"),\n                    tabId: $li.attr(\"id\"),\n                    tabPanelId: $tabContent.attr(\"id\")\n                },\n                originalEvent: e\n            };\n            var closd = $.extend(true, {}, clos);\n            //激发消息 返回删除标签相关数据\n            $('rxmTabClose').rxmTriggerCmd(clos);\n            $li.remove();\n            $tabContent.remove();\n            //激发消息 返回删除标签相关数据\n            $('rxmTabClosed').rxmTriggerCmd(closd);\n            _initTabPaging($ul);\n            //防止冒泡\n            return false;\n        }\n    };\n    //标签初始化函数  事件绑定，分页按钮初始化 \n    var initTab = function () {\n        //rxmTabInitPaging消息绑定 当标签页进行增删时进行 标签初始化 判断是否显示分页按钮\n        $('rxmTabInitPaging').rxmBindCmd({\n            hearFrom: 'all', callback: function (e, data) {\n                _initTabPaging(data);\n            }\n        });\n        //tab页签点击事件绑定\n        $(\"body\").tap(\".rxm-tab-item\", _tabCallback);\n        //tab页签关闭按钮点击事件绑定\n        $(\"body\").tap(\".rxm-tab-item-a i\", _tabCloseCallback);\n        //同一个页面存在多个标签页插件 分页按钮初始化\n        var tabPlgns = $(\"[clsnm='rxm-tab']\");\n        for (var i = 0; i < tabPlgns.length; i++) {\n            _initTabPaging($(tabPlgns[i]));\n        }\n    };\n    //标签初始化 \n    initTab();\n    var ClsFactory = function (config) {\n        //页签包裹器对象定义\n        var $tabWrap = $(\"#\" + config.id);\n        //所有的自定义消息 菜单 激活前 激活后 隐藏前 隐藏后\n        var msgEnum = {\n            rxmTabShow: \"rxmTabShow\",\n            rxmTabShown: \"rxmTabShown\",\n            rxmTabHide: \"rxmTabHide\",\n            rxmTabHidden: \"rxmTabHidden\"\n        };\n        var RxmTab = /** @class */ (function () {\n            function RxmTab() {\n            }\n            /**\n            * 新增标签项函数\n            */\n            RxmTab.prototype.addTabItem = function (arg) {\n                var $tab;\n                var $panel;\n                var tabid = createSomId(\"rxm-tab-item\");\n                //走默认模板\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    var _tabData = {\n                        tabId: tabid\n                    };\n                    var _panelData = {\n                        tabPanelId: tabid + \"_panel\",\n                        tabId: tabid\n                    };\n                    $tab = artTemplate(\"template-tab-\" + config.id, _tabData);\n                    $panel = artTemplate(\"template-panel-\" + config.id, _panelData);\n                }\n                else { //定制标签项\n                    //art模板compile加载html模板\n                    var renderTab = artTemplate.compile(tpl);\n                    var renderPanel = artTemplate.compile(tplPanel);\n                    if (typeof arg.tabId !== \"undefined\") {\n                        tabid = arg.tabId;\n                    }\n                    //模板数据\n                    var _tab = {\n                        tabId: tabid,\n                        tabItem: arg.tabItem\n                    };\n                    var _panel = {\n                        tabId: tabid,\n                        tabPanelId: tabid + \"_panel\",\n                        tabPanel: arg.tabPanel\n                    };\n                    $tab = renderTab(_tab);\n                    $panel = renderPanel(_panel);\n                }\n                //添加消息\n                var ad = {\n                    data: {\n                        tabBarId: config.id,\n                        tabId: tabid,\n                        tabPanelId: tabid + \"_panel\"\n                    },\n                    originalEvent: event\n                };\n                var adn = $.extend(true, {}, ad);\n                $('rxmTabAdd').rxmTriggerCmd(ad);\n                $tabWrap.append($tab);\n                $(\"div[rxmtabcontent='\" + config.id + \"']\").append($panel);\n                $('rxmTabAdded').rxmTriggerCmd(adn);\n                _initTabPaging($tabWrap);\n            };\n            /**\n             * 删除标签项函数\n             * @description 根据tab页签id  进行单个、多个、全部页签的删除\n             * @param {String | Array | \"\" } arg - tab页签id,此参数可为字符串、数组、undefined\n             */\n            RxmTab.prototype.deleteTabItem = function (arg) {\n                var tabPanelid = [];\n                if (typeof arg != \"undefined\") {\n                    //判断传入是否为字符串 \n                    if ($.isString(arg)) {\n                        var t = arg;\n                        arg = [];\n                        arg.push(t);\n                    }\n                    //panel id数组\n                    for (var i = 0; i < arg.length; i++) {\n                        tabPanelid.push(arg[i] + \"_panel\");\n                    }\n                    var dd = {\n                        data: {\n                            tabBarId: config.id,\n                            tabId: arg,\n                            tabPanelId: tabPanelid\n                        },\n                        originalEvent: event\n                    };\n                    var ddd = $.extend(true, {}, dd);\n                    //激发消息 rxmTabClose\n                    $('rxmTabClose').rxmTriggerCmd(dd);\n                    //迭代删除页签及对应panel\n                    for (var i = 0; i < arg.length; i++) {\n                        $(\"#\" + arg[i]).remove();\n                        $(\"#\" + arg[i] + \"_panel\").remove();\n                    }\n                    //激发消息 rxmTabClosed\n                    $('rxmTabClosed').rxmTriggerCmd(ddd);\n                }\n                else {\n                    var tabs = $tabWrap.find(\".rxm-tab-item\");\n                    var tabid = [];\n                    for (var i = 0; i < tabs.length; i++) {\n                        tabid.push($(tabs[i]).attr(\"id\"));\n                    }\n                    for (var i = 0; i < tabid.length; i++) {\n                        //tab页签id push至tabIdArr\n                        tabPanelid.push(tabid[i] + \"_panel\");\n                    }\n                    var dd2 = {\n                        data: {\n                            tabBarId: config.id,\n                            tabId: tabid,\n                            tabPanelId: tabPanelid\n                        },\n                        originalEvent: event\n                    };\n                    var ddd2 = $.extend(true, {}, dd2);\n                    //激发消息 rxmTabClose\n                    $('rxmTabClose').rxmTriggerCmd(dd2);\n                    //删除所有页签及对应panel\n                    $tabWrap.empty();\n                    $(\"div[rxmtabcontent='\" + config.id + \"']\").empty();\n                    //激发消息 rxmTabClosed\n                    $('rxmTabClosed').rxmTriggerCmd(ddd2);\n                }\n                _initTabPaging($tabWrap);\n                //防止冒泡\n                return false;\n            };\n            /**\n             * 打开标签项函数\n             * @description 每次打开一个\n             * @param {String} arg - 标签id\n             */\n            RxmTab.prototype.openTabItem = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _changeTabStatus(event, $(\"#\" + arg));\n                }\n            };\n            /**\n             * 标签页激活开始消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabShow = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabShow').rxmBindCmd(arg);\n            };\n            /**\n             * 标签页激活结束消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabShown = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabShown').rxmBindCmd(arg);\n            };\n            /**\n             * 标签页隐藏开始消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabHide = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabHide').rxmBindCmd(arg);\n            };\n            /**\n             * 标签页隐藏结束消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabHidden = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabHidden').rxmBindCmd(arg);\n            };\n            /**\n             * 标签页添加开始消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabAdd = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabAdd').rxmBindCmd(arg);\n            };\n            /**\n             * 标签页添加结束消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabAdded = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabAdded').rxmBindCmd(arg);\n            };\n            /**\n             * 标签页删除开始消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabClose = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabClose').rxmBindCmd(arg);\n            };\n            /**\n             * 标签页删除结束消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            RxmTab.prototype.bindRxmTabClosed = function (arg) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {};\n                }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmTabClosed').rxmBindCmd(arg);\n            };\n            return RxmTab;\n        }());\n        return new RxmTab();\n    };\n    return ClsFactory;\n});\n","/**\n * combo - css fed - weijy\n */\ndefine(\"RxmCombo\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    /**\n        // options\n        var options = {\n            id: \"\",                     // input\n            key: {                      // key\n                idKey: \"id\",            // idKey\n                textKey: \"text\"         // textKey\n            },\n            multi: false,               // single select or multi select\n            readonly: \"\",               // readonly\n            placeholder: \"\",            // placeholder\n            event: {},                  // events obj\n            panelWidth: \"\",             // panelWidth\n            panelMinWidth: \"\",          // panelMinWidth\n            panelMaxWidth: \"\",          // panelMaxWidth\n            panelHeight: \"\",            // panelHeight\n            panelMinHeight: \"\",         // panelMinHeight\n            panelMaxHeight: \"\"          // panelMaxHeight\n        }\n    \r\n        // events\n        var events = {\n            onShowPanel: null,          // fire when drop down panel show\n            onHidePanel: null,          // fire when drop down panel hide\n            onChange: null,             // fire when the value is Changed and the drop down panel is hide\n            onRemove: null,             // fire when remove one item\n            onClear: null               // fire when clear all item\n        }\n    \r\n        // methods\n        var methods = {\n            showPanel: null,            // show the drop down panel\n            hidePanel: null,            // hide the drop down panel\n            getPanel: null,             // return the drop down panel jqObj\n            //readonly: null,             // readonly mode\n            //destroy: null,              // destroy\n            clear: null,                // clear the value\n            //reset: null,                // reset the value\n            setValue: null,             // set value\n            getValue: null              // return value\n        }\n    \r\n     */\n    ///<amd-module name='RxmCombo'/>\n    var defaultOpts = {\n        id: \"\",\n        key: {\n            idKey: \"id\",\n            textKey: \"name\" // textKey\n        },\n        multi: false,\n        readonly: false,\n        value: [],\n        event: {},\n        placeholder: \"\",\n        panelWidth: \"\",\n        panelMinWidth: \"\",\n        panelMaxWidth: \"\",\n        panelHeight: \"\",\n        panelMinHeight: \"100\",\n        panelMaxHeight: \"260\" // panelMaxHeight\n    };\n    // combo obj cache\n    var cache = {};\n    // event const\n    var Constants = {\n        EVENT_MOUSEUP: \"mouseup\",\n        EVENT_FOCUS: \"focus\",\n        EVENT_CLICK: \"click\"\n    };\n    //clsFactory(){}\n    var clsFactory = function (options) {\n        //\n        var _vars = {};\n        var _options = $.extend(true, defaultOpts, options);\n        if (!options.id) {\n            console.log(\"Combo: the id prop is required\");\n            return;\n        }\n        var Combo = /** @class */ (function () {\n            function Combo() {\n                this.render();\n            }\n            Combo.prototype.render = function () {\n                var _this = this, options = _options;\n                // _vars\n                var vars = _vars = {};\n                // $input\n                var $input = vars.$input = $(\"#\" + options.id);\n                // readonly\n                var readonly = vars.readonly = options.readonly || $input.is(\"input:disabled, input[readonly]\");\n                // component id\n                var cid = vars.cid = \"combo_\" + options.id;\n                // template\n                if (!$input.parent().is(\".cs-combo-wrapper\")) {\n                    // $wrap\n                    $input.addClass(\"cs-combo-input\").wrap('<div class=\"cs-combo-wrapper\" id=\"' + cid + '\"></div>');\n                    var $wrap = vars.$wrap = $input.parent();\n                    // $content\n                    if (options.multi) {\n                        $wrap.addClass(\"multi\");\n                        vars.$content = $('<div class=\"cs-combo-content\"></div>').appendTo($wrap);\n                    }\n                    // $clear\n                    if (readonly) {\n                        $wrap.addClass(\"readonly\");\n                    }\n                    else {\n                        vars.$clear = $('<div class=\"cs-combo-clear\"><i class=\"fa fa-trash-o\"></i></div>').appendTo($wrap);\n                    }\n                    // $placeholder\n                    if (options.placeholder) {\n                        vars.$placeholder = $('<div class=\"cs-combo-placeholder\"></div>').appendTo($wrap);\n                    }\n                    // $panel\n                    vars.$panel = $('<div class=\"cs-combo-panel\" data-for=\"' + cid + '\"></div>').appendTo($(document.body));\n                }\n                else {\n                    vars.$wrap = $input.parent();\n                    vars.$content = vars.$wrap.find(\".cs-combo-content\");\n                    vars.$clear = vars.$wrap.find(\".cs-combo-clear\");\n                    vars.$placeholder = vars.$wrap.find(\".cs-combo-placeholder\");\n                    vars.$panel = $(document.body).find(\".cs-combo-panel[data-for=\" + cid + \"]\");\n                }\n                // $placeholder\n                if (vars.$placeholder) {\n                    vars.$placeholder.html(options.placeholder);\n                    vars.$placeholder.css(\"line-height\", vars.$placeholder.height() + \"px\");\n                }\n                // $panel\n                options.panelWidth ? vars.$panel.css(\"width\", parseInt(options.panelWidth) + \"px\") : false;\n                options.panelMinWidth ? vars.$panel.css(\"min-width\", parseInt(options.panelMinWidth) + \"px\") : false;\n                options.panelMaxWidth ? vars.$panel.css(\"max-width\", parseInt(options.panelMaxWidth) + \"px\") : false;\n                options.panelHeight ? vars.$panel.css(\"height\", parseInt(options.panelHeight) + \"px\") : false;\n                options.panelMinHeight ? vars.$panel.css(\"min-height\", parseInt(options.panelMinHeight) + \"px\") : false;\n                options.panelMaxHeight ? vars.$panel.css(\"max-height\", parseInt(options.panelMaxHeight) + \"px\") : false;\n                _this.panelZIndex();\n                // init value\n                _this.initValue();\n                // bind event\n                _this.bindEvent();\n            };\n            ;\n            Combo.prototype.initValue = function () {\n                var _this = this, options = _options, vars = _vars;\n                var value = vars.value = [].concat(options.value);\n                vars.lastValue = [].concat(options.value);\n                /*\n                if (value && value.length > 0) {\n                    Combo.setValue.call(_this, value);\n                }\n                */\n            };\n            ;\n            Combo.prototype.bindEvent = function () {\n                var _this = this, options = _options, vars = _vars, readonly = vars.readonly, $wrap = vars.$wrap, $input = vars.$input, $content = vars.$content, $clear = vars.$clear, $placeholder = vars.$placeholder;\n                if (!readonly) {\n                    $input.on(Constants.EVENT_MOUSEUP, function (event) {\n                        _this.togglePanel();\n                    });\n                }\n                $input.on(Constants.EVENT_FOCUS, function (event) {\n                    $input.blur();\n                });\n                if ($content) {\n                    $content.on(Constants.EVENT_MOUSEUP, \".remove\", function (event) {\n                        event.stopPropagation();\n                        if (!readonly)\n                            _this.removeValue($(this).closest(\".cs-combo-content-item\").attr(\"data-id\"));\n                    });\n                    $content.on(Constants.EVENT_MOUSEUP, function () {\n                        $input[Constants.EVENT_MOUSEUP]();\n                    });\n                }\n                $placeholder && $placeholder.on(Constants.EVENT_MOUSEUP, function (event) {\n                    $input[Constants.EVENT_MOUSEUP]();\n                    event.preventDefault();\n                    return false;\n                });\n                $clear && $clear.on(Constants.EVENT_MOUSEUP, function (event) {\n                    _this.clear();\n                });\n                $wrap.on(\"showPanel\", function (e) {\n                    typeof options.event.onShowPanel == \"function\" && options.event.onShowPanel();\n                }).on(\"hidePanel\", function (e) {\n                    typeof options.event.onHidePanel == \"function\" && options.event.onHidePanel();\n                }).on(\"onChange\", function (e) {\n                    typeof options.event.onChange == \"function\" && options.event.onChange(vars.value, vars.lastValue, options.id);\n                }).on(\"isDataChanged\", function (e) {\n                    if (_this.isDataChanged()) {\n                        $wrap.trigger(\"onChange\");\n                        // reset value\n                        vars.lastValue = [].concat(vars.value);\n                    }\n                }).on(\"onRemove\", function (e, value) {\n                    typeof options.event.onRemove == \"function\" && options.event.onRemove(value);\n                }).on(\"onClear\", function (e) {\n                    typeof options.event.onClear == \"function\" && options.event.onClear();\n                });\n            };\n            ;\n            Combo.prototype.bindDocumentEvent = function () {\n                var _this = this, cid = _vars.cid, $wrap = _vars.$wrap, $panel = _vars.$panel;\n                $(document).on(Constants.EVENT_MOUSEUP + \".\" + cid, function (event) {\n                    if (!($wrap.is(event.target) || $wrap.has(event.target).length)\n                        && !($panel.is(event.target) || $panel.has(event.target).length)) {\n                        _this.hidePanel();\n                    }\n                });\n            };\n            ;\n            Combo.prototype.unbindDocumentEvent = function () {\n                var _this = this, cid = _vars.cid;\n                $(document).off(Constants.EVENT_MOUSEUP + \".\" + cid);\n            };\n            ;\n            Combo.prototype.bindWindowResizeEvent = function () {\n                var _this = this, cid = _vars.cid;\n                $(window).on(\"resize\" + \".\" + cid, function () {\n                    _this.panelPlaceAt();\n                });\n            };\n            ;\n            Combo.prototype.unbindWindowResizeEvent = function () {\n                var _this = this, cid = _vars.cid;\n                $(window).off(\"resize\" + \".\" + cid);\n            };\n            ;\n            Combo.prototype.bindWindowScrollEvent = function () {\n                var _this = this, cid = _vars.cid;\n                var t = null;\n                $(document).on('DOMMouseScroll.' + cid + ' mousewheel.' + cid + ' scroll.' + cid, function () {\n                    window.clearTimeout(t);\n                    t = window.setTimeout(function () {\n                        _this.panelPlaceAt();\n                    }, 300);\n                });\n            };\n            ;\n            Combo.prototype.unbindWindowScrollEvent = function () {\n                var _this = this, cid = _vars.cid;\n                $(document).off('DOMMouseScroll.' + cid + ' mousewheel.' + cid + ' scroll.' + cid);\n            };\n            ;\n            Combo.prototype.togglePanel = function () {\n                var _this = this, $panel = _vars.$panel;\n                $panel.is(\":visible\") ? _this.hidePanel() : _this.showPanel();\n            };\n            ;\n            Combo.prototype.showPanel = function () {\n                var _this = this, vars = _vars, $wrap = _vars.$wrap, $panel = _vars.$panel;\n                _this.panelPlaceAt();\n                $panel.show();\n                $wrap.trigger(\"showPanel\");\n                _this.bindDocumentEvent();\n                _this.bindWindowResizeEvent();\n                _this.bindWindowScrollEvent();\n                // set lastValue\n                vars.lastValue = [].concat(vars.value);\n            };\n            ;\n            Combo.prototype.hidePanel = function () {\n                var _this = this, vars = _vars, $wrap = _vars.$wrap, $panel = _vars.$panel;\n                $panel.hide();\n                $wrap.trigger(\"hidePanel\");\n                _this.unbindDocumentEvent();\n                _this.unbindWindowResizeEvent();\n                _this.unbindWindowScrollEvent();\n                $wrap.trigger(\"isDataChanged\");\n            };\n            ;\n            Combo.prototype.readonly = function (readonly) {\n                var _this = this;\n                // readonly = typeof readonly == \"undefined\" ? true : false;\n            };\n            ;\n            Combo.prototype.panelPlaceAt = function () {\n                var _this = this, options = _options, $panel = _vars.$panel, $input = _vars.$input;\n                var position = $input.offset();\n                var left = position.left;\n                var top = position.top + $input.outerHeight() - 2; // -2\n                $panel.css({\n                    \"left\": left,\n                    \"top\": top\n                });\n                // width auto\n                options.panelWidth ? false : $panel.css(\"width\", $input.outerWidth() + \"px\");\n            };\n            ;\n            Combo.prototype.panelZIndex = function () {\n                var _this = this, $panel = _vars.$panel;\n                var index_highest = 0;\n                $('div').each(function () {\n                    var index_current = parseInt($(this).css('zIndex'), 10);\n                    if (index_current > index_highest) {\n                        index_highest = index_current;\n                    }\n                });\n                $panel.css(\"z-index\", index_highest + 10);\n            };\n            ;\n            Combo.prototype.getPanel = function () {\n                var _this = this, vars = _vars;\n                return vars.$panel;\n            };\n            ;\n            Combo.prototype.destroy = function () {\n                var _this = this;\n            };\n            ;\n            Combo.prototype.clear = function () {\n                var _this = this, $wrap = _vars.$wrap;\n                _this.setValue([]);\n                $wrap.trigger(\"onClear\");\n            };\n            ;\n            Combo.prototype.setValue = function (value) {\n                var _this = this, options = _options, vars = _vars, $panel = vars.$panel, $wrap = vars.$wrap;\n                vars.value = value || [];\n                _this.fillContent();\n                if ($panel.is(\":hidden\")) {\n                    $wrap.trigger(\"isDataChanged\");\n                }\n            };\n            ;\n            Combo.prototype.fillContent = function () {\n                var _this = this, options = _options, key = options.key, vars = _vars, value = vars.value, $content = vars.$content, $wrap = vars.$wrap, $input = vars.$input;\n                value.length > 0 ? $wrap.addClass(\"hasValue\") : $wrap.removeClass(\"hasValue\");\n                options.multi ? $content.empty() : false;\n                var textArr = [];\n                if (value && value.length > 0) {\n                    var valueActual;\n                    if (options.multi) {\n                        valueActual = [].concat(value);\n                    }\n                    else {\n                        valueActual = [].concat(value[0]); // get the first one\n                    }\n                    for (var i = 0; i < valueActual.length; i++) {\n                        var v = valueActual[i];\n                        textArr.push(v[key.textKey]);\n                        if (options.multi) {\n                            $content.append('<a class=\"cs-combo-content-item\" data-id=\"' + v[key.idKey] + '\">' + (v[key.textKey] || \"\") + '<span class=\"remove\">x</span></a>');\n                        }\n                    }\n                }\n                $input.val(textArr.join(\",\"));\n            };\n            ;\n            Combo.prototype.removeValue = function (id) {\n                var _this = this, key = _options.key, value = _vars.value, $wrap = _vars.$wrap;\n                var valueCopy = [].concat(value);\n                var target;\n                for (var i = 0; i < valueCopy.length; i++) {\n                    if (id == valueCopy[i][key.idKey]) {\n                        target = valueCopy[i];\n                        valueCopy.splice(i, 1);\n                    }\n                }\n                _this.setValue(valueCopy);\n                $wrap.trigger(\"onRemove\", [target]);\n            };\n            ;\n            Combo.prototype.getValue = function () {\n                var _this = this, vars = _vars;\n                return vars.value;\n            };\n            ;\n            Combo.prototype.isDataChanged = function () {\n                var _this = this, key = _options.key, vars = _vars, o = vars.lastValue, n = vars.value;\n                if (o.length != n.length)\n                    return true;\n                var mapO = {}, mapN = {};\n                for (var i = 0; i < o.length; i++) {\n                    mapO[o[i][key.idKey]] = o[i];\n                    mapN[n[i][key.idKey]] = n[i];\n                }\n                for (var j in mapO) {\n                    if (typeof mapN[j] == \"undefined\")\n                        return true;\n                }\n                return false;\n            };\n            ;\n            return Combo;\n        }());\n        var combo = new Combo();\n        cache[options.id] = combo;\n        return combo;\n    };\n    // get combo from cache\n    var clsf = clsFactory;\n    clsf.getCombo = function (id) {\n        return cache[id];\n    };\n    return clsFactory;\n});\n","define(\"RxmComboTree\", [\"require\", \"exports\", \"ZTree\", \"ZTreeExhide\", \"css!ZTreeCss\", \"RxmCombo\"], function (require, exports, tree, ze, cstree, Combo) {\n    \"use strict\";\n    /**\n     * combotree - css fed - weijy\n     *\n     * dependencies\n     * combo ztree\n     */\n    /**\n        // options\n        var options = {\n            combo: {},                      // combo options\n            ztree: {},                      // ztree options\n            data: [],                       // local data for ztree\n            data: {                         // the remote data config\n                url: \"\",                    // the request url\n                param: {},                  // the request param\n                success: null,              // load data success\n                error: null                 // load data error\n            },\n            //dataFilter: \"\",                 // define how to filter the data\n            formatter: null,                  // define how to render the data\n            value: \"\",                      // init value (\"\" ,)\n            value: [\"\"]                     // init value ([\"\"])\n            value: [{}],                    // init value ([{}]);\n            search: {\n                enable: false,              // enable the search or not\n                //placeholder: \"\",            // placeholder\n                fields: []                  // define what fields to search\n            }\n        }\n    \r\n        // events\n        var events = {\n            onSelect: null,                 // fire when user select a item\n            onUnSelect: null,               // fire when user unSelect a item\n            onLoadSuccess: null             // load remote data success\n        }\n    \r\n        // methods\n        var methods = {\n            getCombo: null,                 // return the combo obj\n            getZtree: null,                 // return the ztree obj\n            //getData: null,                  // return the ztree data\n            setData: null,                  // load local data for ztree\n            loadData: null,                 // load remote data for ztreer\n            clear: null,                    // clear the value\n            //reset: null,                    // reset the value\n            setValue: null                  // set value\n        }\n     */\n    // event const\n    var Constants = {\n        EVENT_MOUSEUP: \"mouseup\",\n        EVENT_KEYUP: \"keyup\",\n        EVENT_FOCUS: \"focus\",\n        EVENT_CLICK: \"click\"\n    };\n    // combo obj cache\n    var cache = {};\n    var defaultOpts = {\n        combo: {},\n        ztree: {\n            data: {\n                simpleData: {\n                    enable: true\n                }\n            },\n            check: {\n                chkboxType: {\n                    'Y': '',\n                    'N': ''\n                } // 默认不关联父子节点\n            },\n            callback: {}\n        },\n        data: [],\n        dataFilter: \"\",\n        formatter: \"\",\n        search: {\n            enable: false,\n            placeholder: \"搜索\",\n            fields: [] // define what fields to search\n        }\n    };\n    var clsFactory = function (option) {\n        var _options = $.extend(true, defaultOpts, option);\n        var _vars = {};\n        var _bindEvent = function () {\n            var _this = this, options = _options, $search = _vars.$search;\n            // 搜索事件\n            if (options.search && options.search.enable) {\n                var timeout = null;\n                $search.on(Constants.EVENT_KEYUP, function () {\n                    if (timeout)\n                        window.clearTimeout(timeout);\n                    timeout = window.setTimeout(function () {\n                        _this.search();\n                    }, 400);\n                });\n            }\n        };\n        //------------------------------------------\n        var Combotree = /** @class */ (function () {\n            function Combotree() {\n            }\n            Combotree.prototype.render = function () {\n                var _this = this, options = _options, options_combo = _options.combo;\n                // 备份用户设置的callback\n                try {\n                    var onCheckFun = _options.ztree.callback.onCheck;\n                    var onClickFun = _options.ztree.callback.onClick;\n                    var onAsyncSuccessFun = _options.ztree.callback.onAsyncSuccess;\n                    var onRemoveFun = _options.combo.event.onRemove;\n                    var onClearFun = _options.combo.event.onClear;\n                    var onHidePanelFun = _options.combo.event.onHidePanel;\n                }\n                catch (e) { }\n                _options = $.extend(true, _options, {\n                    combo: {\n                        event: {\n                            onRemove: function (value) {\n                                _this.onRemove(value);\n                                // 执行用户设置的onRemove\n                                typeof onRemoveFun == \"function\" && onRemoveFun(value);\n                            },\n                            onClear: function () {\n                                _this.onClear();\n                                // 执行用户设置的onClear\n                                typeof onClearFun == \"function\" && onClearFun();\n                            },\n                            onHidePanel: function () {\n                                _this.onHidePanel();\n                                // 执行用户设置的onHidePanel\n                                typeof onHidePanelFun == \"function\" && onHidePanelFun();\n                            }\n                        }\n                    },\n                    ztree: {\n                        check: {\n                            enable: _options.combo.multi // check由multi属性决定，不由用户设置的check决定\n                        },\n                        callback: {\n                            onCheck: function (event, treeId, treeNode) {\n                                //每次清空值，并重新渲染所有check的节点\n                                var checkedNodes = _vars.treeObj.getCheckedNodes(true);\n                                _this.onClear();\n                                _this.checkNode(checkedNodes, true);\n                                // 执行用户设置的onCheck\n                                typeof onCheckFun == \"function\" && onCheckFun(event, treeId, treeNode);\n                            },\n                            onClick: function (event, treeId, treeNode, clickFlag) {\n                                if (_vars.multi) { // 多选\n                                    _vars.treeObj.checkNode(treeNode, !treeNode.checked, true, true);\n                                }\n                                else { // 单选\n                                    if (false == treeNode.nocheck && false == treeNode.chkDisabled) { // 如果设置了nocheck或者chkDisabled，那么不进行选择\n                                        _this.setValue(treeNode[_vars.idKey]);\n                                    }\n                                    _vars.combo.hidePanel();\n                                }\n                                // 执行用户设置的onClick\n                                typeof onClickFun == \"function\" && onClickFun(event, treeId, treeNode, clickFlag);\n                            },\n                            onAsyncSuccess: function (event, treeId, treeNode, msg) {\n                                _this.research();\n                                // 执行用户设置的onAsyncSuccess\n                                typeof onAsyncSuccessFun == \"function\" && onAsyncSuccessFun(event, treeId, treeNode, msg);\n                            }\n                        }\n                    }\n                });\n                // key\n                _vars.idKey = _options.combo.key.idKey;\n                _vars.textKey = _options.combo.key.textKey;\n                // multi\n                _vars.multi = _options.combo.multi;\n                // combo\n                var combo = _vars.combo = Combo(options_combo);\n                // combo $panel\n                var $panel = combo.getPanel();\n                // $combotree\n                var $combotree = $('<div class=\"cs-combotree\"></div>').appendTo($panel);\n                // search\n                if (options.search && options.search.enable) {\n                    _vars.$search = $('<input class=\"form-control cs-combotree-search\" />').appendTo($combotree);\n                }\n                // ztree id\n                var treeid = _vars.treeid = \"ztree_\" + options_combo.id;\n                // $ztree\n                _vars.$ztree = $('<div id=\"' + treeid + '\" class=\"ztree\"></div>').appendTo($combotree);\n                // render tree\n                this.renderZtree();\n            };\n            Combotree.prototype.renderZtree = function () {\n                var _this = this, options = _options;\n                var data = _options.data;\n                // async\n                _vars.async = false;\n                try {\n                    _vars.async = _options.async.enable;\n                }\n                catch (e) { }\n                // afterRender\n                function afterRenderZtree() {\n                    _bindEvent.call(_this);\n                    if (options.value && options.value.length > 0)\n                        _this.setValue(options.value);\n                }\n                if (typeof data == \"undefined\" || $.isArray(data)) {\n                    data = data || [];\n                    _this.setData(data);\n                    afterRenderZtree();\n                }\n                else if (typeof data == \"object\") {\n                    _this.loadData(data, function () {\n                        afterRenderZtree();\n                    });\n                }\n            };\n            Combotree.prototype.setData = function (data, callback) {\n                var $ztree = _vars.$ztree, treeid = _vars.treeid, options_tree = _options.ztree;\n                data = _vars.data = [].concat(data);\n                // destroy\n                $.fn.zTree.destroy(treeid);\n                // formatter\n                this.format();\n                //init\n                _vars.treeObj = $.fn.zTree.init($ztree, options_tree, data);\n            };\n            Combotree.prototype.format = function () {\n                var _this = this, options = _options, options_tree = _options.ztree, data = _vars.data;\n                var formatter = _options.formatter;\n                if (typeof formatter == \"function\" && data && data.length > 0) {\n                    if (options_tree.data.simpleData.enable) {\n                        for (var i = 0; i < data.length; i++) {\n                            formatter(data[i]);\n                        }\n                    }\n                    else {\n                        var childKey = \"children\";\n                        try {\n                            childKey = options_tree.data.key.children;\n                        }\n                        catch (e) { }\n                        var f = function (value) {\n                            formatter(value);\n                            var children = value[childKey];\n                            if (children && children.length > 0) {\n                                for (var i = 0; i < children.length; i++) {\n                                    f(children[i]);\n                                }\n                            }\n                        };\n                        for (var i = 0; i < data.length; i++) {\n                            f(data[i]);\n                        }\n                    }\n                }\n            };\n            Combotree.prototype.loadData = function (data, f) {\n                var _this = this;\n                var remote = _vars.remote = $.extend({\n                    url: \"\",\n                    param: {},\n                    success: null,\n                    error: null // load data error\n                }, data);\n                $.ajax({\n                    url: remote.url,\n                    data: remote.param,\n                    success: function (data) {\n                        //console.log(\"dev load success\");\n                        // 执行开发人员自定义回调\n                        typeof remote.success == \"function\" && remote.success(data);\n                        // setData\n                        _this.setData(data);\n                        f && f();\n                    },\n                    error: function () {\n                        console.log(\"combotree load data error\");\n                        typeof remote.error == \"function\" && remote.error();\n                        f && f();\n                    }\n                });\n            };\n            /*\n            Combotree.getData = getData () {\n                var _this = this,\n                    _vars = _this._vars;\n        \r\n                return _vars.data;\n            }\n            */\n            Combotree.prototype.setValue = function (value) {\n                var _this = this, treeObj = _vars.treeObj, idKey = _vars.idKey;\n                value = value || [];\n                // value\n                _vars.value = [];\n                // string\n                if (typeof value == \"string\") {\n                    value = value.split(\",\");\n                }\n                if ($.isArray(value)) {\n                    if (value.length > 0) {\n                        if (typeof value[0] == \"string\") {\n                            // 将[\"\"]转化成[{}]\n                            for (var i = 0; i < value.length; i++) {\n                                var v = {};\n                                v[idKey] = value[i];\n                                value[i] = v;\n                            }\n                        }\n                        else if (typeof value[0] == \"object\") {\n                        }\n                        _vars.value = value;\n                        // 通过查找ztree的node完善value（将ztree的treeNode给相应的value值）\n                        if (treeObj) {\n                            var map = {};\n                            for (var i = 0; i < value.length; i++) {\n                                var v = value[i];\n                                map[v[idKey]] = true;\n                            }\n                            // node filter\n                            var nodes = treeObj.getNodesByFilter(function (node) {\n                                return map[node[idKey]];\n                            });\n                            // update value\n                            if (nodes && nodes.length > 0)\n                                _this.updateValue(nodes, true);\n                        }\n                    }\n                    //渲染value之前应当取消勾选的树节点\n                    _this.uncheckAllNodes();\n                    // render value\n                    _this.renderValue();\n                }\n                else {\n                    console.log(\"conbotree setValue error!\");\n                }\n            };\n            //取消勾选所有树节点\n            Combotree.prototype.uncheckAllNodes = function () {\n                var _this = this;\n                _vars.treeObj.checkAllNodes(false);\n            };\n            //重写checkNode\n            Combotree.prototype.checkNode = function (nodes, status) {\n                var _this = this;\n                //for(var i=0; i<nodes.length; i++){\n                //\tvar node = nodes[i];\n                // set selectData\n                this.updateValue(nodes, status);\n                //}\n                // render value\n                _this.renderValue(status);\n            };\n            //更新value数组\n            Combotree.prototype.updateValue = function (obj, status) {\n                var _this = this, value = _vars.value || [], idKey = _vars.idKey;\n                var map = {};\n                for (var i = 0; i < value.length; i++) {\n                    var v = value[i];\n                    map[v[idKey]] = {\n                        index: i,\n                        value: v\n                    };\n                }\n                // to []\n                var objArr = [].concat(obj);\n                if (status) {\n                    var length = value.length;\n                    for (var i = 0; i < objArr.length; i++) {\n                        var obj = objArr[i];\n                        if (obj.hasOwnProperty(idKey)) {\n                            var index = length + i;\n                            //为了使value框内元素按照获取所勾选的节点顺序显示，注释掉下面if代码\n                            //                \tif (map[obj[idKey]]) { // contain key\n                            //                \t\tindex = map[obj[idKey]].index;\n                            //                \t}\n                            map[obj[idKey]] = {\n                                index: index,\n                                value: obj\n                            };\n                        }\n                    }\n                }\n                else {\n                    for (var i = 0; i < objArr.length; i++) {\n                        var obj = objArr[i];\n                        delete map[obj[idKey]];\n                    }\n                }\n                var temp = [];\n                for (var key in map) {\n                    temp.push(map[key]);\n                }\n                ;\n                temp.sort(function (a, b) {\n                    //return a.index > b.index;\n                    return a.index - b.index;\n                });\n                _vars.value = [];\n                for (var i = 0; i < temp.length; i++) {\n                    _vars.value.push(temp[i].value);\n                }\n            };\n            //渲染value，调用combo的setValue，并勾选value对应的树节点\n            Combotree.prototype.renderValue = function (status) {\n                var _this = this, value = _vars.value, combo = _vars.combo, treeObj = _vars.treeObj;\n                // combo setValue\n                combo.setValue(value);\n                // tree checkNode\n                if (treeObj) {\n                    //为了实现自动勾选下级节点功能，注释掉下一行代码\n                    //treeObj.checkAllNodes(false);\n                    for (var i = 0; i < value.length; i++) {\n                        //treeObj.checkNode(value[i], true);\n                        treeObj.checkNode(value[i], status);\n                    }\n                }\n            };\n            Combotree.prototype.clearValue = function () {\n                _vars.value = [];\n            };\n            Combotree.prototype.getTree = function () {\n                return _vars.treeObj;\n            };\n            Combotree.prototype.getCombo = function () {\n                return _vars.combo;\n            };\n            Combotree.prototype.clear = function () {\n                this.clearValue();\n                this.renderValue();\n                this.uncheckAllNodes();\n            };\n            Combotree.prototype.onRemove = function (value) {\n                this.updateValue(value, false);\n                this.uncheckAllNodes();\n                this.renderValue();\n            };\n            Combotree.prototype.onClear = function () {\n                this.clearValue();\n                this.renderValue();\n                this.uncheckAllNodes();\n            };\n            Combotree.prototype.onHidePanel = function () {\n                var _this = this, options = _options;\n                if (options.search && options.search.enable) {\n                    _this.cancelSearch();\n                }\n            };\n            Combotree.prototype.search = function () {\n                var _this = this, $search = _vars.$search;\n                var content = $.trim($search.val());\n                if (content) {\n                    _vars.searching = true;\n                    var nodes = _this.searchTreeNode(content);\n                    _this.setTreeVisible(false);\n                    if (nodes && nodes.length > 0) {\n                        for (var i = 0; i < nodes.length; i++) {\n                            _this.setNodeVisible(nodes[i]);\n                        }\n                    }\n                }\n                else {\n                    _this.cancelSearch();\n                }\n            };\n            Combotree.prototype.cancelSearch = function () {\n                var _this = this, $search = _vars.$search;\n                _vars.searching = false;\n                $search.val('');\n                _this.setTreeVisible(true);\n            };\n            Combotree.prototype.research = function () {\n                var _this = this;\n                if (_vars.searching) {\n                    _this.search();\n                }\n            };\n            Combotree.prototype.searchTreeNode = function (content) {\n                var _this = this, options = _options, treeObj = _vars.treeObj, idKey = _vars.idKey, textKey = _vars.textKey;\n                var fields = _options.search.fields;\n                if (fields.length == 0) {\n                    fields.push(textKey);\n                }\n                var nodes = [];\n                for (var i = 0; i < fields.length; i++) {\n                    nodes = nodes.concat(treeObj.getNodesByParamFuzzy(fields[i], content));\n                }\n                var map = {};\n                for (var i = 0; i < nodes.length; i++) {\n                    var node = nodes[i];\n                    map[node[idKey]] = node;\n                }\n                var result = [];\n                for (var key in map) {\n                    result.push(map[key]);\n                }\n                return result;\n            };\n            Combotree.prototype.setNodeVisible = function (node) {\n                var _this = this, treeObj = _vars.treeObj, $ztree = _vars.$ztree;\n                // parent visible and expand\n                var parentNode = node.getParentNode();\n                if (parentNode) { // find parent node\n                    treeObj.expandNode(parentNode, true);\n                    treeObj.showNode(node); // show node\n                    _this.setNodeVisible(parentNode); // show parent node\n                }\n                else {\n                    treeObj.showNode(node); // show node\n                }\n            };\n            Combotree.prototype.setTreeVisible = function (status) {\n                var _this = this, treeObj = _vars.treeObj, $ztree = _vars.$ztree;\n                var allNodes = treeObj.transformToArray(treeObj.getNodes());\n                if (status) {\n                    //$ztree.removeClass(\"hideNode\");\n                    if (!!treeObj.showNodes) {\n                        treeObj.showNodes(allNodes);\n                    }\n                }\n                else {\n                    //$ztree.addClass(\"hideNode\");\n                    treeObj.hideNodes(allNodes);\n                    // reset all treeNode\n                    //$ztree.find(\"li.showNode\").removeClass(\"showNode\");\n                }\n            };\n            return Combotree;\n        }());\n        //------------------------------------------\n        var combotree = new Combotree();\n        cache[_options.id] = combotree;\n        if (!_options.notRender)\n            combotree.render();\n        return combotree;\n    };\n    var init = clsFactory;\n    init.getCombotree = function (id) {\n        return cache[id];\n    };\n    return clsFactory;\n});\n","define(\"RxmLayoutForm\", [\"require\", \"exports\", \"RxmControl\", \"RxmComboTree\", \"JQuery.validate.extra\", \"JQuery.validate.message\", \"RxmAppTool\", \"RxmGrid\", \"RxmPageBase\"], function (require, exports, control, ComboTree, extra, message, appTool, _RxmGrid, PageBase) {\n    \"use strict\";\n    var RxmGrid = _RxmGrid;\n    // declare  let PageBase: any\n    var fileInfo;\n    var _document = document;\n    /**\n    * 引入类声明公共方法\n    */\n    var thisObj = appTool.thisObj;\n    var forms = {};\n    var ClsFactory = function (config) {\n        var _initBor = false;\n        var fileUpView;\n        if (!config || !config.id) {\n            //console.error('必须为form定义id')\n        }\n        var r = forms[config.id];\n        if (!!r) {\n            return r;\n        }\n        /**@type {String} */\n        var _id = config.id;\n        var _key = \"\";\n        /**记录有没有同名的radio 和 checkbox */\n        var _radioCheckboxNames;\n        var formDirty = false;\n        var _gt = {};\n        /**是否初始化了 校验 */\n        var validateTag = true;\n        var jForm = $(\"#\" + _id);\n        var _name = $(\"#\" + _id).attr('name');\n        var jvalidator;\n        var _selectorSubmitBtn = \"[rxmformid='\" + _id + \"']button\";\n        var formVal;\n        /**\n         * 序列化表单元素为JSON对象\n         * @param form          Form表单id或表单jquery DOM对象\n         * @returns {{}}\n         */\n        var _serialize = function (form) {\n            var $form = (typeof (form) == \"string\" ? $(\"#\" + form) : form);\n            var dataArray = $form.serializeArray(), result = {};\n            $(dataArray).each(function () {\n                if (result[this.name]) {\n                }\n                else {\n                    var element = $form.find(\"[name='\" + this.name + \"']\")[0];\n                    var type = (element.type || element.nodeName).toLowerCase();\n                    result[this.name] = (/^(select-multiple|checkbox|radio)$/i).test(type) ? _checkRadioInputValue(this.name) : this.value;\n                }\n            });\n            return result;\n        };\n        /**代表表单的input 数据\n         * @param  {String|HTMLElement} nameOrDom  名字或者dom 元素\n         * @param  {Object}  value\n         */\n        var _checkRadioInputValue = function (nameOrDom, value) {\n            //var value=[{value:true,chacked:true},{value:false,chacked:false}]\n            var name;\n            /**@type {rxm.jqueryobj} */\n            var jqDom;\n            $.isString(nameOrDom) && (name = nameOrDom) && (jqDom = $('#' + _id + ' ' + '[name=' + nameOrDom + ']'));\n            $.isDom(nameOrDom) && (jqDom = $(nameOrDom)) && (name = jqDom.attr('name'));\n            if (jqDom.length == 1) {\n                $.isExist(value) && (typeof value == 'boolean') && (jqDom.prop('checked', value));\n                return jqDom.prop('checked');\n            }\n            else if (jqDom.length > 1) {\n                !_radioCheckboxNames && (_radioCheckboxNames = {});\n                !_radioCheckboxNames[name] && (_radioCheckboxNames[name] = name);\n                var it;\n                if (value) {\n                    //modify by hanchunxiao 2019-04-18 修改checkbox和radio初始化值格式\n                    $.isString(value) && (value = value.split(','));\n                    if ($.isArray(value)) {\n                        var radioName = $.isString(nameOrDom) ? nameOrDom : jqDom.attr('name');\n                        for (var i = 0; i < value.length; i++) {\n                            it = value[i];\n                            !!it && $('#' + _id + ' ' + '[name=' + radioName + '][value=' + it + ']').prop('checked', true);\n                            //it.value && $('[value=\"' + it.value + '\"]').prop('checked', it.checked) ; modify by wanghuan 2018-12-12 增加选择器，防止同一个页面下radio的value相同赋值干扰的问题\n                            // it.value && $('#' + _id + ' ' + '[name=' + radioName + '][value=' + it.value + ']').prop('checked',it.checked)\n                            // !it.value && $(jqDom[i]).prop('checked', it.checked)\n                        }\n                    }\n                }\n                //modify by hanchunxiao 2019-04-18 修改checkbox和radio值格式由[{}]改为逗号分隔的字符串\n                // var ret = []\n                // for (var i = 0; i < jqDom.length; i++) {\n                //     var jq = $(jqDom[i])\n                //     it = {\n                //         value: jq.attr('value'),\n                //         checked: jq.prop('checked')\n                //     }\n                //     ret.push(it)\n                // }\n                var ret = '';\n                for (var i = 0; i < jqDom.length; i++) {\n                    var jq = $(jqDom[i]);\n                    if (jq.prop('checked')) {\n                        if (ret == '') {\n                            ret = jq.attr('value');\n                        }\n                        else {\n                            ret = ret + \",\" + jq.attr('value');\n                        }\n                    }\n                }\n                return ret;\n            }\n        };\n        var _radioCheckboxArrToString = function (data) {\n            if (_radioCheckboxNames) {\n                for (var name in _radioCheckboxNames) {\n                    var tmp = data[name];\n                    $.isArray(tmp) && (data[name] = JSON.stringify(tmp));\n                }\n            }\n            return data;\n        };\n        /**\n         * 设置或者取出  form 下的 checekbox 或者radio的值\n         * @param {String|HTMLElement} nameOrDom\n         * @param {*} value\n         */\n        /**默认的提交成功函数*/\n        var onFormSubmitSuccess = function (data) {\n            var args = {\n                data: {\n                    theform: {\n                        _key: _key,\n                        value: formVal\n                    },\n                    _gt: _gt\n                },\n                formid: _id,\n                resultData: data\n            };\n            this.attrDirtied(false);\n            PageBase.closePage(args);\n        };\n        /**输入框的值已经被转变激发函数*/\n        var onInputValueChanged = function (e, data) { };\n        /**默认表单被提交并且失败*/\n        var onFormSubmitFail = function (e, data) {\n            alert(\"表单提交失败\");\n        };\n        /**接收slibar 传入的数据 */\n        var _onSlidebarBegin = function (e, d) {\n            !d.args && (d.args = {});\n            !d.args.form && (d.args.form = {});\n            d.args.form._pdata = $.extend(true, {}, {\n                theform: {\n                    _key: _key,\n                    value: formVal\n                },\n                _gt: _gt\n            });\n            d.args.form._pdata.theform = undefined;\n        };\n        var _onbeforeunload = function (event) {\n            if (formDirty) {\n                var msg = \"表单值已经修改，重新加载将失去数据\";\n                event.returnValue = msg;\n                return msg;\n            }\n        };\n        /**默认的表单提交函数*/\n        var _onFormSubmit = function (e, data) {\n            //     var expressionTag = _expressionCheck()\n            //     if(!!expressionTag&&!expressionTag.tag){\n            //         alert(expressionTag.msg)\n            //         return\n            //     }\n            //     var serviceTag = _serviceCheck()\n            //     if(!serviceTag){\n            //         alert('不符合服务校验，请检查输入项')\n            //         return\n            //     }\n            //    //因果校验 \n            //     var causalTag = _causalCheck()\n            //     if(!!causalTag && !causalTag.tag){\n            //         alert(causalTag.msg)\n            //         return\n            //     }\n            // if ($('div[inputname^=\"rxmvld\"]').length > 0) {\n            //     let rrr: any = window\n            //     var rxmvRun = rrr.require('OrivRunMgr')\n            //     var validateReturn = rxmvRun.RunValidate({ html: $('html')[0].outerHTML })\n            //     for(let i = 0; i < validateReturn.length ; i++ ){\n            //             if(!validateReturn[i].success){\n            //                 if (!!validateReturn[i].message) {\n            //                     alert(validateReturn[i].message)\n            //                 } else {\n            //                     alert('校验失败')\n            //                 }\n            //                 return                    }\n            //         }\n            // }\n            if (data.url && data.url !== \"/\") {\n                if (data.url.length == 0) {\n                    // PageBase.closePage(data.data);\n                }\n                else {\n                    $.ajax({\n                        url: data.url,\n                        data: data.data,\n                        type: \"post\",\n                        // the: this,\n                        success: $.proxy(onFormSubmitSuccess, this),\n                        error: $.proxy(onFormSubmitFail, this)\n                    });\n                }\n            }\n            else {\n                var args = {\n                    data: {\n                        theform: {\n                            _key: _key,\n                            value: formVal\n                        },\n                        _gt: _gt,\n                        dirtied: formDirty\n                    },\n                    formid: _id\n                    //btndata: $(this.the.btn).data(\"submit\")\n                };\n                this.attrDirtied(false);\n                PageBase.closePage(args);\n            }\n        };\n        /**表单被重置激发函数 */\n        var _onFormReset = function (e, data) {\n            window.location.reload();\n        };\n        /**\n         * 规范url 为url +getServer\n         * @param {String} path\n         */\n        var contextPath = function (path) {\n            path.length > 0 && path.charAt(0) != '/' && (path = \"/\" + path);\n            var tmp = getServer() + \"/\";\n            path.indexOf(tmp) != 0 && (path = getServer() + path);\n            return path;\n        };\n        var ruleCascadeSelect = function (d) {\n            var temp;\n            d && d.initData && (temp = d.initData.url) && (d.initData.url = contextPath(temp));\n        };\n        var _onparentselectchange = function (e, data) {\n            /**级联父select change事件执行的方法*/\n            ///<param name=\"e\" value=\"event\"></param>\n            var $target = $(e.currentTarget);\n            var value = e.currentTarget.value;\n            var ormCascadeSelect = $target.attr('rxmcascadeselect');\n            ormCascadeSelect = JSON.parse(ormCascadeSelect);\n            ruleCascadeSelect(ormCascadeSelect);\n            //加载子级联select optionValue\n            _onLoadChildSelectValue.call(this, {\n                ormCascadeSelect: ormCascadeSelect,\n                parentValue: value\n            });\n        };\n        /**初始化单选和多选数据*/\n        var _initRadioAndCheckData = function () {\n            var $radio = jForm.find('input[type=\"radio\"]');\n            if (!!$radio) {\n                for (var i = 0; i < $radio.length; i++) {\n                    var name = $($radio[i]).attr('name');\n                    //初始化form的data\n                    formVal[name] = $('input[name=\"' + name + '\"]:checked').val();\n                }\n            }\n            var $checkbox = jForm.find('input[type=\"checkbox\"]');\n            if (!!$checkbox) {\n                for (var i = 0; i < $checkbox.length; i++) {\n                    var name = $($checkbox[i]).attr('name');\n                    var cvalue = [];\n                    $('input[name=\"' + name + '\"]').each(function (i, e) {\n                        if ($(e).prop('checked') == true) {\n                            cvalue.push($(e).val());\n                        }\n                    });\n                    formVal[name] = cvalue;\n                }\n            }\n        };\n        /**子窗口关闭时，接收子窗口的数据*/\n        var _onSubClose = function (e, data) {\n            ///<param name=\"\"  type=\"\"></param>\n            if (!!data && !!data.data && data.data.dirtied) {\n                //console.info(\"_onSubClose\")\n                this.attrDirtied(data.data.dirtied);\n                //关闭时候添加gt原有数据\n                data.data._gt && ($.extend(true, _gt, data.data._gt));\n                var id = data.formid;\n                if (data.data.theform) {\n                    var key = data.data.theform._key;\n                    /**获取子页面form主键key值*/\n                    var idStr = data.data.theform.value[key];\n                    /**将子页面form数据保存至父页面数据对象*/\n                    !_gt[id] && (_gt[id] = {\n                        _key: key,\n                        value: []\n                    });\n                    var its = _gt[id];\n                    var it = data.data.theform.value;\n                    if (it._op_type == \"added\") {\n                        its.value.push(it);\n                    }\n                    else if (it._op_type == \"modified\") {\n                        var i = 0;\n                        var bpush = true;\n                        for (i = 0; i < its.value.lenght; i++) {\n                            if (its.value[i][key] == it[key]) {\n                                $.extend(its.value[i], it[key]);\n                                bpush = false;\n                                break;\n                            }\n                        }\n                        if (bpush) {\n                            its.value.push(it);\n                        }\n                    }\n                }\n                ///**父页面存在表格，获取表格所有的数据进行刷新*/\n                //这里先注释掉了\n                var gridId = $(\"div[rxmformid='\" + id + \"']\").attr(\"id\");\n                if (gridId) {\n                    var gridObj = RxmGrid({ \"id\": gridId });\n                    var data = { theform: { _key: _key, value: formVal }, _gt: _gt };\n                    var gridAllData = gridObj.getAllData();\n                    var key = data._gt[id]._key;\n                    if (gridAllData.length > 0) {\n                        //var nowKey = it[key];\n                        var nowKey;\n                        for (var j = 0; j < _gt[id].value.length; j++) {\n                            var is = true;\n                            nowKey = _gt[id].value[j][key];\n                            for (var i = 0, l = gridAllData.length; i < l; i++) {\n                                if (gridAllData[i][key] === nowKey) {\n                                    gridAllData.splice(i, i + 1, _gt[id].value[j]);\n                                    gridObj.reload(gridAllData);\n                                    is = false;\n                                    break;\n                                }\n                            }\n                            if (is) {\n                                //original表格\n                                //gridObj.appendRow(it);\n                                //originalM表格\n                                gridAllData.unshift(_gt[id].value[j]);\n                                gridObj.reload(gridAllData);\n                            }\n                        }\n                    }\n                    else {\n                        gridObj.reload(_gt[id].value);\n                    }\n                }\n            }\n        };\n        var _onWidgetClosed = function () {\n            if (formDirty) {\n                var msg = \"表单值已经修改，关闭将失去数据\";\n                return window.confirm(msg);\n            }\n        };\n        /**根据form 或者 rxmurl 的值 获取远程数据 */\n        var _fetchInitValue = function () {\n            var initForm = this.getInitForm();\n            var optype = \"\";\n            !!(initForm) && initForm.optype && (optype = initForm.optype);\n            optype = ($.isExist(initForm) && initForm.optype &&\n                (initForm.optype == \"new\" ||\n                    initForm.optype == \"add\" ||\n                    initForm.optype == \"added\" ||\n                    initForm.optype == \"insert\") ? \"added\" : \"\");\n            formVal._op_type = optype;\n            var initdataIsEmpty = true;\n            if (initForm && initForm.initData) {\n                this.deserialize(initForm.initData, false);\n                initdataIsEmpty = false;\n                //formVal = _serialize(_id)\n            }\n            ;\n            if (initForm && initForm.initLoad) {\n                if (!!!initForm.initLoad.success) {\n                    initForm.initLoad.success = $.proxy(_initLoadSuccess, this);\n                }\n                ;\n                if (!!!initForm.initLoad.error) {\n                    initForm.initLoad.error = $.proxy(_initLoadError, this);\n                }\n                $.ajax(initForm.initLoad);\n                initdataIsEmpty = false;\n            }\n            if (initdataIsEmpty) {\n                this.deserialize(undefined, false);\n            }\n        };\n        /**\n         * 序列化表单元素为JSON对象\n         * @param {*} data          cls表单id或表单jquery DOM对象\n         * @returns {*}\n         */\n        var _initLoadSuccess = function (data) {\n            if (data != null) {\n                (data.success && data.data) && (data = data.data);\n                RxmLayoutFormImpl.prototype.deserialize(data, false);\n                //formVal = _serialize(_id)\n            }\n        };\n        var _initLoadError = function (a, b, c) {\n        };\n        /**生成校验规则以及提示信息*/\n        var _getValidateRule = function () {\n            var s = \"#\" + _id + \" input,\" + \"#\" + _id + \" select,\" + \"#\" + _id + \" textarea\";\n            var validateRule = {};\n            for (var j = 0; j < $(s).length; j++) {\n                var $selector = $($(s)[j]);\n                var enumTrueArr = [\"rxmrequired\", \"rxmemail\", \"rxmurl\", \"rxmdate\", \"rxmnumber\", \"rxmdigits\", \"rxmcreditcard\"];\n                var enumValueArr = [\"rxmequal\", \"rxmmaxlength\", \"rxmminlength\", \"rxmrangelength\", \"rxmmax\", \"rxmmin\", \"rxmrange\"];\n                if (!!!validateRule.rules) {\n                    validateRule.rules = {};\n                }\n                if (!!!validateRule.messages) {\n                    validateRule.messages = {};\n                }\n                //校验值为true的校验\n                for (var i = 0; i < enumTrueArr.length; i++) {\n                    if (typeof ($selector.attr(enumTrueArr[i])) != 'undefined') {\n                        var name = $selector.attr('name');\n                        var enumName = enumTrueArr[i].substring(3, enumTrueArr[i].length);\n                        if (enumName == 'date')\n                            enumName = 'dateISO';\n                        validateRule.rules[name] = {};\n                        validateRule.rules[name][enumName] = true;\n                        var message = $selector.attr('rxmmessage');\n                        if (!!message) {\n                            validateRule.messages[name] = {};\n                            validateRule.messages[name][enumName] = message;\n                        }\n                    }\n                }\n                //校验值为输入值的校验\n                for (var i = 0; i < enumValueArr.length; i++) {\n                    if (typeof ($selector.attr(enumValueArr[i])) != 'undefined') {\n                        var name = $selector.attr('name');\n                        var enumName = enumValueArr[i].substring(3, enumValueArr[i].length);\n                        if (enumName == 'equal')\n                            enumName = 'equalTo';\n                        validateRule.rules[name] = {};\n                        validateRule.rules[name][enumName] = $selector.attr(enumValueArr[i]);\n                        var message = $selector.attr('rxmmessage');\n                        if (!!message) {\n                            validateRule.messages[name] = {};\n                            validateRule.messages[name][enumName] = message;\n                        }\n                    }\n                }\n                //自定义正则表达式校验\n                if (typeof ($selector.attr('rxmreg')) != 'undefined') {\n                    //console.log($selector.attr('name'));\n                    var name = $selector.attr('name');\n                    var _validator = $;\n                    _validator.validator.addMethod(\"rxmreg\", function (value, element) {\n                        var ormreg = new RegExp($(element).attr('rxmreg'));\n                        return this.optional(element) || (ormreg.test(value));\n                    }, function (params, element) {\n                        var message = typeof $(element).attr('rxmmessage') == 'undefined' ? \"请检查输入项\" : $(element).attr('rxmmessage');\n                        return \"<font color='#a94442'>\" + message + \"</font>\";\n                    });\n                }\n            }\n            return validateRule;\n        };\n        /**检测form状态，如果是view，则隐藏按钮并禁止输入内容*/\n        var _formOptypeCheck = function () {\n            var optype;\n            if (!!(optype = appTool.getAppArgs()) && (optype = optype.form) && (optype = optype.optype) && (optype == 'view')) { //查看模式，输入框不可编辑并隐藏按钮\n                jForm.find('input').attr('disabled', 'disabled');\n                jForm.find('textarea').attr('disabled', 'disabled');\n                jForm.find('select').attr('disabled', 'disabled');\n                jForm.find('input[type=radio]').attr('disabled', 'disabled');\n                jForm.find('input[type=checkbox]').attr('disabled', 'disabled');\n                jForm.find('.orm-form-btnbar button').css('display', 'none');\n            }\n        };\n        /**递归处理字符串中的[[]]标志，返回值替换后的字符串方法\n         * @type  {String} dataStr 需要处理的字符串\n         */\n        var _getAttrValue = function (dataStr) {\n            //var reg = '\\\\{\\{(.*?)\\}\\\\}';\n            var reg = '\\\\[\\\\[(.*?)\\\\]\\\\]';\n            var result = dataStr.match(reg);\n            if (result == null) {\n                return dataStr;\n            }\n            else {\n                //进行替换处理\n                var paramValue = '';\n                if (result[1].indexOf('.') != -1) {\n                    var paramFrom = result[1].split('.')[0];\n                    var param = result[1].split('.')[1];\n                    if (paramFrom == 'parent') {\n                        //从parent中获取值\n                        //从parent中获取值\n                        var wArg = appTool.getAppArgs();\n                        if (!!wArg && wArg.form && !!wArg.form.initData && !!wArg.form.initData[param]) {\n                            paramValue = wArg.form.initData[param];\n                        }\n                    }\n                    else if (paramFrom == 'form') {\n                        //获取当前from中的值\n                        paramValue = jForm.find('[name=\"' + param + '\"]').val();\n                    }\n                    //判断paramValue类型\n                    if (typeof (paramValue) == 'string') { //如果是字符串，则添加双引号\n                        dataStr = dataStr.replace(result[0], '\"' + paramValue + '\"');\n                    }\n                    else if (typeof (paramValue) == 'number') { //如果是数字，直接替换\n                        dataStr = dataStr.replace(result[0], paramValue);\n                    }\n                    else if (typeof (paramValue) == 'boolean') { //如果是布尔型，直接替换\n                        dataStr = dataStr.replace(result[0], paramValue);\n                    }\n                    else if (typeof (paramValue) == 'object') { //如果是对象，直接替换\n                        dataStr = dataStr.replace(result[0], JSON.stringify(paramValue));\n                    }\n                    else if (typeof (paramValue) == 'undefined') {\n                        dataStr = dataStr.replace(result[0], '\"\"');\n                    }\n                    dataStr = _getAttrValue(dataStr);\n                    return dataStr;\n                }\n                else {\n                    return dataStr;\n                }\n            }\n        };\n        var onValidatePlacement = function (error, element) {\n            /**jquery 验证响应事件*/\n            $(element).closest('div').append(error);\n        };\n        var _onSubmitBtn = function (e) {\n            if (this.validateEach()) {\n                var d = this.getSubmitData();\n                //获取这个按钮的\n                if ($.isExist(d)) {\n                    var dom = e.currentTarget;\n                    var it = $(dom).data(\"submit\");\n                    d = $.extend(true, d, it);\n                    if ($.isFunction(this.submitFormat)) {\n                        d = this.submitFormat(dom, d);\n                    }\n                    var rxmurl = $(dom).attr(\"rxmurl\");\n                    rxmurl.indexOf(\"/\") != 0 && (rxmurl = \"/\" + rxmurl);\n                    var data = {\n                        btn: e,\n                        url: getServer() + rxmurl,\n                        data: d\n                    };\n                    $(_id + this.msgEnum.formSubmit).rxmTriggerCmd({ data: data });\n                }\n            }\n        };\n        /**初始化默认值select，后台请求的select，级联select*/\n        var _initSelectValue = function () {\n            var $wrap = jForm;\n            var ormSelects = $wrap.find(\".rxm-select\");\n            if (!!ormSelects && ormSelects.length > 0) { //存在下拉框\n                for (var i = 0; i < ormSelects.length; i++) {\n                    var $ormSelect = $(ormSelects[i]);\n                    var initData = $ormSelect.attr('rxminitdata');\n                    if (!!initData) { //存在默认值\n                        initData = JSON.parse(initData.replace(/\\'/g, '\"'));\n                        if ($.isArray(initData)) {\n                            var optionHtml = '';\n                            for (var j = 0; j < initData.length; j++) {\n                                var option = initData[j];\n                                if (option['value'] != null && option['text'] != null) {\n                                    optionHtml += '<option value=\"' + option['value'] + '\"';\n                                    if (!!option['selected']) {\n                                        optionHtml += ' selected=\"' + option['selected'] + '\"';\n                                        //设置form中select的值\n                                        formVal[$ormSelect.attr('name')] = option['value'];\n                                    }\n                                    optionHtml += '>' + option['text'] + '</option>';\n                                }\n                            }\n                            $ormSelect.append(optionHtml);\n                        }\n                    }\n                    var initLoad = $ormSelect.attr('rxminitload');\n                    if (!!initLoad) { //存在请求后台的默认值\n                        initLoad = JSON.parse(initLoad);\n                        if (!!initLoad['url']) { //存在url\n                            var the = this;\n                            initLoad['data'] = this.getAttrValue($ormSelect, 'fetchdata');\n                            $.ajax({\n                                url: initLoad['url'],\n                                data: initLoad['data'],\n                                type: 'post',\n                                async: false,\n                                success: function (data) {\n                                    if (data != null && $.isFunction(the[$ormSelect.attr('name') + 'OptionFormat'])) {\n                                        data = the[$ormSelect.attr('name') + 'OptionFormat'](data);\n                                    }\n                                    //设置option\n                                    if (data != null) {\n                                        var optionHtml = '';\n                                        //设置默认选中值 modify by wanghuan 2019-03-06\n                                        var defaultValue;\n                                        var selectTag = false;\n                                        for (var k = 0; k < data.length; k++) {\n                                            if (data[k].value != null && data[k].text != null) {\n                                                if (k == 0) {\n                                                    defaultValue = data[k]['value'];\n                                                }\n                                                optionHtml += '<option value=\"' + data[k]['value'] + '\"';\n                                                if (!!data[k].selected) {\n                                                    optionHtml += ' selected=\"' + data[k]['selected'] + '\"';\n                                                    formVal[$ormSelect.attr('name')] = data[k]['value'];\n                                                    selectTag = true;\n                                                }\n                                                optionHtml += '>' + data[k]['text'] + '</option>';\n                                            }\n                                        }\n                                        if (!selectTag) {\n                                            formVal[$ormSelect.attr('name')] = defaultValue;\n                                        }\n                                        $ormSelect.append(optionHtml);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    var ormCascadeSelect = $ormSelect.attr('rxmcascadeselect');\n                    if (!!ormCascadeSelect) { //存在级联关系的select\n                        //绑定级联父select改变时事件\n                        $ormSelect.on(this._formEvtEnum.change, \"\", $.proxy(_onparentselectchange, this));\n                        //加载子级联select optionValue\n                        var wArg = appTool.getAppArgs();\n                        if (!wArg || !wArg.form) {\n                            _onLoadChildSelectValue.call(this, {\n                                ormCascadeSelect: JSON.parse(ormCascadeSelect),\n                                parentValue: $ormSelect.val(),\n                                childValue: '',\n                                state: \"added\"\n                            });\n                        }\n                        else if (!!wArg && wArg.form && wArg.form.optype != 'edit') {\n                            _onLoadChildSelectValue.call(this, {\n                                ormCascadeSelect: JSON.parse(ormCascadeSelect),\n                                parentValue: $ormSelect.val(),\n                                childValue: '',\n                                state: wArg.form.optype\n                            });\n                        }\n                    }\n                }\n            }\n        };\n        /**初始化日期选择器 */\n        var _initDate = function () {\n            //判断是移动端，调用原生日期插件\n            var rrr = window;\n            var isMobileOpen = rrr.require('RxmAppTool').isMobileOpen();\n            if (isMobileOpen) {\n                var $wrap = jForm;\n                var rxmDate = $wrap.find(\".rxm-date\");\n                if (!!rxmDate && rxmDate.length > 0) { //存在日期输入框\n                    for (var i = 0; i < rxmDate.length; i++) {\n                        var $rxmDate = $(rxmDate[i]);\n                        var dateType = $rxmDate.attr(\"type\");\n                        //设置为文本输入框，输入框禁止软键盘弹出\n                        $rxmDate.attr(\"type\", \"text\");\n                        $rxmDate.focus(function () {\n                            _document.activeElement.blur();\n                        });\n                        //判断日期选择器类型 \n                        //日期选择器\n                        if (dateType == 'date') {\n                            $rxmDate.tap(function (event) {\n                                control.openDatePicker({\n                                    callback: function (e, data) {\n                                        data.year && data.month && data.day\n                                            && $(event.target).val(data.year + \"/\" + data.month + \"/\" + data.day);\n                                    }\n                                });\n                            });\n                        }\n                        //时间选择器\n                        if (dateType == 'time') {\n                            $rxmDate.tap(function (event) {\n                                control.openTimePicker({\n                                    callback: function (e, data) {\n                                        data.hour && data.minute\n                                            && $(event.target).val(data.hour + \":\" + data.minute);\n                                    }\n                                });\n                            });\n                        }\n                        //年月日时分\n                        if (dateType == 'datetime-local') {\n                            $rxmDate.tap(function (event) {\n                                control.openDateAndTimePicker({\n                                    callback: function (e, data) {\n                                        // console.log(JSON.stringify(data))\n                                        data.year && data.month && data.day && (data.hour) && (data.min)\n                                            && $(event.target).val(data.year + \"/\" + data.month + \"/\" + data.day + \" \" + data.hour + \":\" + data.min);\n                                    }\n                                });\n                            });\n                        }\n                        //时分秒\n                        if (dateType == 'second') {\n                            $rxmDate.tap(function (event) {\n                                control.openTimeAndSecondPicker({\n                                    callback: function (e, data) {\n                                        // console.log(JSON.stringify(data))\n                                        data.hour && data.minute && data.second\n                                            && $(event.target).val(data.hour + \":\" + data.minute + \":\" + data.second);\n                                    }\n                                });\n                            });\n                        }\n                    }\n                }\n            }\n        };\n        /**初始化组织选择输入框 */\n        var _initSelectOrg = function () {\n            //判断是移动端\n            var rrr = window;\n            var isMobileOpen = rrr.require('RxmAppTool').isMobileOpen();\n            if (isMobileOpen) {\n                var $wrap = jForm;\n                var rxmSelectOrg = $wrap.find(\".rxm-selectOrg\");\n                if (!!rxmSelectOrg && rxmSelectOrg.length > 0) {\n                    for (var i = 0; i < rxmSelectOrg.length; i++) {\n                        var $rxmSelectOrg = $(rxmSelectOrg[i]);\n                        $rxmSelectOrg.tap(function (event) {\n                            _document.activeElement.blur();\n                            //设置tagType\n                            var tagType = $(event.target).attr('rxmtagtype');\n                            (typeof tagType == 'string') && (tagType = JSON.parse(tagType.replace(/\\'/g, '\"')));\n                            //设置是否多选\n                            var multi = typeof $(event.target).attr('rxmmulti') != 'undefined';\n                            //设置无数据时是否提交\n                            var noDataCanSubmit = typeof $(event.target).attr('rxmnodatacansubmit') != 'undefined';\n                            //设置treedata\n                            var treeData = typeof $(event.target).attr('rxmtreedata') == 'string' ? JSON.parse(($(event.target).attr('rxmtreedata').replace(/\\'/g, '\"'))) : {};\n                            //设置hideNode\n                            var hideNode = typeof $(event.target).attr('rxmhidenode') == 'string' ? JSON.parse(($(event.target).attr('rxmhidenode').replace(/\\'/g, '\"'))) : {};\n                            PageBase.OrgSelect({\n                                hideNode: hideNode,\n                                multi: multi,\n                                treeData: treeData,\n                                noDataCanSubmit: noDataCanSubmit,\n                                tagType: tagType,\n                                data: typeof $(event.target).attr('rxmdata') == 'string' ? JSON.parse($(event.target).attr('rxmdata')) : {},\n                                callback: function (data) {\n                                    if ((!!data) && (!!data.selectedAll)) {\n                                        // var selData = []; // 画表格使用\n                                        //names选择人员的名称，显示在input中\n                                        var names = '';\n                                        //selDataObj存储选择的信息，存入rxmdata，作为下次传入data\n                                        var selDataObj = {};\n                                        if (data.selectedAll.dept) {\n                                            var deptList = [];\n                                            $.each(data.selectedAll.dept, function (index, obj) {\n                                                deptList.push(obj.deptUuid);\n                                                names = names + obj.deptName + \",\";\n                                            });\n                                            selDataObj.dept = deptList;\n                                            // selData = selData.concat(data.selectedAll.dept);\n                                        }\n                                        if (data.selectedAll.user) {\n                                            var userList = [];\n                                            $.each(data.selectedAll.user, function (index, obj) {\n                                                userList.push({\n                                                    deptUuid: obj.deptUuid,\n                                                    userUuid: obj.userUuid\n                                                });\n                                                names = names + obj.userName + \",\";\n                                            });\n                                            selDataObj.user = userList;\n                                            // selData = selData.concat(data.selectedAll.user);\n                                        }\n                                        if (data.selectedAll.role) {\n                                            var roleList = [];\n                                            $.each(data.selectedAll.role, function (index, obj) {\n                                                roleList.push(obj.roleUuid);\n                                                names = names + obj.roleName + \",\";\n                                            });\n                                            selDataObj.role = roleList;\n                                            // selData = selData.concat(data.selectedAll.role);\n                                        }\n                                        if (data.selectedAll.roleMember) {\n                                            var roleMemberList = [];\n                                            $.each(data.selectedAll.roleMember, function (index, obj) {\n                                                roleMemberList.push(obj.userUuid);\n                                                names = names + obj.userName + \",\";\n                                            });\n                                            selDataObj.roleMember = roleMemberList;\n                                            // selData = selData.concat(data.selectedAll.roleMember);\n                                        }\n                                        if (data.selectedAll.gw) {\n                                            var gwList = [];\n                                            $.each(data.selectedAll.gw, function (index, obj) {\n                                                gwList.push({\n                                                    deptUuid: obj.deptUuid,\n                                                    gwUuid: obj.gwUuid\n                                                });\n                                                names = names + obj.gwName + \",\";\n                                            });\n                                            selDataObj.gw = gwList;\n                                            // selData = selData.concat(data.selectedAll.gw);\n                                        }\n                                        $(event.target).attr('rxmdata', JSON.stringify(selDataObj));\n                                        names = names.substring(0, names.length - 1);\n                                        $(event.target).val(names);\n                                    }\n                                    // else{\n                                    //     (!!data)&&(!!data.type)&&(data.type==\"submit\")\n                                    //     && ($(event.target).val(\"\"))\n                                    //     &&($(event.target).removeAttr('rxmdata'));\n                                    // }\n                                }\n                            });\n                        });\n                    }\n                }\n            }\n        };\n        var _initRange = function () {\n            jForm.find(\"[type='range']\").bind('input', function (e) {\n                var v = this.value;\n                var max = parseInt($(e.target).attr(\"max\"));\n                var per = v / max * 100;\n                $(e.target).css(\"background-size\", per + \"% 100%\");\n            });\n        };\n        /**\n         * 初始化下上传方法\n         */\n        var _initFileUploader = function (editTag) {\n            var _this_1 = this;\n            var fileUploaders = jForm.find('.rxm-file-uploader');\n            if (!!fileUploaders && fileUploaders.length > 0) {\n                var rqr = window;\n                rqr.require([\"RxmFormUploader\", \"RxmFileInfo\"], function (RxmFormUploader, f) {\n                    //遍历form中的所有上传\n                    fileInfo = f;\n                    fileUpView = {};\n                    for (var i = 0; i < fileUploaders.length; i++) {\n                        var curSelect = $(fileUploaders[i]).parent().parent();\n                        var curId = curSelect.attr('id');\n                        var name = $(fileUploaders[i]).attr('name');\n                        var _this = _this_1;\n                        var onChange = function (data) {\n                            var a = {\n                                name: name,\n                                value: data,\n                                from: \"userkey\"\n                            };\n                            _this.inputValue(a);\n                        };\n                        fileUpView[name] = new RxmFormUploader({ id: curId, onChange: onChange });\n                    }\n                });\n            }\n        };\n        /**加载子级联select的optionValue*/\n        var _onLoadChildSelectValue = function (data) {\n            ///<param  name=\"ormCascadeSelect\"   type=\"Object\"></param>\n            ///<param name=\"parentValue\" value=\"\">父级联的选择值</param>\n            ///<param name=\"childValue\" value=\"\">子级联的选择值</param>\n            var ormCascadeSelect = data.ormCascadeSelect;\n            var parentValue = data.parentValue;\n            var childValue = data.childValue;\n            var state = data.state;\n            if (!!ormCascadeSelect['rxmChildSelectId'] && !!ormCascadeSelect['initLoad']) {\n                var initLoad = ormCascadeSelect['initLoad'];\n                var rxmChildSelectId = ormCascadeSelect['rxmChildSelectId'];\n                if (!!initLoad['url']) {\n                    //var data = {\n                    //    parentValue: parentValue,\n                    //}\n                    initLoad['data'] = {};\n                    var the = this;\n                    var $select = jForm.find('#' + rxmChildSelectId).attr('name');\n                    initLoad['data'] = this.getAttrValue(jForm.find('#' + rxmChildSelectId), 'fetchdata');\n                    initLoad['data']['parentValue'] = parentValue;\n                    $.ajax({\n                        url: initLoad['url'],\n                        type: 'post',\n                        data: initLoad['data'],\n                        async: false,\n                        success: function (data) {\n                            if (data != null && $.isFunction(the[$select + 'OptionFormat'])) {\n                                data = the[$select + 'OptionFormat'](data);\n                            }\n                            if (data != null) {\n                                var optionHtml = '';\n                                for (var k = 0; k < data.length; k++) {\n                                    if (data[k].value != null && data[k].text != null) {\n                                        optionHtml += '<option value=\"' + data[k]['value'] + '\"';\n                                        if (!!data[k].selected) {\n                                            optionHtml += ' selected=\"' + data[k]['selected'] + '\"';\n                                            formVal[$('#' + rxmChildSelectId).attr('name')] = data[k]['value'];\n                                        }\n                                        optionHtml += '>' + data[k]['text'] + '</option>';\n                                    }\n                                }\n                                $('#' + rxmChildSelectId).empty();\n                                $('#' + rxmChildSelectId).append(optionHtml);\n                            }\n                            else { //没有data，清空select的option\n                                formVal[$('#' + rxmChildSelectId).attr('name')] = '';\n                                $('#' + rxmChildSelectId).empty();\n                            }\n                            if (!!childValue) {\n                                $('#' + rxmChildSelectId).val(childValue);\n                            }\n                            else if (!!state && state == 'new') {\n                                //do nothing\n                            }\n                            else {\n                                var a = {\n                                    name: $('#' + rxmChildSelectId).attr(\"name\"),\n                                    value: $('#' + rxmChildSelectId).val(),\n                                    trigger: false,\n                                };\n                                the.inputValue(a);\n                            }\n                        }\n                    });\n                }\n            }\n        };\n        /**\n         * 初始化下拉选择树方法\n         * add by wanghuan 2019-01-17\n         */\n        var _initSelectTree = function (editTag) {\n            var $wrap = jForm;\n            var selectTrees = jForm.find('.rxm-select-tree');\n            if (!!selectTrees && selectTrees.length > 0) {\n                //遍历form中的所有下拉选择树\n                for (var i = 0; i < selectTrees.length; i++) {\n                    var curSelect = $(selectTrees[i]);\n                    var curId = curSelect.attr('rxmselecttreeid');\n                    if (!!!curId) { //未设置ID 直接返回\n                        break;\n                    }\n                    //数据的ID\n                    var curIdKey = curSelect.attr('rxmidkey');\n                    //数据的父ID\n                    var curPIdKey = curSelect.attr('rxmpidkey');\n                    //数据的Text\n                    var curTextKey = curSelect.attr('rxmtextkey');\n                    var curMulti = curSelect.attr('rxmmulti') == 'true' ? true : false;\n                    //本地数据\n                    var curLocalData = curSelect.attr('rxmlocaldata');\n                    //请求数据的URL\n                    var curUrl = curSelect.attr('rxmurl');\n                    //请求参数\n                    var curParam = curSelect.attr('rxmparam');\n                    var curPanelMinHeight = curSelect.attr('rxmpanelminh');\n                    var curPanelMaxHeight = curSelect.attr('rxmpanelmaxh');\n                    var curPanelHeight = curSelect.attr('rxmpanelh');\n                    var curNodeopen = curSelect.attr('rxmnodeopen') == 'true' ? true : false;\n                    var curCheckEP = curSelect.attr('checkep') == 'true' ? true : false;\n                    var curCheckES = curSelect.attr('checkes') == 'true' ? true : false;\n                    var curCancelEP = curSelect.attr('cancelep') == 'true' ? true : false;\n                    var curCancelES = curSelect.attr('canceles') == 'true' ? true : false;\n                    //获取初始化值\n                    var curValue = curSelect.attr('rxmvalue');\n                    if (!!curValue) {\n                        //此功能是为了在html的rxmvalue属性中填写rxmvalue=\"2,3,4\"或 rxmvalue=\"[2,3,4]\"都可正常解析\n                        try {\n                            //例如 将rxmvalue的属性值为'[2,3,4]' 进而转换为数组[2,3,4]\n                            curValue = JSON.parse(curValue).map(String);\n                        }\n                        catch (e) {\n                            curValue = curValue.split(',');\n                        }\n                    }\n                    else { //没有初始化值时，如果是编辑态，则置为false（为了防止编辑状态下，inputSelectTree内容为空的情况下，不会走onchange方法，第一次改变值无法保存的bug）\n                        if (editTag) {\n                            editTag = false;\n                        }\n                    }\n                    var curSearch = curSelect.attr('rxmsearch');\n                    var _this = this;\n                    //拼接初始化对象\n                    var combo = {};\n                    combo.id = curId;\n                    combo.multi = curMulti;\n                    combo.key = {\n                        idKey: curIdKey,\n                        textKey: curTextKey\n                    };\n                    combo.event = {\n                        onChange: function (data, lastValue, optionId) {\n                            var str = [];\n                            var id = $('#' + optionId).parents('[rxmtype]:first').attr('rxmidkey');\n                            for (var j = 0; j < data.length; j++) {\n                                str.push(data[j][id]);\n                            }\n                            var a = {\n                                name: optionId,\n                                value: str.join(','),\n                                from: \"userkey\"\n                            };\n                            if (!editTag) { //非编辑态 触发form数据更改\n                                _this.inputValue(a);\n                            }\n                            editTag = false;\n                        }\n                    };\n                    if (!!curPanelHeight) {\n                        combo.panelHeight = curPanelHeight;\n                    }\n                    if (!!curPanelMinHeight) {\n                        combo.panelMinHeight = curPanelMinHeight;\n                    }\n                    if (!!curPanelMaxHeight) {\n                        combo.panelMaxHeight = curPanelMaxHeight;\n                    }\n                    var ztree = {};\n                    ztree.data = {\n                        simpleData: {\n                            enable: true,\n                            idKey: curIdKey,\n                            pIdKey: curPIdKey\n                        },\n                        key: {\n                            name: curTextKey\n                        }\n                    };\n                    var checkStr = '';\n                    var cancelStr = '';\n                    if (curCheckEP) {\n                        checkStr += 'p';\n                    }\n                    if (curCheckES) {\n                        checkStr += 's';\n                    }\n                    if (curCancelEP) {\n                        cancelStr += 'p';\n                    }\n                    if (curCancelES) {\n                        cancelStr += 's';\n                    }\n                    ztree.check = {\n                        chkboxType: {\n                            'Y': checkStr,\n                            'N': cancelStr\n                        }\n                    };\n                    var comboTree = {\n                        combo: combo,\n                        ztree: ztree\n                    };\n                    if (!!curUrl) {\n                        comboTree.data = {\n                            url: curUrl,\n                            param: typeof (curParam) != 'undefined' ? JSON.parse(curParam) : ''\n                        };\n                    }\n                    else {\n                        if (!!curLocalData) {\n                            comboTree.data = JSON.parse(curLocalData);\n                        }\n                    }\n                    if (!!curNodeopen) {\n                        comboTree.formatter = function (node) { node.open = true; };\n                    }\n                    if (!!curValue) {\n                        comboTree.value = curValue;\n                    }\n                    if (!!curSearch) {\n                        comboTree.search = {\n                            enable: curSearch,\n                            fields: [curTextKey]\n                        };\n                    }\n                    //生成下拉选择树\n                    ComboTree(comboTree);\n                }\n            }\n        };\n        //初始化自定义校验参数\n        var _getValidateOption = function () {\n            var rrr = window;\n            var options = {\n                errorElement: 'span',\n                errorClass: 'rxm-warn-block',\n                highlight: function (target) {\n                    var fg = $(target).closest('.rxm-form-group');\n                    //直接是输入框时，修改输入框的边框样式，比如table中的输入框验证\n                    fg.length ? fg.addClass('has-error') : $(target).addClass('cs-error-border');\n                    $(target).parents('.rxm-form-group').addClass('rxm-validate');\n                    var vType = $(target).attr('type');\n                    if (!!vType) {\n                        if (vType == 'checkbox' || vType == 'radio') { //多选输入框\n                            var $error = $(target).siblings('.rxm-warn-block');\n                            $error.css('clear', 'left');\n                            $error.css('left', '15px');\n                            $(target).parents(':eq(1)').append($error);\n                        }\n                    }\n                },\n                success: function (message) {\n                    var fg = message.closest('.rxm-form-group');\n                    fg.length ? fg.removeClass('has-error') : message.prev().removeClass('cs-error-border');\n                    message.parents('.rxm-form-group').removeClass('rxm-validate');\n                    // $('.rxm-warn-block').parents('.rxm-form-group').removeClass('rxm-validate');\n                    // $('.rxm-warn-block').parents('.rxm-form-group').removeClass('has-error');\n                    message.remove();\n                }\n            };\n            return options;\n        };\n        /**\n         * @class\n         * @constructor\n         * @param {} config\n         */\n        var RxmLayoutFormImpl = /** @class */ (function () {\n            function RxmLayoutFormImpl() {\n                /**获取 checkbox 和radio值，可视化编辑重写onchanpe方法使用 modified by hanchunxiao 2019-04-24*/\n                this.checkRadioInputValue = _checkRadioInputValue;\n                //定义cfg 默认\n                this._cfgDefault = {\n                    id: \"\",\n                    data: {\n                        theform: {\n                            _key: \"\",\n                            value: {\n                                _op_type: \"\",\n                            }\n                        },\n                        _gt: {}\n                    },\n                    dirtied: false,\n                    validateTag: true\n                };\n                this._cls = function (config) { };\n                /**控件事件枚举对象*/\n                this.msgEnum = {\n                    /**数据将要被改变*/\n                    inputValueChanging: \"inputValueChanging\",\n                    /**表单被重置*/\n                    formReset: \"formReset\",\n                    /**表单被提交服务器端，并且返回成功*/\n                    //formSubmitSuccess: \"formSubmitSuccess\",\n                    /**form中input输入框值被转变*/\n                    formValueChanged: \"formValueChanged\",\n                    /**表单被选择*/\n                    formSelect: \"formSelect\",\n                    /**表单被提交*/\n                    formSubmit: \"formSubmit\",\n                    /**表单被提交并且失败*/\n                    // formSubmitFail: \"formSubmitFail\",\n                    /**输入框的值已经被转变*/\n                    inputValueChanged: \"inputValueChanged\",\n                };\n                // /**表单布局*/\n                //  attrLayout(value:string):string {\n                //     if (!!value) {\n                //         this_cfg.layout = value;\n                //     }\n                //     return this._cfg.layout;\n                // }\n                // /**表单的提交地址*/\n                //  attrActionUrl(value:string):string {\n                //     if (!!value) {\n                //         this._cfg.actionUrl = value;\n                //     }\n                //     return this._cfg.actionUrl;\n                // }\n                this._formEvtEnum = {\n                    //onblur    script  元素失去焦点时运行的脚本。\n                    blur: \"blur\",\n                    //onchange  script  在元素值被改变时运行的脚本。\n                    change: \"change\",\n                    //oncontextmenu script  当上下文菜单被触发时运行的脚本,。\n                    contextmenu: \"contextmenu\",\n                    //onfocus   script  当元素获得焦点时运行的脚本。,\n                    focus: \"focus\",\n                    //onformchange  script  在表单改变时运行的脚本。\n                    formchange: \"formchange\",\n                    //onforminput   script  当表单获得用户输入时运行的脚本。\n                    forminput: \"forminput\",\n                    //oninput   script  当元素获得用户输入时运行的脚本。\n                    input: \"input\",\n                    //oninvalid script  当元素无效时运行的脚本。\n                    invalid: \"invalid\",\n                    //onreset   script  当表单中的重置按钮被点击时触发。HTML5 中不支持。\n                    reset: \"reset\",\n                    //onselect  script  在元素中文本被选中后触发。\n                    select: \"select\",\n                    //onsubmit  script  在提交表单时触发。\n                    submit: \"submit\",\n                    //onbeforeunload\n                    beforeunload: \"beforeunload\"\n                };\n                forms[config.id] = this;\n                this._cls(config);\n                _initBor = false;\n            }\n            /**校验每个input 输入值是否正确*/\n            RxmLayoutFormImpl.prototype.validateEach = function () {\n                if (typeof jvalidator === \"undefined\")\n                    return true; //不需要校验\n                var s = \"#\" + _id + \" input,\" + \"#\" + _id + \" select\";\n                var inputs = $(s);\n                var b = true;\n                var bFirstFinded = false;\n                var validateRule = {};\n                for (var i = 0; i < inputs.length; i++) {\n                    var it = inputs[i];\n                    b = this.validateOne(it);\n                    if (!b && !bFirstFinded) {\n                        $(it).focus();\n                        bFirstFinded = true;\n                    }\n                }\n                return !bFirstFinded;\n            };\n            /**校验单个input */\n            RxmLayoutFormImpl.prototype.validateOne = function (it) {\n                if (typeof jvalidator === \"undefined\")\n                    return true; //不需要校验\n                return jvalidator.element(it);\n            };\n            /**得到form gt的值 主要用于处理表格的值 reload*/\n            RxmLayoutFormImpl.prototype.gtValue = function (args) {\n                var initGt = $.extend(true, {}, _gt);\n                var resultGt = $.extend(true, {}, _gt);\n                var argsYuan = args;\n                if (args) {\n                    //处理修改的数据\n                    for (var formid in resultGt) {\n                        for (var i = 0; i < resultGt[formid].value.length; i++) {\n                            var dataId = resultGt[formid].value[i][resultGt[formid]._key];\n                            for (var formid2 in args) {\n                                if (formid == formid2) {\n                                    for (var j = 0; j < args[formid2].length; j++) {\n                                        var dataId2 = args[formid2][j][resultGt[formid]._key];\n                                        //主键key相同,即为数据修改\n                                        if (dataId == dataId2) {\n                                            //替换数据\n                                            resultGt[formid].value[i] = args[formid2][j];\n                                            //设置数据类型为\"modified\"\n                                            resultGt[formid].value[i]._op_type = \"modified\";\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    //处理数据 数筛选出新增、删除数据\n                    for (var formid in initGt) {\n                        for (var i = 0; i < initGt[formid].value.length; i++) {\n                            var dataId = initGt[formid].value[i][initGt[formid]._key];\n                            for (var formid2 in argsYuan) {\n                                if (formid == formid2) {\n                                    for (var j = 0; j < argsYuan[formid2].length; j++) {\n                                        var dataId2 = argsYuan[formid2][j][initGt[formid]._key];\n                                        //主键key相同,数据修改\n                                        if (dataId == dataId2) {\n                                            //处理新增的数据 将传入的数据数组修改的数据删除 筛选出新增数据\n                                            argsYuan[formid2].splice(j, 1);\n                                            //处理删除数据 将原有_gt数据修改的数据删除  筛选出删除数据\n                                            initGt[formid].value.splice(i, 1);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    //处理新增数据 将传入的数据数组筛选出的新增数据 添加至gt\n                    for (var formid in resultGt) {\n                        for (var formid2 in args) {\n                            if (formid == formid2) {\n                                if (args[formid2].length > 0) {\n                                    for (var i = 0; i < args[formid2].length; i++) {\n                                        //将数据状态设置为\"added\"\n                                        args[formid2][i]._op_type = \"added\";\n                                    }\n                                }\n                                resultGt[formid].value = resultGt[formid].value.concat(args[formid2]);\n                            }\n                        }\n                    }\n                    //处理删除数据 将原有_gt数据筛选出删除数据 添加至gt\n                    for (var formid in resultGt) {\n                        for (var i = 0; i < resultGt[formid].value.length; i++) {\n                            var dataId = resultGt[formid].value[i][resultGt[formid]._key];\n                            for (var formid2 in initGt) {\n                                if (formid == formid2) {\n                                    for (var j = 0; j < initGt[formid2].value.length; j++) {\n                                        var dataId2 = initGt[formid2].value[j][resultGt[formid]._key];\n                                        //主键key相同,数据修改\n                                        if (dataId == dataId2) {\n                                            resultGt[formid].value[i]._op_type = \"deleted\";\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    //表单设标志位\n                    //console.info('表单设标志位')\n                    this.attrDirtied(true);\n                }\n                //console.info(resultGt);\n                return resultGt;\n            };\n            /**得到form表单全部的input值*/\n            RxmLayoutFormImpl.prototype.getFormData = function () {\n                var ret = formVal;\n                ret = _radioCheckboxArrToString(ret);\n                this.formatFormData && (ret = this.formatFormData(ret));\n                return ret;\n            };\n            RxmLayoutFormImpl.prototype.formatFormData = function (data) {\n                ret = data;\n                // ret = _radioCheckboxArrToString(data)\n                return ret;\n            };\n            /**\n             * 属性  Dirtied\n             * @param {Boolean} dirtied 可选  设置是否dirtied的值  undefined 是获取Dirtied值\n             * @returns {Boolean}\n             */\n            RxmLayoutFormImpl.prototype.attrDirtied = function (dirtied) {\n                //console.info('attrDirtied')\n                if ($.isExist(dirtied)) {\n                    formDirty = dirtied;\n                    if (dirtied) {\n                        $(_selectorSubmitBtn).attr(\"disable\", \"disable\");\n                    }\n                    else {\n                        $(_selectorSubmitBtn).removeAttr(\"disable\");\n                    }\n                }\n                return formDirty;\n            };\n            // /**\n            //  * 设置serialize 是否只是获取 form下的input 和select 值  false 获取转变的值\n            //  * @param  value \n            //  */\n            // attrRxmInputOnly(value?: Boolean): Boolean {\n            //     ///<param name=\"\" type=\"Boolean\">boolean true 或者false</param>\n            //     var ret: any\n            //     if ($.isExist(value)) {\n            //         if (!value) {\n            //             ret = false\n            //             jForm.removeAttr(\"rxminputonly\");\n            //         } else {\n            //             ret = true\n            //             jForm.attr(\"rxminputonly\", \"rxminputonly\")\n            //         }\n            //     } else {\n            //         ret = jForm.attr(\"rxminputonly\");\n            //         ret = $.isExist(jForm.attr(\"rxminputonly\")) ? false : true;\n            //     }\n            //     return ret;\n            // }\n            /**得到form表单需要提交的数据数据*/\n            RxmLayoutFormImpl.prototype.getSubmitData = function () {\n                var ret;\n                if (formDirty) {\n                    /*处理 form表单中的数据 */\n                    ret = {};\n                    var it = this.getFormData();\n                    var itn = _name;\n                    if (it._op_type.length > 0 &&\n                        (ret[it._op_type] = ret[it._op_type] || {}) &&\n                        (ret[it._op_type][itn] = ret[it._op_type][itn] || [])) {\n                        var itc = $.extend(true, {}, it);\n                        itc._op_type = undefined;\n                        ret[it._op_type][itn].push(itc);\n                    }\n                    /**处理 事物相关表的数据 */\n                    var its = _gt;\n                    for (var i in its) {\n                        itn = i;\n                        for (var j in its[i].value) {\n                            var it = its[i].value[j];\n                            if (it && it._op_type && it._op_type.length > 0 &&\n                                (ret[it._op_type] = ret[it._op_type] || {}) &&\n                                (ret[it._op_type][itn] = ret[it._op_type][itn] || [])) {\n                                var itc = $.extend(true, {}, it);\n                                itc._op_type = undefined;\n                                ret[it._op_type][itn].push(itc);\n                            }\n                        }\n                    }\n                }\n                this.formatSubmitData && (ret = this.formatSubmitData(ret));\n                return ret;\n            };\n            /**格式化提交后台的数据 */\n            RxmLayoutFormImpl.prototype.formatSubmitData = function (data) {\n                var ret = data;\n                return ret;\n            };\n            /**设置或者改变input  select  值\n             * @param  {String} name   名字，必选\n             * @param  {*}  value   值  ，可选 undefined 时，获取 name input 的值\n             * @param  {Boolean}  trigger  可选  ，是否发送 消息 formValueChanged\n             * @param  {String} from  可选  设置者\n             */\n            RxmLayoutFormImpl.prototype.inputValue = function (name, value, trigger, from) {\n                var rradio = /^(?:radio)$/i, rcheck = /^(?:checkbox)$/i, rselect = /^(?:option|select-one|select-multiple)$/i, rvalue = /^(?:button|color|date|datetime|datetime-local|email|hidden|month|number|password|range|reset|search|submit|tel|text|textarea|time|url|week)$/i;\n                /**@type {jQuery}*/\n                var $target;\n                if (!!name.name) {\n                    value = name.value;\n                    from = name.from;\n                    trigger = name.trigger;\n                    name = name.name;\n                }\n                ;\n                if ($.isExist(name) && !$.isExist(value)) {\n                    //返回一个值\n                    //返回整个form表单的所有值\n                    return formVal[name];\n                }\n                !$.isExist(trigger) && (trigger = true);\n                var fromkey = typeof from != \"undefined\" && from == 'userkey';\n                if (typeof value === \"undefined\")\n                    return formVal[name];\n                if ($.isDom(name)) {\n                    $target = $(name);\n                }\n                else if ($.isString(name)) {\n                    var attr = \"[name=\" + name + \"]\";\n                    $target = jForm.find(attr);\n                }\n                else if (!!name.jquery) {\n                    $target = name;\n                }\n                ;\n                if ($target.length == 0)\n                    return;\n                var type = $target[0];\n                type = (type.type || type.nodeName).toLowerCase();\n                var property = null;\n                var it = formVal;\n                if (rvalue.test(type)) {\n                    var old = formVal[name];\n                    if (old !== value) {\n                        !fromkey && ($target[0].value = value);\n                        var data = {\n                            old: old,\n                            cur: value,\n                            dom: $target[0]\n                        };\n                        it[name] = value;\n                        if (trigger) {\n                            //console.info('1')\n                            this.attrDirtied(true);\n                            it._op_type.length == 0 && (it._op_type = \"modified\");\n                            $target.trigger(this.msgEnum.inputValueChanged, data);\n                            jForm.trigger(this.msgEnum.formValueChanged, data);\n                        }\n                    }\n                }\n                else if (rradio.test(type)) {\n                    property = \"radio\";\n                    var old = formVal[name];\n                    if (old !== value) {\n                        //             !fromkey && ($target[0].value = value);\n                        if (!fromkey) { //初始化\n                            var name = $($target).attr('name');\n                            //$('input[name=\"' + name + '\"][value=\"' + value + '\"]').prop('checked', true);\n                            value = _checkRadioInputValue(name, value);\n                        }\n                        else {\n                            value = _checkRadioInputValue(name);\n                        }\n                        var data = {\n                            old: old,\n                            cur: value,\n                            dom: $target[0]\n                        };\n                        it[name] = value;\n                        if (trigger) {\n                            //inputValue.info('2')\n                            this.attrDirtied(true);\n                            it._op_type.length == 0 && (it._op_type = \"modified\");\n                            $target.trigger(this.msgEnum.inputValueChanged, data);\n                            jForm.trigger(this.msgEnum.formValueChanged, data);\n                        }\n                    }\n                }\n                else if (rcheck.test(type)) {\n                    property = \"check\";\n                    var old = formVal[name];\n                    if (old !== value) {\n                        //!fromkey && ($target[0].value = value);\n                        if (!fromkey) { //初始化\n                            var name = $($target).attr('name');\n                            if (typeof value != \"undefined\") {\n                                //先默认都不选中\n                                // $('input[name=\"' + name + '\"]').prop('checked', false);\n                                // value = JSON.parse(value);\n                                // for (var i = 0; i < value.length; i++) {\n                                //     $('input[name=\"' + name + '\"][value=\"' + value[i] + '\"]').prop('checked', true);\n                                // }\n                                value = _checkRadioInputValue(name, value);\n                            }\n                        }\n                        else {\n                            value = _checkRadioInputValue(name);\n                        }\n                        var data = {\n                            old: old,\n                            cur: value,\n                            dom: $target[0]\n                        };\n                        it[name] = value;\n                        // $('input[name=\"' + name + '\"]').each(function (i, e) {\n                        //     if ($(e).prop('checked') == true) {\n                        //         it[name].push($(e).val());\n                        //     }\n                        // });\n                        //modify by wangh 修复多选框选中后再取消选中校验信息位置错误 2019-06-25\n                        if ($('[name=' + name + ']').eq(0).length > 0) {\n                            var $error = $('[name=' + name + ']').eq(0).siblings('.rxm-warn-block');\n                            if ($error.length > 0) {\n                                $error.css('clear', 'left');\n                                $error.css('left', '15px');\n                                $('[name=' + name + ']').eq(0).parents(':eq(1)').append($error);\n                            }\n                        }\n                        if (trigger) {\n                            //inputValue.info('3')\n                            this.attrDirtied(true);\n                            it._op_type.length == 0 && (it._op_type = \"modified\");\n                            $target.trigger(this.msgEnum.inputValueChanged, data);\n                            jForm.trigger(this.msgEnum.formValueChanged, data);\n                        }\n                    }\n                }\n                else if (rselect.test(type)) {\n                    property = \"selected\";\n                    var old = formVal[name];\n                    if (old !== value) {\n                        !fromkey && ($target[0].value = value);\n                        it[name] = value;\n                        var data = {\n                            old: old,\n                            cur: value,\n                            dom: $target[0]\n                        };\n                        if (trigger) {\n                            //inputValue.info('4')\n                            this.attrDirtied(true);\n                            it._op_type.length == 0 && (it._op_type = \"modified\");\n                            $target.trigger(this.msgEnum.inputValueChanged, data);\n                            jForm.trigger(this.msgEnum.formValueChanged, data);\n                        }\n                    }\n                    var oc = $($target).attr('rxmcascadeselect');\n                    if (!!oc) {\n                        oc = JSON.parse(oc);\n                        ruleCascadeSelect(oc);\n                        if (!!oc['rxmChildSelectId'] && !!oc['initLoad']) {\n                            _onLoadChildSelectValue.call(this, {\n                                ormCascadeSelect: oc,\n                                parentValue: $target[0].value,\n                                childValue: it[oc['rxmChildSelectId']]\n                            });\n                        }\n                    }\n                }\n                return value;\n            };\n            /**数据将要被改变事件绑定*/\n            RxmLayoutFormImpl.prototype.bindInputValueChanging = function (arg, scope) {\n                // if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                //     arg = {\n                //         fn: this._onInputValueChanging,\n                //     };\n                //     scope = this;\n                // }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                if (!!arg.callback) {\n                    arg.fn = arg.callback;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    jForm.on(this.msgEnum.inputValueChanging, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    jForm.one(this.msgEnum.inputValueChanging, arg.data, $.proxy(cb, the));\n                }\n            };\n            // /**数据将要被改变激发函数*/\n            //  _onInputValueChanging = function _onInputValueChanging(e, data) {\n            //     ///<param  name=\"e\"  value=\"event\"></param>\n            //     ///<param  name=\"data\"   type=\"Object\"></param>\n            // }\n            /**form中input输入框值被转变事件绑定*/\n            RxmLayoutFormImpl.prototype.bindFormValueChanged = function (arg, scope) {\n                // ///<param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n                // if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                //     arg = {\n                //         fn: this._onFormValueChanged,\n                //     };\n                //     scope = this;\n                // }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                if (!!arg.callback) {\n                    arg.fn = arg.callback;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    jForm.on(this.msgEnum.formValueChanged, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    jForm.one(this.msgEnum.formValueChanged, arg.data, $.proxy(cb, the));\n                }\n            };\n            /**表单被选择事件绑定*/\n            RxmLayoutFormImpl.prototype.bindFormSelect = function (arg, scope) {\n                ///<param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n                // if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                //     arg = {\n                //         fn: this._onFormSelect,\n                //     };\n                //     scope = this;\n                // }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    jForm.on(this.msgEnum.formSelect, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    jForm.one(this.msgEnum.formSelect, arg.data, $.proxy(cb, the));\n                }\n            };\n            /**表单被提交事件绑定*/\n            RxmLayoutFormImpl.prototype.bindFormSubmit = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: _onFormSubmit,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                $(_id + this.msgEnum.formSubmit).rxmBindCmd({\n                    callback: $.proxy(cb, the)\n                });\n                //jForm.on(RxmLayoutForm.msgEnum.formSubmit, arg.data, $.proxy(arg.fn, the), arg.one);\n            };\n            /**输入框的值已经被转变事件绑定*/\n            RxmLayoutFormImpl.prototype.bindInputValueChanged = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: onInputValueChanged,\n                    };\n                    scope = this;\n                }\n                else if (!!arg.callback)\n                    return;\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                /**@type {string}*/\n                var selector;\n                if (arg.id) {\n                    selector = \"#\" + arg.id;\n                }\n                else if (arg.name) {\n                    selector = \"[name=\" + arg.name + \"]\";\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!!selector) {\n                    if (!arg.one) {\n                        jForm.on(this.msgEnum.inputValueChanged, selector, arg.data, $.proxy(cb, the));\n                    }\n                    else {\n                        jForm.one(this.msgEnum.inputValueChanged, selector, arg.data, $.proxy(cb, the));\n                    }\n                }\n                else {\n                    jForm.on(this.msgEnum.inputValueChanged, arg.data, $.proxy(cb, the), arg.one);\n                }\n            };\n            /**表单id*/\n            RxmLayoutFormImpl.prototype.attrId = function (value) {\n                if (!!value) {\n                    _id = value;\n                }\n                return _id;\n            };\n            /**表单name*/\n            RxmLayoutFormImpl.prototype.attrName = function (value) {\n                if (!!value) {\n                    $(\"#\" + _id).attr(\"name\", value);\n                }\n                return $(\"#\" + _id).attr(\"name\");\n            };\n            /**表单项有转变 */\n            RxmLayoutFormImpl.prototype.onchange = function (e, data) {\n                ///<param name=\"e\" value=\"event\"></param>\n                //console.info('onchange')\n                //this.attrDirtied(true)\n                // if(!_validateEach()){\n                //     return\n                // }\n                //因果校验中的必填校验和显隐校验判断 add by wangh 2019-05-21\n                /*\n                var causalArr = $('div[name^=\"rxmcausal\"][rxmvaltype=\"必填校验\"],[rxmvaltype=\"显隐校验\"]')\n                for(var i=0;i<causalArr.length;i++){\n                    //_expressionCheck\n                    var $tmp = causalArr.eq(i)\n                    var rxmvaltype = $tmp.attr('rxmvaltype')\n                    var rxmexphidden = $tmp.attr('rxmexphidden')\n                    var resultmsg = $tmp.attr('resultmsg')\n                    this.requireAndShowCheck(rxmvaltype,rxmexphidden,resultmsg)\n                }\n                */\n                var type = (e.target.type || e.target.nodeName).toLowerCase();\n                var name = $(e.target).attr(\"name\");\n                var value = (/^(select-multiple|checkbox|radio)$/i).test(type) ? _checkRadioInputValue(name) : $(e.target).val();\n                var a = {\n                    name: name,\n                    value: value,\n                    from: \"userkey\"\n                };\n                this.inputValue(a);\n            };\n            RxmLayoutFormImpl.prototype.init = function (args) {\n                if (!args || (args && !args.reloadForm)) {\n                    if (_initBor)\n                        return;\n                }\n                _initBor = true;\n                /**初始化函数,对象运行入口*/\n                var $wrap = jForm;\n                //注解的都是无效的事件，在chrome下测试\n                //document.getElementById(_id).addEventListener(RxmLayoutForm._formEvtEnum.blur, $.proxy(this._onblur, this));\n                jForm.change($.proxy(this.onchange, this));\n                //不起作用，本想做个叫回函数控制页面卸载不保存的问题\n                window.onbeforeunload = $.proxy(_onbeforeunload, this);\n                PageBase.bindClosePage({\n                    id: _id,\n                    callback: _onWidgetClosed\n                }, this);\n                var btnWrap = $(_selectorSubmitBtn);\n                btnWrap.tap($.proxy(_onSubmitBtn, this));\n                //this.bindFormReset(true);\n                this.bindFormSubmit(true);\n                formVal = _serialize(_id);\n                formVal._op_type = \"\";\n                //初始化select\n                _initSelectValue.call(this);\n                //初始化日期选择器\n                _initDate();\n                //初始化组织选择输入框\n                _initSelectOrg();\n                //初始化上传\n                _initFileUploader.call(this);\n                //设置范围输入框样式\n                _initRange();\n                //初始化radio和checkbox\n                //_initRadioAndCheckData();\n                //初始化校验规则\n                //修改校验规则，将判断注释\n                // if (validateTag) {\n                this.initValidate();\n                // }\n                //检测form的状态 是否是只读\n                _formOptypeCheck();\n                // if ($('div[inputname^=\"rxmvld\"]').length > 0) {\n                //     let rrr: any = window\n                //     var rxmvRun = rrr.require('OrivRunMgr')\n                //     rxmvRun.init($('html')[0].outerHTML)\n                // }\n                //初始化校验插件\n                _fetchInitValue.call(this);\n                cssOrm.on({\n                    msgType: \"slidebarBegin\",\n                    callback: $.proxy(_onSlidebarBegin, this)\n                });\n                cssOrm.on({\n                    msgType: \"slidebarSubClose\",\n                    callback: $.proxy(_onSubClose, this)\n                });\n                //取带有rxmkey的input对象\n                var key = $wrap.find(\"input[rxmkey='']\");\n                //将theform中的_key赋值\n                (!!key[0]) && (_key = key.attr(\"name\"));\n            };\n            //  _onResetBtn = function (e, data) {\n            //     jForm.trigger(RxmLayoutForm.msgEnum.formReset);\n            // }\n            // serialize(data: any): any {\n            //     if (this.attrRxmInputOnly())\n            //         return this.inputValue();\n            //     return this.getSubmitData();\n            // }\n            /**\n             * 设置表单值\n             * @param trigger       是否激活input change 事件，undefined，true 激活，false 不激活\n             * @param data          json对象，多选时为数组\n             * 代码实现参考此开源项目https://github.com/kflorence/jquery-deserialize/\n             */\n            RxmLayoutFormImpl.prototype.deserialize = function (data, trigger) {\n                var _fn = this;\n                _fn.formatInitData && (data = _fn.formatInitData(data));\n                !$.isExist(trigger) && (trigger = true);\n                var formId = _id;\n                var attr = \"\";\n                var editTag = false;\n                if (data) {\n                    for (var index in data) {\n                        var it = data[index];\n                        if (index == formId) {\n                            this.deserialize(it);\n                        }\n                        ;\n                        attr = \"[name=\" + index + \"]\";\n                        var input = jForm.find(attr);\n                        if (input.length > 0) {\n                            if (input.hasClass(\"orm-input-grid\")) { //处理列表\n                            }\n                            else if (input.hasClass(\"orm-input-tree\")) { // 处理树\n                            }\n                            else if (input.hasClass(\"rxm-select-tree-input\")) { //处理下拉树\n                                //设置初始化值，在初始化下拉选择树时用到该自定义属性 add by wanghuan 2019-01-17\n                                input.parents('.rxm-select-tree').attr('rxmvalue', it);\n                                //编辑态标志\n                                editTag = true;\n                                this.inputValue(index, it, trigger);\n                            }\n                            else if (input.hasClass(\"rxm-file-uploader\")) {\n                                //初始化上传队列\n                                it.opType = '';\n                                // \"+index+\".addFile(new fileInfo(it));\n                                fileUpView[index].addFile(new fileInfo(it));\n                            }\n                            else {\n                                this.inputValue(index, it, trigger);\n                            }\n                        }\n                        else { }\n                    }\n                }\n                _initSelectTree.call(this, editTag);\n                //$.isExist(trigger)&&!trigger&&_serialize(formVal)\n            };\n            /**获取加载时数据初始化信息，可以重写改变初始化信息*/\n            RxmLayoutFormImpl.prototype.getInitForm = function () {\n                ///<returns type=\"vo.orm.clsLayoutBtstrpForm.cfgformInit\" ></returns>\n                var wArg = appTool.getAppArgs();\n                var r;\n                !!wArg && (r = wArg.form);\n                if ($.isArray(r)) {\n                    for (var i = 0; i < r.length; i++) {\n                        if (r[i].id = _id)\n                            return r[i];\n                    }\n                }\n                return r;\n            };\n            /**初始化校验参数 */\n            RxmLayoutFormImpl.prototype.initValidate = function (validateArgs) {\n                validateTag = false;\n                var v = {\n                    Onubmit: false\n                };\n                if (typeof validateArgs != \"undefined\") {\n                    v = validateArgs;\n                    v.Onubmit = false;\n                    v.onfocusout = false;\n                    v.onkeyup = false;\n                    v.onclick = false;\n                    v = $.extend(true, {}, v, validateArgs, _getValidateRule());\n                    if (typeof v.errorPlacement === \"undefined\") {\n                        v.errorPlacement = $.proxy(onValidatePlacement, this);\n                    }\n                    if (!v.highlight) {\n                        v.highlight = function (target) {\n                            var fg = $(target).closest('.form-label-input');\n                            fg = fg.length == 0 ? $(target).closest('.form-group') : fg;\n                            //直接是输入框时，修改输入框的边框样式，比如table中的输入框验证\n                            fg.length > 0 ? fg.addClass('has-error') : $(target).addClass('cs-error-border');\n                        };\n                    }\n                    if (!v.success) {\n                        v.success = function (message) {\n                            var fg = message.closest('.form-label-input');\n                            fg = fg.length == 0 ? message.closest('.form-group') : fg;\n                            fg.length > 0 ? fg.removeClass('has-error') : message.prev().removeClass('cs-error-border');\n                            message.remove();\n                        };\n                    }\n                    ;\n                }\n                else {\n                    v = $.extend(true, {}, v, _getValidateRule());\n                }\n                if (!!jvalidator) {\n                    if (!!v.rules) {\n                        jvalidator.settings.rules = v.rules;\n                    }\n                    if (!!v.messages) {\n                        jvalidator.settings.messages = v.messages;\n                    }\n                }\n                //获取自定义校验\n                if (!!_getValidateOption()) {\n                    var options = _getValidateOption();\n                    if (($('script[rxm_validate]').length > 0) && (!!rrr.rxm_validate)) {\n                        var rxmvRun = rrr.require('OrivRunMgr');\n                        rxmvRun.init(rrr.rxm_validate, function (data) {\n                            options = rxmvRun.RunValidate(_id, options);\n                            v = $.extend(true, {}, v, options);\n                            jvalidator = jForm.validate(v);\n                        });\n                    }\n                    else {\n                        v = $.extend(true, {}, v, options);\n                        jvalidator = jForm.validate(v);\n                    }\n                }\n                else {\n                    jvalidator = jForm.validate(v);\n                }\n            };\n            /**当前窗口表格数据删除通过表格id获取表格对象*/\n            RxmLayoutFormImpl.prototype.gridDelete = function (gridId) {\n                var gridObj = RxmGrid({ \"id\": gridId });\n                /**获取表格当前选中的数据*/\n                //original表格获取获取row数据\n                // var rows = gridObj.getSelectedRow();\n                // if (!rows || rows.length < 1) {\n                //     alert(\"请选择一行数据\");\n                //     return;\n                // }\n                //originalM表格获取获取row数据\n                var rows = gridObj.getSelectedData();\n                var len = 0;\n                for (var key in rows)\n                    len++;\n                if (!rows || len < 1) {\n                    alert(\"请选择一行数据\");\n                    return false;\n                }\n                /**表格全部数据*/\n                var all = gridObj.getAllData();\n                /**gt数据处理*/\n                var id = $(\"div[id='\" + gridId + \"']\").attr(\"rxmformid\");\n                !_gt[id] && (_gt[id] = {\n                    _key: \"\",\n                    value: []\n                });\n                var its = _gt[id];\n                /**表格json数组数据删除*/\n                $.each(rows, function (j, row) {\n                    for (var i = 0; i < all.length; i++) {\n                        if (JSON.stringify(all[i]) == JSON.stringify(row) && all[i]._op_type !== \"added\") {\n                            all.splice(i, 1);\n                            row._op_type = \"deleted\";\n                            its.value.push(row);\n                        }\n                        if (JSON.stringify(all[i]) == JSON.stringify(row) && all[i]._op_type === \"added\") {\n                            all.splice(i, 1);\n                            its.value.splice($.inArray(row, all), 1); //待确认\n                        }\n                    }\n                });\n                this.attrDirtied(true);\n                gridObj.reload({\n                    \"data\": all\n                });\n            };\n            RxmLayoutFormImpl.prototype.getAttrValue = function (name, attrName) {\n                /**将包含[[]]的属性转换为json*/\n                ///<param name=\"name\" value=\"\">以下三种形式均可：1.dom对象；2.需要选择的标签name；3.jquery对象</param>\n                ///<param name=\"attrName\" value=\"string\">标签属性</param>\n                var $selector;\n                var str;\n                if ($.isDom(name)) {\n                    $selector = $(name);\n                }\n                else if ($.isString(name)) {\n                    $selector = jForm.find(\"[name='\" + name + \"']\");\n                }\n                else if (!!name.jquery) {\n                    $selector = name;\n                }\n                ;\n                str = $selector.attr(attrName);\n                if (!!str) {\n                    //将字符串中所有所有单引号替换为双引号 不然JSON.parse报错\n                    str = _getAttrValue(str.replace(/\\'/g, '\"'));\n                    return JSON.parse(str);\n                }\n                else {\n                    return {};\n                }\n            };\n            RxmLayoutFormImpl.prototype.clear = function () {\n                _key = \"\";\n                formVal = {\n                    _op_type: \"\"\n                };\n                _gt = {};\n                this.attrDirtied(false);\n            };\n            return RxmLayoutFormImpl;\n        }());\n        var ret = thisObj(config, new RxmLayoutFormImpl());\n        var rrr = window;\n        rrr.require('RxmPageBase').bindPageReady({ callback: $.proxy(ret.init, ret), one: false });\n        forms[_id] = ret;\n        return ret;\n    };\n    return ClsFactory;\n});\n","define(\"RxmLRLayout\", [\"require\", \"exports\", \"RxmAppTool\"], function (require, exports, appTool) {\n    \"use strict\";\n    /**\n     * 引入类声明公共方法\n     * @type {rxm.AppTool}\n     * */\n    var thisObj = appTool.thisObj;\n    var clsFactory = function (cfg) {\n        //查找已有布局实例，有则直接返回\n        if (thisObj(cfg.id)) {\n            return thisObj(cfg.id);\n        }\n        var _id = cfg.id;\n        var $panel = $(\"#\" + cfg.id);\n        var $hideMenu = $(\"[pid=\" + cfg.id + \"]\");\n        //定栏div宽度\n        var dingWidth = $hideMenu.width();\n        //当前滑动panel对象\n        var $curSwipeObj;\n        //滑动距离界定\n        var viewWidth = 75;\n        //默认滑动方向 左侧为定栏 右滑\n        var curSwipeStr = 'Right';\n        //反方向\n        var curSwipeFanStr = 'Left';\n        //乘数 控制动画方向 默认为正\n        var num = 1;\n        if ($panel.hasClass(\"rxm-content-right\")) {\n            curSwipeStr = \"Left\";\n            curSwipeFanStr = 'Right';\n            num = -1;\n        }\n        var RxmLRLayout = /** @class */ (function () {\n            function RxmLRLayout() {\n                /**\n                 * 设定滑动panel过渡效果参数 初始化\n                 * @param {Object} $obj - 滑动布局对象\n                 */\n                this._setTransition = function ($obj) {\n                    $obj.css({\n                        '-webkit-transition-property': '-webkit-transform',\n                        '-webkit-transition-duration': '200ms',\n                        '-webkit-transition-timing-function': 'ease-out' //速度效果的速度曲线（过渡效果）\n                    });\n                };\n                /**\n                 * 设定完成过渡效果需要多少秒或毫秒\n                 * @param {Object} $obj - 滑动布局jquery对象\n                 * @param {String} time - 过渡时间\n                 */\n                this._setTraDur = function ($obj, time) {\n                    $obj.css('-webkit-transition-duration', time);\n                };\n                /**\n                 * 显示隐藏菜单动画样式设置\n                 */\n                this._initViewPosition = function () {\n                    console.info(num * dingWidth);\n                    $panel.css('-webkit-transform', 'translate3d(' + num * dingWidth + 'px, 0px, 0px)');\n                    $hideMenu.css('-webkit-transform', 'translate3d(0px, 0px, 0px)');\n                };\n            }\n            /**\n             * 隐藏菜单动画样式设置\n             */\n            RxmLRLayout.prototype._initHidePosition = function () {\n                $panel.css('-webkit-transform', 'translate3d(0px, 0px, 0px)');\n                $hideMenu.css('-webkit-transform', 'translate3d(' + (-1 * num * dingWidth) + 'px, 0px, 0px)');\n            };\n            /**\n             * panel区域滑动事件绑定函数\n             */\n            RxmLRLayout.prototype._bindPanelSwipe = function () {\n                var the = this;\n                //panel区域绑定touchStart触屏开始事件\n                $panel.touchStart(function (e, data) {\n                    // 记录当前布局滑动对象区域\n                    $curSwipeObj = $(this);\n                    // 当前滑动数据行设定过渡效果设置 初始化 \n                    the._setTransition($curSwipeObj);\n                });\n                //panel区域绑定touchMove触屏移动事件\n                $panel.touchMove(function (e, data) {\n                    //滑动距离  当前滑动横向坐标减去起始横向坐标\n                    var moveDis = data.position.delta[0].moved;\n                    //滑动方向\n                    var curSwipe = data.curSwipe;\n                    console.info(\"curSwipe==============\" + curSwipe);\n                    //右滑，滑动距离在定栏宽度值之内，定栏随着右滑距离逐渐显示\n                    if (curSwipe == curSwipeStr && $curSwipeObj.data(\"position\") != \"view\") {\n                        console.info(\"moveDis=======\" + moveDis);\n                        //大于定栏宽度值后定栏与panel区域不再滑动\n                        if (moveDis >= dingWidth) {\n                            console.info(\"hahh=======\");\n                            //完全显示菜单\n                            the._initViewPosition();\n                        }\n                        else { //移动距离小于隐藏菜单的宽度 隐藏菜单一直显示\n                            $curSwipeObj.css('-webkit-transform', 'translate3d(' + num * moveDis + 'px, 0px, 0px)');\n                            //隐藏菜单 动画移动距离\n                            var hide = dingWidth - moveDis;\n                            $hideMenu.css('display', 'block');\n                            $hideMenu.css('-webkit-transform', 'translate3d(' + -1 * num * hide + 'px, 0px, 0px)');\n                        }\n                    }\n                    //右滑完全显示按钮区域，标识隐藏菜单位置为显示\n                    if (moveDis >= dingWidth && curSwipe == curSwipeStr) {\n                        $curSwipeObj.data(\"position\", \"view\");\n                    }\n                    //左滑,隐藏菜单逐渐隐藏\n                    if (curSwipe == curSwipeFanStr && $curSwipeObj.data(\"position\") == \"view\") {\n                        if (moveDis >= dingWidth) {\n                            //完全隐藏菜单\n                            the._initHidePosition();\n                            //解决隐藏菜单 进行隐藏时候 背景变为白板的问题\n                            setTimeout(function () {\n                                $hideMenu.css('display', 'none');\n                                the._setTraDur($hideMenu, '');\n                            }, 300);\n                        }\n                        else {\n                            var chazhi = dingWidth - moveDis;\n                            $curSwipeObj.css('-webkit-transform', 'translate3d(' + num * chazhi + 'px, 0px, 0px)');\n                            //隐藏菜单 动画移动距离\n                            var hide = dingWidth - moveDis;\n                            $hideMenu.css('-webkit-transform', 'translate3d(' + -1 * num * moveDis + 'px, 0px, 0px)');\n                        }\n                    }\n                });\n                //panel区域绑定touchEnd触屏结束事件\n                $panel.touchEnd(function (e, data) {\n                    //滑动方向\n                    var curSwipe = data.curSwipe;\n                    if (curSwipe != \"\") {\n                        //移动距离  结束时横向坐标减去起始横向坐标\n                        var moveDis = data.position.delta[0].moved;\n                        if (curSwipe == curSwipeStr) {\n                            //当滑动结束时，右滑距离大于设置距离数值，直接显示隐藏区域\n                            if (moveDis > viewWidth && curSwipe == curSwipeStr && $curSwipeObj.data(\"position\") !== 'view') {\n                                //完全显示隐藏的菜单 设置动画效果\n                                the._setTraDur($hideMenu, '360ms');\n                                the._setTraDur($curSwipeObj, '500ms');\n                                the._initViewPosition();\n                                //设置状态 显示状态 \n                                $curSwipeObj.data(\"position\", \"view\");\n                                $curSwipeObj.tap(function () {\n                                    if ($curSwipeObj.data(\"position\") == 'view') {\n                                        //解决隐藏菜单 进行隐藏时候 背景变为白板的问题\n                                        the._setTraDur($hideMenu, '400ms');\n                                        the._setTraDur($curSwipeObj, '300ms');\n                                        //完全显示隐藏菜单\n                                        the._initHidePosition();\n                                        //将隐藏菜单的-webkit-transition-duration属性还原 不然再次右滑两个div会显示白色间隙\n                                        setTimeout(function () {\n                                            the._setTraDur($hideMenu, '');\n                                            the._setTraDur($curSwipeObj, '200ms');\n                                        }, 400);\n                                        //\n                                        $curSwipeObj.removeData(\"position\");\n                                        //解除绑定\n                                        $curSwipeObj.off('tap');\n                                    }\n                                });\n                            }\n                            else if (moveDis < viewWidth && curSwipe == curSwipeStr && $curSwipeObj.data(\"position\") !== \"view\") {\n                                the._setTraDur($hideMenu, '250ms');\n                                the._setTraDur($curSwipeObj, '200ms');\n                                //完全隐藏菜单\n                                the._initHidePosition();\n                                //解决隐藏菜单 进行隐藏时候 背景变为白板的问题\n                                setTimeout(function () {\n                                    $hideMenu.css('display', 'none');\n                                    the._setTraDur($hideMenu, '');\n                                }, 300);\n                            }\n                        }\n                        else if (curSwipe == curSwipeFanStr) {\n                            if (moveDis >= viewWidth) {\n                                //完全隐藏菜单\n                                the._initHidePosition();\n                                setTimeout(function () {\n                                    $hideMenu.css('display', 'none');\n                                    the._setTraDur($hideMenu, '');\n                                }, 400);\n                                $curSwipeObj.removeData(\"position\");\n                                //解除绑定\n                                $curSwipeObj.off('tap');\n                            }\n                            else if (moveDis < viewWidth) {\n                                the._setTraDur($hideMenu, '200ms');\n                                the._setTraDur($curSwipeObj, '250ms');\n                                //完全显示菜单\n                                the._initViewPosition();\n                                setTimeout(function () {\n                                    the._setTraDur($hideMenu, '360ms');\n                                    the._setTraDur($curSwipeObj, '500ms');\n                                }, 300);\n                            }\n                        }\n                    }\n                });\n            };\n            /**\n             * 隐藏菜单区域滑动事件绑定函数\n             */\n            RxmLRLayout.prototype._bindHideMenuSwipe = function () {\n                var the = this;\n                //定栏区域绑定touchStart触屏开始事件\n                $hideMenu.touchStart(function (e, data) {\n                    // 记录当前触屏的行对象 \n                    $curSwipeObj = $(this);\n                    // 当前滑动数据行设定过渡效果设置\n                    the._setTransition($curSwipeObj);\n                    the._setTransition($panel);\n                });\n                //定栏区域绑定touchMove触屏移动事件\n                $hideMenu.touchMove(function (e, data) {\n                    //滑动距离  当前滑动横向坐标减去起始横向坐标\n                    var moveDis = data.position.delta[0].moved;\n                    //当前手指滑动方向\n                    var curSwipe = data.curSwipe;\n                    //左滑，距离在75之内，隐藏菜单区域随着右滑距离逐渐显示，大于75后隐藏菜单区域不变\n                    var chazhi = dingWidth - moveDis;\n                    if (curSwipe == curSwipeFanStr) {\n                        if (moveDis <= dingWidth) {\n                            $panel.css('-webkit-transform', 'translate3d(' + 1 * num * chazhi + 'px, 0px, 0px)');\n                            $curSwipeObj.css('-webkit-transform', 'translate3d(' + -1 * num * moveDis + 'px, 0px, 0px)');\n                            if (moveDis == dingWidth) {\n                                $panel.removeData(\"position\");\n                            }\n                        }\n                        else {\n                            $panel.removeData(\"position\");\n                        }\n                    }\n                    else if (curSwipe == curSwipeStr) {\n                        if (moveDis <= dingWidth) {\n                        }\n                        else {\n                        }\n                    }\n                });\n                //定栏区域绑定touchEnd触屏结束事件\n                $hideMenu.touchEnd(function (e, data) {\n                    //滑动方向\n                    var curSwipe = data.curSwipe;\n                    if (curSwipe != \"\") {\n                        //移动距离  结束时横向坐标减去起始横向坐标\n                        var moveDis = data.position.delta[0].moved;\n                        console.info('touchEnd===moveDis===' + moveDis);\n                        //当滑动结束时，左滑距离大于设置距离数值，显示按钮区域\n                        if (moveDis > viewWidth && curSwipe == curSwipeFanStr) {\n                            //大于设定的滑动距离 直接隐藏菜单\n                            the._initHidePosition();\n                            setTimeout(function () {\n                                $curSwipeObj.css('display', 'none');\n                            }, 300);\n                            $panel.off('tap');\n                            $panel.removeData(\"position\");\n                        }\n                        else if (moveDis < viewWidth && curSwipe == curSwipeFanStr) {\n                            //显示隐藏菜单 回到显示位置   \n                            //完全显示菜单\n                            the._initViewPosition();\n                        }\n                    }\n                });\n            };\n            /**\n             * 左右栏布局初始化函数 绑定手势事件\n             */\n            RxmLRLayout.prototype._init = function () {\n                //移动设备中绑定滑动事件\n                if (appTool.isMobileOpen()) {\n                    this._bindPanelSwipe();\n                    this._bindHideMenuSwipe();\n                }\n            };\n            return RxmLRLayout;\n        }());\n        var ret = thisObj(_id, new RxmLRLayout());\n        var rqr = window;\n        rqr.require('RxmPageBase').bindPageReady({ callback: $.proxy(ret._init, ret), one: true });\n        return ret;\n    };\n    return clsFactory;\n});\n","define(\"RxmSlidePanel\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var clsdef = {\n        rxmPath: 'RxmSlidePanel',\n        clsName: 'rxm-layout-slide-panel',\n        juryFn: 'rxmSlidePanel'\n    };\n    var clsDefault = {\n        pageChanged: \"pageChanged\",\n        groupChanged: \"groupChanged\",\n        tapIconArea: \"tapIconArea\",\n        tapPageControl: \"tapPageControl\"\n    };\n    var _onSlidePanelScroll = function () {\n        var jId = $(this);\n        var data = jId.data('rxm_slide_panel_scroll') || {};\n        data.lastLeft = data.curLeft;\n        data.curLeft = jId.scrollLeft();\n        jId.data('rxm_slide_panel_scroll', data);\n        console.info(data);\n    };\n    /**\n     *\n     * @param {TouchEvent} e\n     * @param {*} data\n     */\n    var _onTouchStart = function (e, data) {\n        var jId = $(this);\n        if (jId.length == 0)\n            return;\n        jId.scroll(_onSlidePanelScroll);\n        jId.stop(true, false);\n        jId.css({\n            '-webkit-transition-duration': '0ms'\n        });\n        var beginleft = jId.scrollLeft();\n        jId.data('rxm_slide_panel_scroll', {\n            beginLeft: beginleft,\n            curLeft: beginleft,\n            scrollWidth: this.scrollWidth,\n            slidePanelWidth: jId.outerWidth(),\n            slideItemWidth: jId.find('.rxm-slide-item').outerWidth()\n        });\n        //把左右没有显示的显示出来\n        /**@type {rxm.jquery} */\n        var jqItem = $(e.target).closest('.rxm-slide-item');\n        jqItem.prev().css('visibility', \"visible\");\n        jqItem.next().css('visibility', \"visible\");\n    };\n    var _onTouchMove = function (e, data) {\n    };\n    /**\n     *\n     * @param {TouchEvent} e\n     * @param {*} data\n     */\n    var _onTouchEnd = function (e, data) {\n        var jId = $(this);\n        if (jId.length == 0)\n            return;\n        jId.off('scroll', _onSlidePanelScroll);\n        var data = jId.data('rxm_slide_panel_scroll') || {};\n        data.lastLeft = data.curLeft;\n        data.curLeft = jId.scrollLeft();\n        jId.data('rxm_slide_panel_scroll', data);\n    };\n    /**\n     *\n     * @param {rxm.slidePanel.config} config\n     */\n    var clsFactory = function (config) {\n        /**控件id\n         * @type  {String}\n        */\n        var _id;\n        /** #_id\n         * @type {String}\n         */\n        var _jqid;\n        /**\n         * @constructor\n         * @class\n         * @param {rxm.router} config\n         * @param {rxm.page.loadargs2} args\n         * @version  1.0.0\n         */\n        var RxmSlidePanel = /** @class */ (function () {\n            function RxmSlidePanel() {\n            }\n            return RxmSlidePanel;\n        }());\n        return new RxmSlidePanel();\n    };\n    $(document.body).touchStart('.' + clsdef.clsName, _onTouchStart);\n    $(document.body).touchEnd('.' + clsdef.clsName, _onTouchEnd);\n    return clsFactory;\n});\n","define(\"RxmPopMenu\", [\"require\", \"exports\", \"RxmAppTool\"], function (require, exports, appTool) {\n    \"use strict\";\n    /**\n     * 弹出菜单定义，创建王勇 用于 buttonmenu 和 contextmenu的创建\n     * 弹出菜单 在界面上永远是全局唯一的\n     */\n    var clsdef = {\n        rxmPath: 'RxmPopMenu',\n        clsName: 'rxm-cmd-dropdown-btnbar',\n        juryFn: 'rxmPopMenu'\n    };\n    /**设置默认值 */\n    var clsDefault = {\n        //背景板的设置\n        backPanelColor: ''\n    };\n    /* 菜单枚举控件事件枚举对象 */\n    var msgEnum = {\n        menuShowing: 'showMenuing',\n        menuShown: 'menuShown',\n        menuHiding: 'menuHiding',\n        menuHidden: 'menuHidden'\n    };\n    var tapAroundDisable = {\n        no: 'no',\n        round: 'round',\n        upDown: 'updown',\n        leftRight: 'leftRight'\n    };\n    var _bindTouchEnd = function (fun, bind) {\n        var msType = appTool.isAppOpen() ? 'tap' : 'click';\n        bind && $('body').on(msType, fun);\n        !bind && $('body').off(msType, fun);\n    };\n    /**\n     * @param {*} args\n     * @constructor\n     * @extends {rxm.menu}\n     */\n    function juryExt(args) {\n        var rr = window;\n        function juryOne(args) {\n            if (!this.hasClass(args.clsName))\n                return;\n            var id = this.attr('id');\n            if (!id) {\n                id = args.id || args.templateId || appTool.uuid();\n                this.attr('id', id);\n            }\n            args.id = id;\n            var r = rr.require(args.rxmPath)(args);\n            return r;\n        }\n        if (this instanceof jQuery) {\n            var r = appTool;\n            r = juryOne.call(this, clsdef);\n            return r;\n        }\n    }\n    var thisObj = appTool.thisObj;\n    var ClsFactory = function (cfg) {\n        var _id = '';\n        cfg.id && (_id = cfg.id);\n        if (thisObj(cfg.id)) {\n            return thisObj(cfg.id);\n        }\n        var _data = cfg.data;\n        /**@type  {String} */\n        var jqId = '#' + _id;\n        var _parent;\n        var _popmenuArgs;\n        if (cfg.positionIn == 'touchPosition')\n            _parent = $(jqId).parent();\n        /**\n         * @param {MouseEvent} ee\n         * @param {rxm.jqueryobj}  $menu\n         */\n        var getPosition = function () {\n            /**@type {MouseEvent}*/\n            var e = event;\n            var $menu = $('#' + _id);\n            //!(e = ee) && (e = event)\n            var mouseX = e.clientX;\n            var mouseY = e.clientY;\n            var boundsX = $(window).width();\n            var boundsY = $(window).height();\n            var menuWidth = $menu.outerWidth();\n            var menuHeight = $menu.outerHeight();\n            var tp = { 'position': \"absolute\" };\n            var Y, X, parentOffset;\n            if (mouseY + menuHeight > boundsY) {\n                Y = { 'top': mouseY }; // - menuHeight + $(window).scrollTop() }\n            }\n            else {\n                Y = { 'top': mouseY }; //+ $(window).scrollTop() }\n            }\n            if ((mouseX + menuWidth > boundsX) && ((mouseX - menuWidth) > 0)) {\n                X = { 'left': mouseX }; // - menuWidth + $(window).scrollLeft() }\n            }\n            else {\n                X = { 'left': mouseX }; // + $(window).scrollLeft() }\n            }\n            parentOffset = $menu.offsetParent().offset();\n            X.left = mouseX; // X.left - parentOffset.left\n            Y.top = mouseY; //Y.top - parentOffset.top\n            return $.extend(tp, Y, X);\n        };\n        /**\n         * 点击在区域slient panel 之外的区域\n         * @param {MouseEvent} e\n        */\n        var _onTapInMenu = function (e, data) {\n            var oriEvent;\n            _data && (oriEvent = e.originalEvent || e) && (oriEvent.rxmCmdData = _data);\n            var close = true;\n            var the = this;\n            var mode = the.attrTapAroundDisable();\n            switch (mode) {\n                case tapAroundDisable.no:\n                    {\n                        close = true;\n                    }\n                    ;\n                    break;\n                case tapAroundDisable.round:\n                    {\n                        close = true;\n                    }\n                    ;\n                    break;\n                case tapAroundDisable.upDown:\n                    {\n                        //点在 菜单展开方向\n                    }\n                    break;\n                case tapAroundDisable.leftRight: {\n                }\n            }\n            //let ths:any=this\n            close && this.close && this.close();\n        };\n        var listenClose = function (e) {\n            if (!(e.which == 1 && e.target && ($(e.target).parents('[rxmcmdid]').length > 0 || $(e.target).attr('rxmcmdid')))) {\n                var ele;\n                //获取cmd的消息名称\n                e.target && !!$(e.target).attr('rxmcmdid') && (ele = $(e.target).attr('rxmcmdid'));\n                e.target && !$(e.target).attr('rxmcmdid') && (ele = $(e.target).parents('[rxmcmdid]').attr('rxmcmdid'));\n                //触发消息\n                ele && $(ele).rxmTriggerCmd({ data: _data });\n                var tmp = ClsFactory({ id: _id });\n                tmp.close && tmp.close();\n            }\n        };\n        var PopMenuImpl = /** @class */ (function () {\n            function PopMenuImpl() {\n            }\n            PopMenuImpl.prototype.popMenu = function (args) {\n                _popmenuArgs = args;\n                //if (this._jurys) return this._jurys(args)\n                var curMenu = $(jqId);\n                if (args) {\n                    if (args.positionIn == 'touchPosition') {\n                        _parent = $(jqId).parent();\n                        // curMenu.remove()\n                        curMenu.appendTo(document.body);\n                        curMenu.css(getPosition());\n                    }\n                    args.data && (_data = $.extend(true, {}, cfg.data, args.data));\n                }\n                var mode;\n                mode = args && (mode = args.tapAroundDisable);\n                mode = this.attrTapAroundDisable(mode);\n                if (args.hiddenIds) {\n                    var tmpslr = args.hiddenIds.join(',');\n                    $(tmpslr).addClass('rxm-display-none');\n                }\n                curMenu.find('');\n                if (mode == tapAroundDisable.no) {\n                    curMenu.removeClass('rxm-display-none');\n                }\n                else {\n                }\n                _bindTouchEnd($.proxy(_onTapInMenu, this), true);\n                // this.body = document.body\n                document.body.addEventListener('mousedown', listenClose, true);\n                document.body.addEventListener('mousewheel', listenClose, true);\n            };\n            /**\n             * 关闭菜单,将菜单放置在template div内，对象并不随之消失,调用slientpanel 的销毁，\n             * @param {} args\n             */\n            PopMenuImpl.prototype.close = function () {\n                _bindTouchEnd(_onTapInMenu, false);\n                document.body.removeEventListener('mousedown', listenClose, true);\n                document.body.removeEventListener('mousewheel', listenClose, true);\n                var curMenu = $(jqId);\n                var mode = this.attrTapAroundDisable();\n                if (mode == tapAroundDisable.no) {\n                    curMenu.addClass('rxm-display-none');\n                }\n                var args = _popmenuArgs;\n                if (args && args.hiddenIds) {\n                    var tmpslr = args.hiddenIds.join(',');\n                    $(tmpslr).removeClass('rxm-display-none');\n                }\n                if (_parent) {\n                    curMenu.remove();\n                    curMenu.appendTo(_parent);\n                }\n                else {\n                }\n            };\n            PopMenuImpl.prototype.attrTapAroundDisable = function (mode) {\n                var value = $(jqId).attr('rxmtaparonuddisable');\n                if (typeof mode !== \"undefined\") {\n                    value != mode && (value = mode) && $(jqId).attr('rxmtaparonuddisable', mode);\n                }\n                !value && (value = tapAroundDisable.no);\n                return value;\n            };\n            return PopMenuImpl;\n        }());\n        /**\n         * 监听弹出子菜单，子菜单是点击 '.rxm-slient-panel'类的结果\n         * 2018-06-06\n         * @param {MouseEvent} e\n         * @param {String} data\n         */\n        var _onChildrenMenu = function (e, data) {\n            //弹出子菜单的几种情况\n            //1. btn bar 中的button弹出 以下拉的形态 呈现 \n            //2. 菜单中的button 孩子菜单，应该以 左右侧的形态弹出\n            // 要判断 是不是存在现有菜单\n            if (!data)\n                return;\n            /**@type  {String} */\n            var curBtn;\n            if ((curBtn = $(e.target).css('display')) && curBtn.indexOf('inline') != -1) {\n                //1、down 或up  button 是按行排列的 \n                curBtn = data;\n                var pop = $('#' + curBtn).rxmPopMenu();\n                pop.popMenu({});\n            }\n            else {\n                // left or  right\n            }\n        };\n        return new PopMenuImpl();\n    };\n    if (!$.fn.rxmPopMenu) {\n        $.fn.rxmPopMenu = juryExt;\n        //绑定子菜单函数的命令\n    }\n    return ClsFactory;\n});\n","define(\"RxmGrid\", [\"require\", \"exports\", \"RxmGridDocument\", \"RxmArtTemplate\", \"text!RxmTemplateDir/rxmGridRowTmpl.html\", \"RxmAppTool\", \"RxmUtil\"], function (require, exports, doc, artTemplate, rowTmpl, appTool, Util) {\n    \"use strict\";\n    //苹果设备设置避免回弹效果\n    if (appTool.isIOS()) {\n        //调整后调用的接口\n        rxm_page.forbidBounce(0, 1);\n    }\n    /**\n     * 引入类声明公共方法\n     */\n    var thisObj = appTool.thisObj;\n    var ClsFactory = function (cfg) {\n        //查找已有grid实例，有则直接返回\n        if (thisObj(cfg.id)) {\n            return thisObj(cfg.id);\n        }\n        //表格对象id\n        var _id = cfg.id;\n        //全部的私有变量 18-05-22\n        var _touchRowInfo = {\n            totalIndex: 1,\n            //x坐标\n            x: 0,\n            //y坐标\n            y: 0,\n            left: 0,\n            top: 0,\n            scrollPos: 0\n        };\n        var _loadingImg = getServer() + \"/www/rxm/utils/img/Loading.gif\";\n        var _upArrowImg = getServer() + \"/www/rxm/utils/img/uparrow.png\";\n        var _downArrowImg = getServer() + \"/www/rxm/utils/img/downarrow.png\";\n        //到顶或者到底后 滑动位置坐标值startYMove（默认为0）\n        var _startYMove = 0;\n        //包裹器高度 设置默认高度为设备屏幕可用高度\n        var _wrapHeight = document.body.scrollHeight.toString();\n        //全选状态标志  默认为true\n        var _allChecked = true;\n        //长按状态标志  默认为false\n        var _pressFlag = false;\n        var _footerOffset = 0;\n        //真分页时，后端返回数据类型结构为此结构即可\n        var _pageInfo = {\n            curPage: 1,\n            pageData: [],\n            dataCount: 0,\n            pageCount: 0 //总页数\n        };\n        //排序参数(必须保留,后台取数据必要字段)\n        // var  _sortParam = {\n        //     field: \"\",\n        //     order: \"\"\n        // };\n        //表格包裹器对象定义\n        var $gridWrap = $(\"#\" + _id);\n        if ($gridWrap.length == 0) {\n            console.error(\"id=\" + _id + \"表格不存在\");\n        }\n        //Document全局对象 new doc(_config, $gridWrap)\n        var _doc;\n        //标题栏 \n        var $titlebar = $(\"\");\n        //工具栏\n        var $toolbar = $(\"\");\n        //顶部刷新栏\n        var $topRefreshbar = $(\"\");\n        //底部刷新栏\n        var $bottomRefreshbar = $(\"\");\n        //搜索栏\n        var $searchbar = $(\"\");\n        //表格内容数据包裹器\n        var $gridContent = $(\"\");\n        //表格主体\n        var $tableBody = $(\"\");\n        //分页区域（桌面版）\n        var $pagination = $(\"\");\n        //表格tbody\n        var $tBody = $(\"\");\n        //表格是否reload加载\n        var _isRender = false;\n        /**滑动菜单全局变量定义*/\n        //当前左滑的对象\n        var slideCurSwipeTr;\n        //上一个左滑的对象\n        var slideLastSwipeTr;\n        var btnAreaWidth;\n        ///this.dataParNum = _config.layout.length;\n        var scrollDivWidth;\n        var dataDivWidth;\n        var _iconMargin;\n        //行数据中具有icon列\n        var _hasIcon = false;\n        //当前数据页缓存数组\n        var _viewData = [];\n        //是否为buffer grid\n        var _isBuffer;\n        //buffer grid reload函数 加载表格\n        var _bufferLoad = function (arg) {\n            _isBuffer = true;\n            var me = ClsFactory({ id: _id });\n            if (arg) {\n                _viewData = arg;\n                _config.data = arg;\n                _config.param.data = arg;\n                //_pageInfo对象添加数据  \n                _pageInfo.pageData = arg;\n                _pageInfo.dataCount = arg.length;\n            }\n            me.refresh();\n        };\n        //获取radio值函数\n        var getRadioValue = function (arg) {\n            var radioValue = false;\n            if (typeof arg == \"boolean\") {\n                radioValue = arg;\n            }\n            else if (typeof arg == \"string\") {\n                radioValue = (arg == \"true\");\n            }\n            return radioValue;\n        };\n        /**\n        * 获取html表格属性 重组config对象\n        * @param {String} wrapId  - 表格包裹器ID\n        * @returns {Object} gridCfg - config对象\n        */\n        var getHtmlAttr = function (wrapId) {\n            //表格config对象定义\n            var gridCfg = {};\n            //表格包裹器对象\n            var $gwAttr = $(\"#\" + wrapId);\n            //获取表格每列属性值与名称  \n            //可以设置  在移动端 桌面端显示哪些列  默认列可同时显示\n            var tabth = $(\"#\" + wrapId + \" .rxm-table-head th[rxmmdview],th[rxmmview]\").not(\"[rxmhidden]\");\n            //表格layout\n            var layout = [];\n            if (isDesktop(wrapId)) {\n                //桌面端 排除具有hidden属性的列\n                tabth = $(\"#\" + wrapId + \" .rxm-table-head th[rxmmdview],th[rxmdview]\").not(\"[rxmhidden]\");\n            }\n            for (var i = 0; i < tabth.length; i++) {\n                //layout属性设定\n                if (typeof ($(tabth[i]).attr(\"fieldvalue\")) != \"undefined\") {\n                    var lo = {};\n                    lo.name = $(tabth[i]).text().replace(/^\\s+|\\s+$/g, \"\");\n                    lo.field = $(tabth[i]).attr(\"fieldvalue\");\n                    if (typeof ($(tabth[i]).attr(\"rxmtap\")) != \"undefined\") {\n                        lo.rxmtap = true;\n                    }\n                    layout.push(lo);\n                }\n            }\n            //设置layout 数据列定义\n            gridCfg.layout = layout;\n            //判断列表是否显示索引号列 桌面端 默认显示序号\n            if ($(\"#\" + wrapId + \" .rxm-table-head\").find(\"th[class~='rxmindex']\").length == 0) {\n                gridCfg.index = false;\n            }\n            else {\n                gridCfg.index = true;\n            }\n            //判断列表是否显示多选框列 移动、桌面端 单选[radio]还是多选[checkbox],默认checkbox 默认不显示\n            if ($(\"#\" + wrapId).find(\"th[class~='rxmmulti']\").length !== 0) {\n                if ($(\"#\" + wrapId).find(\"th[class~='rxmmulti']\").find(\"input\").length == 0) {\n                    gridCfg.multi = false;\n                }\n                else {\n                    gridCfg.multi = true;\n                }\n            }\n            //移动端multi 不存在不显示 默认为多选框\n            if (!isDesktop(wrapId)) {\n                if (typeof gridCfg.multi == 'undefined') {\n                    gridCfg.multi = true;\n                }\n            }\n            //行数据是否省略多余字符 属性设置 true 省略多余字符,其他字符用三个点代替,false 换行显示所有内容,默认省略多余字符\n            if ($gwAttr.hasClass(\"rxm-s-grid-ellipsis\")) {\n                gridCfg.textEllipsis = true;\n            }\n            else {\n                gridCfg.textEllipsis = false;\n            }\n            // //表格主键字段\n            // if (typeof ($gwAttr.attr(\"fieldkey\")) != \"undefined\") {\n            //     gridCfg.fieldkey = $gwAttr.attr(\"fieldkey\");\n            // }\n            //modify 20181108 表格请求数据 ajax请求url dataurl改为rxmurl\n            if (typeof ($gwAttr.attr(\"rxmurl\")) != \"undefined\") {\n                var gridDataUrl = $gwAttr.attr(\"rxmurl\");\n                //rxmurl处理 判断地址首字符是否添加斜杠 \n                if (gridDataUrl.substring(0, 1) != \"/\") {\n                    gridDataUrl = \"/\" + gridDataUrl;\n                }\n                //数据服务添加getServer() 解决本地加载模式无法获取表格数据\n                gridCfg.data = {\n                    \"type\": \"URL\",\n                    \"value\": getServer() + gridDataUrl\n                };\n            }\n            //add 20190122 表格请求数据参数 ajax请求url的参数\n            if (typeof ($gwAttr.attr(\"rxmparam\")) != \"undefined\") {\n                var dataParam = $gwAttr.attr(\"rxmparam\");\n                //将字符串中所有所有单引号替换为双引号 不然JSON.parse报错\n                gridCfg.queryParam = JSON.parse(dataParam.replace(/\\'/g, '\"'));\n            }\n            //获取分页状态 分页 才获取页数\n            if (typeof ($gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmpaging\")) != \"undefined\" && $gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmpaging\") == \"true\") {\n                gridCfg.pagination = true;\n                if (isDesktop(wrapId)) {\n                    gridCfg.pageSize = $gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmpagesize\");\n                }\n                else {\n                    //每页数据显示条目数\n                    if (typeof ($gwAttr.attr(\"rxmpagesize\")) != \"undefined\") {\n                        gridCfg.pageSize = $gwAttr.attr(\"rxmpagesize\");\n                    }\n                    //表格下拉刷新数据提示语\n                    if (typeof ($gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmtoptipbegin\")) != \"undefined\") {\n                        gridCfg.refreshTip.topTipBegin = $gwAttr.attr(\"rxmtoptipbegin\");\n                    }\n                    //表格下拉松开刷新提示语\n                    if (typeof ($gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmtoptiprefresh\")) != \"undefined\") {\n                        gridCfg.refreshTip.topTipRefresh = $gwAttr.attr(\"rxmtoptiprefresh\");\n                    }\n                    //表格下拉加载中提示语 \n                    if (typeof ($gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmtoptiploading\")) != \"undefined\") {\n                        gridCfg.refreshTip.topTipLoading = $gwAttr.attr(\"rxmtoptiploading\");\n                    }\n                    //表格下拉刷新失败提示语\n                    if (typeof ($gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmtoptiperror\")) != \"undefined\") {\n                        gridCfg.refreshTip.topTipError = $gwAttr.attr(\"rxmtoptiperror\");\n                    }\n                    //表格上拉分页加载失败提示语\n                    if (typeof ($gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmbottomtiperror\")) != \"undefined\") {\n                        gridCfg.refreshTip.bottomTipError = $gwAttr.attr(\"rxmbottomtiperror\");\n                    }\n                    //上拉分页没有更多提示语\n                    if (typeof ($gwAttr.find(\".rxm-s-grid-pagination\").attr(\"rxmbottomtipend\")) != \"undefined\") {\n                        gridCfg.refreshTip.bottomTipEnd = $gwAttr.attr(\"rxmbottomtipend\");\n                    }\n                }\n            }\n            else {\n                gridCfg.pagination = false;\n            }\n            //最大缓存页数\n            if (typeof ($gwAttr.attr(\"rxmcachemaxlen\")) != \"undefined\") {\n                gridCfg.param.cacheMaxLen = $gwAttr.attr(\"rxmcachemaxlen\");\n            }\n            //最大显示页数\n            if (typeof ($gwAttr.attr(\"rxmviwemaxlen\")) != \"undefined\") {\n                gridCfg.param.viweMaxLen = $gwAttr.attr(\"rxmviwemaxlen\");\n            }\n            //表格暂无数据提示语\n            if (typeof ($gwAttr.attr(\"rxmnodatatip\")) != \"undefined\") {\n                gridCfg.refreshTip.nodataTip = $gwAttr.attr(\"rxmnodatatip\");\n            }\n            //数据行图标区域宽度\n            if (typeof ($gwAttr.attr(\"rxmrowiconwidth\")) != \"undefined\") {\n                gridCfg.trRowParam.iconWidth = $gwAttr.attr(\"rxmrowiconwidth\");\n            }\n            //数据行数据字段单个高度\n            if (typeof ($gwAttr.attr(\"rxmrowparheight\")) != \"undefined\") {\n                gridCfg.trRowParam.parHeight = $gwAttr.attr(\"rxmrowparheight\");\n            }\n            //数据行数据显示div距离上下边距\n            if (typeof ($gwAttr.attr(\"rxmrowdatamargin\")) != \"undefined\") {\n                gridCfg.trRowParam.dataMargin = $gwAttr.attr(\"rxmrowdatamargin\");\n            }\n            //数据行距离屏幕左右边距\n            if (typeof ($gwAttr.attr(\"rxmrowtrmargin\")) != \"undefined\") {\n                gridCfg.trRowParam.trMargin = $gwAttr.attr(\"rxmrowtrmargin\");\n            }\n            //左滑菜单每个选项默认宽度\n            if (typeof ($gwAttr.attr(\"rxmleftbtnwidth\")) != \"undefined\") {\n                gridCfg.leftSlideParam.btnWidth = $gwAttr.attr(\"rxmleftbtnwidth\");\n            }\n            //左滑出现菜单区域的最小距离值，小于此值则隐藏 \n            if (typeof ($gwAttr.attr(\"rxmviwemaxlen\")) != \"undefined\") {\n                gridCfg.leftSlideParam.viewWidth = $gwAttr.attr(\"rxmviwemaxlen\");\n            }\n            //左滑菜单滑动隐藏时间设定 \n            if (typeof ($gwAttr.attr(\"rxmleftaduration\")) != \"undefined\") {\n                gridCfg.leftSlideParam.traDuration = $gwAttr.attr(\"rxmleftaduration\");\n            }\n            return gridCfg;\n        };\n        /**\n      * 判断是否为桌面版\n      * @param {String} wrapId - 表格包裹器ID\n      * @returns {Boolean} - 桌面版状态值\n      */\n        var isDesktop = function (wrapId) {\n            var $gw = $(\"#\" + wrapId);\n            if ($gw.is(\".rxm-grid-desktop\")) {\n                return true;\n            }\n            else if ($gw.is(\".rxm-grid-mobile\")) {\n                return false;\n            }\n            else if ($gw.is(\".rxm-grid-mobile-desktop\")) {\n                //判断body中是否存在rxm-desktop\n                if ($(document.body).is(\".rxm-desktop\")) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n            return true;\n        };\n        var RxmGridMsg = {\n            msgEnum: {\n                swipeInTopEndAfter: \"swipeInTopEndAfter\",\n                swipeInBottomAfter: \"swipeInBottomAfter\",\n                loadSucsess: \"loadSucsess\",\n                loadComplete: \"loadComplete\",\n                appendRow: \"append\",\n                insertRow: \"insert\",\n                deleteRow: \"delete\",\n                updateRow: \"update\",\n                ormRereshGridView: \"ormRereshGridView\",\n                swipeInTop: \"swipeInTop\",\n                swipeInBottom: \"swipeInBottom\",\n                swipeInTopBegin: \"swipeInTopBegin\",\n                swipeInBottomBegin: \"swipeInBottomBegin\",\n                swipeInTopEnd: \"swipeInTopEnd\",\n                swipeInBottomEnd: \"swipeInBottomEnd\",\n                tapLineElement: \"tapLineElement\",\n                pressLineElement: \"pressLineElement\",\n                slideInLine: \"slideInLine\"\n            }\n        };\n        var _calTableBodyHeight = function () {\n            //计算table-body坐标值\n            var tBodyHeight = $gridWrap.find(\".rxm-table-body\")[0].getBoundingClientRect();\n            var $wParent = $gridWrap.parent();\n            if ($wParent.hasClass(\"rxm-content-panel\") || $wParent.hasClass(\"rxm-left-panel\") || $wParent.hasClass(\"rxm-top-panel\")) {\n                if (_config.pagination) {\n                    tBodyHeight = $gridWrap.height() - tBodyHeight.top;\n                }\n                else {\n                    tBodyHeight = \"auto\";\n                }\n            }\n            else {\n                if (_config.pagination) {\n                    //计算table-body高度 总高度减去div上沿高度\n                    tBodyHeight = $('html').height() - tBodyHeight.top - _footerOffset;\n                }\n                else {\n                    tBodyHeight = \"auto\";\n                }\n            }\n            return tBodyHeight;\n        };\n        /**\n      * 重新设置tbody高度\n      */\n        var _resize = function (action, height) {\n            var _tbodyHeight = _calTableBodyHeight();\n            if (action == \"add\") {\n                _tbodyHeight = _tbodyHeight + height;\n            }\n            else {\n                _tbodyHeight = _tbodyHeight - height;\n            }\n            $tableBody.css(\"height\", _tbodyHeight + \"px\");\n        };\n        var _config = {\n            //gridWrap 唯一id\n            id: appTool.unid() + \"\",\n            //是否分页 默认分页\n            pagination: true,\n            //每页数据条目数  默认30\n            pageSize: 30,\n            //数据选中 单选[radio]还是多选[checkbox],默认不显示\n            //multi: true,\n            //数据是否换行，还是隐藏多余字符(true 省略多余字符,其他字符用三个点代替  false 换行显示所有内容 ) 默认省略多余字符\n            textEllipsis: true,\n            //兼容使用原始ajax的情况,0.9.8版本新增     改变返回数据returnData的key值\n            key: {\n                \"allDataCount\": \"dataCount\",\n                \"curPageData\": \"pageData\"\n            },\n            //查询参数\n            queryParam: {},\n            //行（列）头信息\n            layout: [],\n            //行点击事件\n            rowevent: [],\n            slidemenu: false,\n            height: 0,\n            data: {\n                type: \"\",\n                value: \"\",\n                //-1 上一页  -2 下一页  0 config当前页进行刷新，>0 从pageSize页开始取数据，每次只是取1页\n                pageSize: 1,\n                loadComplete: \"\"\n            },\n            //缓存数据参数\n            param: {\n                //单位为页\n                data: [],\n                //缓存首页面\n                cacheBegin: 1,\n                //最大缓存页数\n                cacheMaxLen: 30,\n                //显示首页面 从0 开始\n                viewBegin: 0,\n                //最大显示页数\n                viweMaxLen: 10\n            },\n            //上拉、下拉刷新提示语参数\n            refreshTip: {\n                topTipBegin: \"下拉刷新数据...\",\n                topTipRefresh: \"松开即可刷新...\",\n                topTipLoading: \"加载中...\",\n                topTipSuccess: \"数据刷新成功\",\n                topTipError: \"数据刷新失败\",\n                bottomTipLoading: \"加载中...\",\n                bottomTipError: \"数据加载失败\",\n                bottomTipEnd: \"没有更多了\",\n                nodataTip: \"暂无数据！\"\n            },\n            invalidMode: {\n                up: 1,\n                down: 0\n            },\n            leftSlideParam: {\n                btnWidth: 60,\n                viewWidth: 60,\n                traDuration: \"200\",\n                traFunction: \"ease-out\" //开始到结束的过渡效果 默认以慢速结束的过渡效果\n            },\n            trRowParam: {\n                iconWidth: 55,\n                parHeight: 21,\n                dataMargin: 16,\n                trMargin: 20 //tr距离屏幕左右边距\n            }\n        };\n        var RxmGridImpl = /** @class */ (function () {\n            function RxmGridImpl() {\n                /**\n                 * 表格绑定滑动至顶部事件(兼容工作流)\n                 */\n                this.callbackSwipeInTop = RxmGridImpl.prototype.bindSwipeInTop;\n                /**\n                 * 表格绑定滑动至底部事件(兼容工作流)\n                 */\n                this.callbackSwipeInBottom = RxmGridImpl.prototype.bindSwipeInBottom;\n                /**\n                 * 表格绑定滑动至顶部开始事件(兼容工作流)\n                 */\n                this.callbackSwipeInTopBegin = RxmGridImpl.prototype.bindSwipeInTopBegin;\n                /**\n                 * 表格绑定滑动至底部开始事件(兼容工作流)\n                 */\n                this.callbackSwipeInBottomBegin = RxmGridImpl.prototype.bindSwipeInBottomBegin;\n                /**\n                 * 表格绑定滑动至顶部结束事件(兼容工作流)\n                 */\n                this.callbackSwipeInTopEnd = RxmGridImpl.prototype.bindSwipeInTopEnd;\n                /**\n                 * 表格绑定滑动至底部结束事件(兼容工作流)\n                 */\n                this.callbackSwipeInBottomEnd = RxmGridImpl.prototype.bindSwipeInBottomEnd;\n                /**\n                 * 表格行绑定tap事件(兼容工作流)\n                 */\n                this.callbackTapLineElement = RxmGridImpl.prototype.bindTapLineElement;\n                /**\n                 * 表格行绑定长按事件(兼容工作流)\n                 */\n                this.callbackPressLineElement = RxmGridImpl.prototype.bindPressLineElement;\n                /**\n                 * 表格绑定数据追加事件(兼容工作流)\n                 */\n                this.callbackDataAppend = RxmGridImpl.prototype.bindDataAppend;\n                /**\n                 * 表格绑定reload完成后事件(兼容工作流)\n                 */\n                this.callbackLoadComplete = RxmGridImpl.prototype.bindLoadComplete;\n                //获取html定义属性生成表格config对象\n                var htmlCfg = getHtmlAttr(cfg.id);\n                //config对象 以js配置对象优先级最高\n                _config = $.extend(true, _config, cssOrm.default.clsGridMobile, htmlCfg, cfg);\n                if (isDesktop(cfg.id)) {\n                    //如果是桌面版 设置cacheMaxLen与viweMaxLen值均为1 分页显示最新一页\n                    _config.param.cacheMaxLen = 1;\n                    _config.param.viweMaxLen = 1;\n                }\n                _doc = new doc(_config, $gridWrap);\n                _doc._pageInfo = _pageInfo;\n            }\n            /**\n         * 表格初始化配置对象\n         */\n            ///所有的自定义消息 \n            /**\n            * 根据domelement信息获取所在的视图行索引\n            * @param {String} domElement - dom选择器\n            * @returns {Number} index - 视图行索引\n            */\n            RxmGridImpl.prototype.getRowViewIndex = function (domElement) {\n                var $tr = $(domElement).closest(\"tr\");\n                var index = $tBody.find(\"tr\").index($tr);\n                return index;\n            };\n            /**\n            * 设置或者获取手指正在触摸的行信息\n            * @param {event|Number} arg - event或者行索引值\n            * @returns {Object} - 触摸行坐标信息对象\n            */\n            RxmGridImpl.prototype.touchRowInfo = function (arg) {\n                var viewIndex;\n                var cf = _config;\n                if (arg) {\n                    var viewIndex;\n                    if (!!arg.target) {\n                        viewIndex = this.getRowViewIndex(arg.target);\n                        _touchRowInfo.domTr = $(arg.target).closest('tr')[0] || _touchRowInfo.domTr || $($tBody.find(\"tr:last\"))[0];\n                    }\n                    else if ($.isNumeric(arg)) {\n                        _touchRowInfo.domTr = $tBody.find(\"tr\")[arg] || _touchRowInfo.domTr;\n                        viewIndex = arg;\n                    }\n                    //输入的是视图索引\n                    //viewIndex = arg.totalIndex;\n                    _touchRowInfo.totalIndex = (cf.param.cacheBegin + cf.param.viewBegin - 1) * cf.pageSize + viewIndex;\n                    _touchRowInfo.oldPos = _touchRowInfo.domTr.getBoundingClientRect();\n                }\n                else {\n                    //console.info(_touchRowInfo.domTr);\n                    var viewIndex_1 = _touchRowInfo.totalIndex - (cf.param.cacheBegin + cf.param.viewBegin - 1) * cf.pageSize;\n                    var domTr = $tBody.find(\"tr\")[viewIndex_1];\n                    if (!!domTr && !!_touchRowInfo.oldPos) {\n                        var firstPos = $tBody.find(\"tr\")[0].getBoundingClientRect();\n                        var newPos = domTr.getBoundingClientRect();\n                        var scrolltop = newPos.top - firstPos.top;\n                        _touchRowInfo.scrollPos = scrolltop - _touchRowInfo.oldPos.top + newPos.height;\n                    }\n                    else {\n                        _touchRowInfo.scrollPos = 0;\n                    }\n                }\n                return _touchRowInfo;\n            };\n            /**\n            * 获取当前表格所有数据\n            * @param {Boolean} bClone - true取缓存中的全部，undefined，false 取视图数据，此为默认\n            * @param {Boolean} bCache - true克隆数据，undefined，false 返回 view 数据此为默认\n            * @returns {Object} - 表格所有数据对象\n            */\n            RxmGridImpl.prototype.getAllData = function (bClone, bCache) {\n                var cf = _config;\n                bClone = bClone || false;\n                bCache = bCache || false;\n                if (bCache) {\n                    if (bClone) {\n                    }\n                    else {\n                        return cf.param.data;\n                    }\n                }\n                else {\n                    var ret = [];\n                    var dataLen;\n                    if ((cf.param.viewBegin + cf.param.viweMaxLen) >= Math.ceil(cf.param.data.length / cf.pageSize)) {\n                        dataLen = cf.param.data.length;\n                    }\n                    else {\n                        dataLen = cf.param.viweMaxLen * cf.pageSize;\n                    }\n                    for (var j = cf.param.viewBegin * cf.pageSize; j < dataLen; j++) {\n                        if (bClone) {\n                            ret.push($.extend(true, {}, cf.param.data[j]));\n                        }\n                        else {\n                            ret.push(cf.param.data[j]);\n                        }\n                    }\n                    return ret;\n                }\n            };\n            ;\n            /**\n            * 获取当前选择行索引\n            * @returns {Array} selectedIdxArr - 索引数组\n            */\n            RxmGridImpl.prototype.getSelectedRow = function () {\n                var selectedIdxArr = [];\n                var $tableBodyRow = $gridWrap.find(\".rxm-s-grid-table tbody\");\n                //获取表格所有tr对象 限定tr范围 表格tbody内的tr才是数据行 modify by xiangcq 20180112\n                var $gridTr = $tBody.find(\"tr\");\n                $tableBodyRow.find(\"input:checked\").each(function () {\n                    var index = $gridTr.index($(this).closest(\"tr\"));\n                    selectedIdxArr.push(index);\n                });\n                return selectedIdxArr;\n            };\n            ;\n            /**\n            * 获取选中行数据\n            * @param {Boolean} bClone - true取缓存中的全部，undefined，false 取视图数据，此为默认\n            * @returns {Object} rd - 选中数据对象\n            */\n            RxmGridImpl.prototype.getSelectedData = function (bClone) {\n                var rows = this.getSelectedRow();\n                var rd = _doc.getRowDataByViewIndexs(rows, bClone);\n                return rd;\n            };\n            ;\n            /**\n            * 获取滑动行数据\n            * @param {String} domElement - dom选择器\n            * @returns {Object} rd - 当前滑动行数据对象\n            */\n            RxmGridImpl.prototype.getSlideRowData = function (domElement, bClone) {\n                var rows = this.getRowViewIndex(domElement);\n                var rd = _doc.getRowDataByViewIndexs(rows, bClone);\n                return rd;\n            };\n            ;\n            RxmGridImpl.prototype.checkRow = function (viewIndexs) {\n                //获取表格中所有checkbox  jquery对象\n                var $checkTr = $gridWrap.find(\"input[name='s_gird_multi_\" + _config.id + \"']\");\n                //参数为数字,选中单行\n                if ($.isNumeric(viewIndexs)) {\n                    $($checkTr[viewIndexs]).prop(\"checked\", true);\n                }\n                else if ($.isArray(viewIndexs)) {\n                    //参数为数组,选中多行\n                    $.each(viewIndexs, function (index, it) {\n                        $($checkTr[it]).prop(\"checked\", true);\n                    });\n                }\n                else {\n                    //参数为为空,全选\n                    $checkTr.prop(\"checked\", true);\n                }\n            };\n            ;\n            /**\n            * 通过index取消选中一行、多行或者全部\n            * @param {Number|Array} viewIndexs - 行索引 此参数可为数字、数组、空\n            */\n            RxmGridImpl.prototype.uncheckRow = function (viewIndexs) {\n                //获取表格中所有checkbox  jquery对象\n                var $checkTr = $gridWrap.find(\"input[name='s_gird_multi_\" + _config.id + \"']\");\n                //参数为数字,选中单行\n                if ($.isNumeric(viewIndexs)) {\n                    $($checkTr[viewIndexs]).prop(\"checked\", false);\n                }\n                else if ($.isArray(viewIndexs)) {\n                    //参数为数组,选中多行\n                    $.each(viewIndexs, function (index, it) {\n                        $($checkTr[it]).prop(\"checked\", false);\n                    });\n                }\n                else {\n                    //参数为为空,全选\n                    $checkTr.prop(\"checked\", false);\n                }\n            };\n            ;\n            /**\n            * 追加数据\n            * @param {Array} rows - 当前页数据\n            * @param {Number} beginPageNum - 起始页面码数\n            */\n            RxmGridImpl.prototype.appendRow = function (rows, forceLoad) {\n                ///<param name=\"beginPageNum\" type=\"number\">起始页面码数</param>\n                _doc.viewAppendRow(rows, forceLoad);\n            };\n            ;\n            /**\n            * 插入数据\n            * @param {Array} arg - 插入数据数组\n            * @param {Boolean} forceLoad - true 到服务器端,重新取数据\n            */\n            RxmGridImpl.prototype.insertRow = function (arg, forceLoad) {\n                _doc.viewInsertRow(arg, forceLoad);\n            };\n            ;\n            /**\n            * 删除数据\n            * @param {Array} arg - 删除数据的行索引数组\n            * @param {Boolean} forceLoad - true 到服务器端,重新取数据\n            */\n            RxmGridImpl.prototype.deleteRow = function (viewIndexs, forceLoad) {\n                ///<summary> 删除数据 </summary>\n                ///<param  name =\"viewIndexs\"  type=\"Array\">删除数据的行索引数组<param>\n                if (_isBuffer) {\n                    var dArr_1 = _config.data;\n                    var cf = _config;\n                    if ($.isNumeric(viewIndexs)) {\n                        var t = viewIndexs;\n                        viewIndexs = [];\n                        viewIndexs.push(t);\n                    }\n                    viewIndexs.sort(function (a, b) {\n                        return b - a;\n                    });\n                    var trs = $tBody.find(\"tr\");\n                    $.each(viewIndexs, function (index, it) {\n                        var cache = it;\n                        dArr_1.splice(cache, 1);\n                        $(trs[it]).remove();\n                    });\n                    this.refresh();\n                }\n                else {\n                    if ($.isNumeric(viewIndexs)) {\n                        var t = viewIndexs;\n                        viewIndexs = [];\n                        viewIndexs.push(t);\n                    }\n                    viewIndexs.sort(function (a, b) {\n                        return b - a;\n                    });\n                    this.touchRowInfo(viewIndexs[viewIndexs.length - 1]);\n                    _doc.viewDeleteRow(viewIndexs, forceLoad);\n                }\n            };\n            ;\n            /**\n            * 更新行数据\n            * @param {Array} arg - 更新数据的行索\n            * @param {Boolean} forceLoad - true 到服务器端,重新取数据\n            */\n            RxmGridImpl.prototype.updateRow = function (arg, forceLoad) {\n                _doc.viewUpdateRow(arg, forceLoad);\n            };\n            ;\n            /**\n            * 获取page信息\n            * @returns {Object}  - page信息对象\n            */\n            RxmGridImpl.prototype.getPageInfo = function () {\n                return _pageInfo;\n            };\n            ;\n            /**\n            * 重新加载表格(数据更新)\n            * @param {Object} arg - 共有三个参数：type,value,page\n            */\n            RxmGridImpl.prototype.reload = function (arg) {\n                if (!_isRender) {\n                    var the = this;\n                    //ajax请求参数格式化 可以重写\n                    if (the.formatDataBeforeAjax) {\n                        _doc.formatDataBeforeAjax = the.formatDataBeforeAjax;\n                    }\n                    //ajax请求返回数据格式化 可以重写\n                    if (the.formatDataAfterAjaxSuccess) {\n                        _doc.formatDataAfterAjaxSuccess = the.formatDataAfterAjaxSuccess;\n                    }\n                    //判断是否为桌面版\n                    if (isDesktop(_config.id)) {\n                        this._renderPc();\n                    }\n                    else {\n                        this._render();\n                    }\n                    _isRender = true;\n                }\n                if (!arg) {\n                    //_config.param && _doc.reload()\n                    //!_config.param && _bufferLoad()\n                    if (_config.param) {\n                        //桌面端表格，直接reload()  直接返回第一页数据\n                        if (isDesktop(_config.id)) {\n                            _config.param.viewBegin = 0;\n                            _pageInfo.curPage = 1;\n                        }\n                        _isBuffer = false;\n                        _doc.reload();\n                    }\n                    if (!_config.param) {\n                        _isBuffer = true;\n                        _bufferLoad();\n                    }\n                }\n                else {\n                    if (arg instanceof Object) {\n                        if ($.isArray(arg.data)) {\n                            _isBuffer = true;\n                            _bufferLoad(arg.data);\n                        }\n                        else {\n                            _isBuffer = false;\n                            _doc.reload(arg);\n                        }\n                    }\n                    //$.isArray(arg) &&  _bufferLoad(arg)\n                    //           $.isString(arg) && _doc.reload({\n                    //               \"type\": \"URL\",\n                    //               \"value\": arg\n                    //           })\n                    //arg.value && _doc.reload(arg)\n                    if ($.isArray(arg)) {\n                        _isBuffer = true;\n                        _bufferLoad(arg);\n                    }\n                    if ($.isString(arg)) {\n                        _isBuffer = false;\n                        _doc.reload({\n                            \"type\": \"URL\",\n                            \"value\": arg\n                        });\n                    }\n                    if (arg.value) {\n                        _isBuffer = false;\n                        _doc.reload(arg);\n                    }\n                }\n            };\n            /**\n            * 刷新表格（视图更新）_doc.reload调用\n            */\n            RxmGridImpl.prototype.refresh = function (arg) {\n                ///<param  name =\"arg\"  type=\"Array\"><param>\n                var cf = _config;\n                //清空表格中所有数据\n                $tBody.empty();\n                var trHeight = 40;\n                if (isDesktop(_config.id)) {\n                    //表格包裹器设置高度\n                    var $selPageSize = $gridWrap.find(\".rxm-page-size select option:selected\").val();\n                    $gridWrap.find(\".rxm-table-body\").css(\"height\", trHeight * $selPageSize + \"px\");\n                    //桌面端 设置分页数据以及绑定分页按钮事件\n                    this._setPaginationDataEvent();\n                }\n                //  var baseIndex = (parseInt(_pageInfo.curPage) - 1) * parseInt(_config.pageSize);\n                //  var begin = cf.param.viewBegin * cf.pageSize;\n                //  var cacheD = cf.param.data.length ;\n                //  var viewD = (cf.param.viweMaxLen+cf.param.viewBegin)*cf.pageSize;\n                //  var end = cacheD < viewD ? cacheD : viewD;\n                //循环迭代数据创建表格行\n                //var i=0;\n                //reload 返回数据即画表格，若无数据则提示\"暂无数据！\"'\n                var end = _viewData.length;\n                if (end > 0) {\n                    for (var j = 0; j < end; j++) {\n                        var item = _viewData[j];\n                        //ajax动态表格\n                        if (item._rxm_baseIndex) {\n                            $tBody.append(this._createRow(item, item._rxm_baseIndex, item._rxm_baseIndex2));\n                        }\n                        else { //buffer grid\n                            var baseIndex = (parseInt(_pageInfo.curPage.toString()) - 1) * parseInt(_config.pageSize);\n                            $tBody.append(this._createRow(item, j + 1, baseIndex));\n                        }\n                    }\n                }\n                else {\n                    //桌面版表格,无数据时需要设置colspan\n                    if (isDesktop(cf.id)) {\n                        var thLen = $gridWrap.find(\".rxm-table-body th\").length;\n                        $tBody.append($(\"<tr class='rxm-nodata-tip-tr'><td class='rxm-nodata-tip' colspan = '\" + thLen + \"'>\" + _config.refreshTip.nodataTip + \"</td></tr>\"));\n                    }\n                    else {\n                        $tBody.append($(\"<tr class='rxm-nodata-tip-tr'><td class='rxm-nodata-tip'>\" + _config.refreshTip.nodataTip + \"</td></tr>\"));\n                    }\n                }\n                //点击checkbox防止触发行事件\n                if (_config.slidemenu) {\n                    //左滑行 checkbox的input框放在div中\n                    $gridWrap.find(\".rxm-multi-check\").closest(\"div\").tap(function () {\n                        return false;\n                    });\n                }\n                else {\n                    //普通行 checkbox的input框放在td中\n                    $gridWrap.find(\".rxm-multi-check\").closest(\"td\").tap(function () {\n                        return false;\n                    });\n                }\n                var touchInfo = this.touchRowInfo();\n                $tableBody.scrollTop(touchInfo.scrollPos);\n                if (_pressFlag) {\n                    this.initPress();\n                }\n                //add by xiangcq 2017.10.27 判断苹果设备 去除高度  去除scroll样式\n                if (appTool.isIOS()) {\n                    $(\"#rxm_content\").css(\"height\", \"auto\").removeClass('content-class');\n                }\n            };\n            ;\n            /**\n            * 计算表格 包裹器高度\n            * @description 用户可以自己设置高度 默认通过表格分页属性 设置表格包裹器高度  分页 表格高度为100% 自动撑开；不分页设置为auto\n            * @returns {Number} index - 视图行索引\n            */\n            RxmGridImpl.prototype._calWrapHeight = function () {\n                var wrapHeight;\n                if (!!_config.height) { //表格config对象 height设置\n                    wrapHeight = _config.height;\n                }\n                else if (_config.pagination) { //判断是否分页\n                    wrapHeight = \"100%\";\n                }\n                else {\n                    wrapHeight = \"auto\";\n                }\n                return wrapHeight;\n            };\n            /**\n            * 移动端 加载视图内所有属性（表格、标题栏、工具栏、搜索栏、刷新栏)\n            */\n            RxmGridImpl.prototype._render = function () {\n                //首先检查根据ID判断表容器$gridWrap是否存在，若存在即设置容器\n                //$gridWrap.attr(\"dataurl\")为undefined 兼容原有表格 只定义包裹器div即可\n                if (!this._isHtmlAttrCfg()) { //false\n                    $gridWrap.addClass(\"rxm-s-grid\").empty();\n                }\n                _config.textEllipsis && $gridWrap.addClass(\"rxm-s-grid-ellipsis\");\n                //获取包裹器高度\n                _wrapHeight = this._calWrapHeight();\n                //初始化包裹器表格高度值,表格config对象 height属性设置的高度最优先, 其次为html div包裹器设置的高度,如果都不设置默认取屏幕可用高度\n                //  if(!!_config.height){//表格config对象 height设置\n                //      _wrapHeight = _config.height;\n                //  }else if($gridWrap.height() !== 0 && $gridWrap.height() !== 100 && !_config.height){//html div包裹器高度设置\n                //     var otherHeight = 0;\n                //      for(var i=0;i<$gridWrap.siblings().length;i++){\n                //          if($($gridWrap.siblings()[i]).css(\"display\")!=\"none\"  &&  $($gridWrap.siblings()[i]).css(\"visibility\")!=\"hidden\"){\n                //              otherHeight += $($gridWrap.siblings()[i]).height();\n                //          }\n                //      }\n                //      _wrapHeight = $gridWrap.height() - otherHeight;\n                //      _config.height = parseInt(_wrapHeight);\n                //  }else if($gridWrap.height()==0 && !_config.height){//未设置高度，默认取屏幕可用高度\n                //      var otherHeight = 0;\n                //      for(var i=0;i<$gridWrap.siblings().length;i++){\n                //          if($($gridWrap.siblings()[i]).css(\"display\")!=\"none\"  &&  $($gridWrap.siblings()[i]).css(\"visibility\")!=\"hidden\"){\n                //              otherHeight += $($gridWrap.siblings()[i]).height();\n                //          }\n                //      }\n                //      _wrapHeight = _wrapHeight - otherHeight;\n                //      _config.height = _wrapHeight;\n                //  }\n                //表格包裹器设置高度\n                $gridWrap.css(\"height\", _wrapHeight);\n                //判断htm文件中表格包裹器div是否存在定制titlebar\n                if ($gridWrap.find(\".rxm-s-grid-titlebar\").length == 0) {\n                    $gridWrap.append($('<div class=\"rxm-s-grid-titlebar\"></div>'));\n                    $gridWrap.find(\".rxm-s-grid-titlebar\").css(\"display\", \"none\");\n                }\n                ;\n                //从整个html页面中选择toolbar\n                $toolbar = $(\".rxm-s-grid-toolbar[ormgrid=\" + _config.id + \"]\");\n                //判断html文件中是否存在定制toolbar,如果没有添加默认\n                if ($toolbar.length === 0) {\n                    //判断html文件中是否存在定制toolbar\n                    $gridWrap.find(\".rxm-s-grid-titlebar\").after($('<div class=\"rxm-s-grid-toolbar\" ormgrid=' + _config.id + '></div>'));\n                    $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n                    //重新定义toolbar\n                    $toolbar = $(\".rxm-s-grid-toolbar[ormgrid=\" + _config.id + \"]\");\n                }\n                //判断html文件中表格包裹器div是否存在定制searchbar\n                if ($gridWrap.find(\".rxm-s-grid-searchbar\").length == 0) {\n                    $gridWrap.append($('<div class=\"rxm-s-grid-searchbar\"></div>'));\n                    $gridWrap.find(\".rxm-s-grid-searchbar\").css(\"display\", \"none\");\n                }\n                ;\n                //判断html文件中是否存在定制topRefreshbar\n                if ($gridWrap.find(\".rxm-s-grid-topRefreshbar\").length == 0) {\n                    $gridWrap.append($('<div class=\"rxm-s-grid-topRefreshbar\"></div>'));\n                    $gridWrap.find(\".rxm-s-grid-topRefreshbar\").css(\"display\", \"none\");\n                }\n                //判断html文件中是否存在定制表格\n                if ($gridWrap.find(\".rxm-s-grid-content\").length == 0) {\n                    $gridWrap.append($('<div class=\"rxm-s-grid-content\"><div class=\"rxm-s-grid-table\"></div></div>'));\n                }\n                ;\n                //判断html文件中是否存在定制s_grid_bottomRefreshbar\n                if ($gridWrap.find(\".rxm-s-grid-bottomRefreshbar\").length == 0) {\n                    $gridWrap.append($('<div class=\"rxm-s-grid-bottomRefreshbar\"></div>'));\n                    $gridWrap.find(\".rxm-s-grid-bottomRefreshbar\").css(\"display\", \"none\");\n                }\n                //判断操作系统为IOS系统，添加s_grid_content样式 padding-top:1px 解决IOS未定制搜索框、操作栏场景下 下拉刷新失效的问题\n                if (appTool.isIOS()) {\n                    $gridWrap.find(\".rxm-s-grid-content\").css(\"padding-top\", \"1px\");\n                }\n                $titlebar = $(\"#\" + _config.id + \" .rxm-s-grid-titlebar\");\n                //$toolbar = $(\"#\" + _config.id + \" .rxm-s-grid-toolbar\");   \n                $searchbar = $(\"#\" + _config.id + \" .rxm-s-grid-searchbar\");\n                $topRefreshbar = $(\"#\" + _config.id + \" .rxm-s-grid-topRefreshbar\");\n                $gridContent = $(\"#\" + _config.id + \" .rxm-s-grid-content\");\n                $bottomRefreshbar = $(\"#\" + _config.id + \" .rxm-s-grid-bottomRefreshbar\");\n                $gridWrap.on(RxmGridMsg.msgEnum.ormRereshGridView, $.proxy(this._onRefreshView, this));\n                //加载表格  标题栏、工具栏、搜索栏、表格数据、顶部刷新栏、底部刷新栏\n                this.renderTitleBar();\n                this.renderToolbar();\n                this.renderSearchBar();\n                this._renderTable();\n                if (!this._isHtmlAttrCfg()) {\n                    this.renderTopRefreshbar();\n                    this.renderBottomRefreshbar();\n                }\n            };\n            /**\n            * 计算表格table-body高度\n            * @returns {Number} tBodyHeight - 表格table-body高度值\n            */\n            /**\n             * 设置页面底部补偿\n             * @returns {Number} value - 底部补偿值\n             */\n            RxmGridImpl.prototype.attrFooterOffset = function (value) {\n                if (typeof value != \"undefined\") {\n                    _footerOffset = value;\n                    $gridWrap.attr(\"footeroffset\", _footerOffset);\n                }\n                else {\n                    if ($('body').find(\".rxm-footerOffset\").length > 0) {\n                        _footerOffset = $('body').find(\".rxm-footer\").outerHeight();\n                    }\n                }\n                return _footerOffset;\n            };\n            /**\n             * 移动端 渲染表格\n             */\n            RxmGridImpl.prototype._renderTable = function () {\n                var the = this;\n                var _tBodyHeight;\n                var $table = $gridWrap.find(\".rxm-s-grid-table table tbody\").empty();\n                if (!this._isHtmlAttrCfg()) {\n                    $table = $gridWrap.find(\".rxm-s-grid-table\").empty();\n                }\n                //清除id为mCSB_1 div的tabindex属性 消除行点击事件表格出现黄色的边线\n                $gridWrap.find(\"#mCSB_1\").removeAttr(\"tabindex\");\n                //计算总页数\n                _pageInfo.pageCount = Math.ceil(_pageInfo.dataCount / _config.pageSize);\n                //数据表格高度样式以及滚动条设置 modify by xiangcq 20180109 设置table-body高度\n                //  if (!!_config.title || $titlebar.css(\"display\")!='none') {   \n                //      _config.height = _config.height - 50;\n                //  }\n                //  if (!!_config.toolbar && $toolbar.css(\"display\")!='none') {\n                //      _config.height = _config.height - 50;\n                //  }\n                //  if (!!_config.searchbar || $searchbar.css(\"display\")!='none') {\n                //      _config.height = _config.height - $searchbar.outerHeight();\n                //  }\n                if (!this._isHtmlAttrCfg()) {\n                    //表格table-body设置高度  此高度小于等于包裹器高度\n                    // var style = 'style=\"overflow-x:hidden;overflow-y:auto;' + (_tBodyHeight && \"height:\" + _tBodyHeight +\"px\") + '\"';\n                    var $tableBodyOne = $('<div class=\"rxm-table-body\"><table class=\"table table_hover\"><tbody></tbody></table></div>');\n                    $table.append($tableBodyOne);\n                    _tBodyHeight = _calTableBodyHeight();\n                    $gridWrap.find(\".rxm-table-body\").css(\"height\", _tBodyHeight);\n                    $gridWrap.find(\".rxm-table-body\").css(\"overflow-x\", \"hidden\");\n                    $gridWrap.find(\".rxm-table-body\").css(\"overflow-y\", \"auto\");\n                }\n                else {\n                    _tBodyHeight = _calTableBodyHeight();\n                    //表格table-body设置高度  此高度小于等于包裹器高度\n                    $gridWrap.find(\".rxm-table-body\").css(\"height\", _tBodyHeight);\n                    $gridWrap.find(\".rxm-table-body\").css(\"overflow-x\", \"hidden\");\n                    $gridWrap.find(\".rxm-table-body\").css(\"overflow-y\", \"auto\");\n                }\n                $tableBody = $gridWrap.find(\".rxm-table-body\");\n                $tBody = $gridWrap.find(\"tbody\");\n                //上滑手势事件绑定\n                $tableBody.swipeUpMove($.proxy(this._onSwipeUpMove, this));\n                //下滑手势事件绑定\n                $tableBody.swipeDownMove($.proxy(this._onSwipeDownMove, this));\n                //上滑结束手势事件绑定\n                $tableBody.swipeUpEnd($.proxy(this._onSwipeUpEnd, this));\n                //下滑结束手势事件绑定\n                $tableBody.swipeDownEnd($.proxy(this._onSwipeDownEnd, this));\n                //点击事件绑定\n                $tableBody.tap(\"tr\", $.proxy(this._onTapLine, this));\n                //长按事件绑定\n                $tableBody.press(\"tr\", $.proxy(this._onPressLine, this));\n                //上拉到底即激发事件   隐藏底部loading信息\n                this.callbackLoadSucsess({\n                    fn: function (e, data) {\n                        if (data.loadParam.type == \"bottom\") {\n                            if (data.status == \"sucsess\") {\n                                setTimeout(function () {\n                                    $bottomRefreshbar.css(\"display\", \"none\");\n                                }, 800);\n                            }\n                            else {\n                                setTimeout(function () {\n                                    $bottomRefreshbar.empty();\n                                    var $tip = $('<span>' + _config.refreshTip.bottomTipError + '</span>');\n                                    $bottomRefreshbar.append($tip);\n                                    setTimeout(function () {\n                                        $bottomRefreshbar.css(\"display\", \"none\");\n                                        //重置数据加载中提示信息\n                                        $bottomRefreshbar.empty();\n                                        //                          var $loading = $('<span class=\"rxm-grid-loading\"/>&nbsp;&nbsp;&nbsp;<span>' + _config.refreshTip.bottomTipLoading + '</span>');\n                                        //                          $bottomRefreshbar.append($loading);\n                                        the.renderBottomRefreshbar();\n                                    }, 500);\n                                }, 2000);\n                            }\n                        }\n                    }\n                }, this);\n                var clkFun;\n                var preFun;\n                for (var i = 0; i < _config.rowevent.length; i++) {\n                    if (!!_config.rowevent[i].click) {\n                        clkFun = _config.rowevent[i].click;\n                    }\n                    if (!!_config.rowevent[i].press) {\n                        preFun = _config.rowevent[i].press;\n                    }\n                }\n                //绑定数据列表配置的所有事件\n                if (!!clkFun) {\n                    this.bindTapLineElement({ fn: clkFun }, this);\n                }\n                if (!!preFun) {\n                    this.bindPressLineElement({ fn: preFun }, this);\n                }\n            };\n            /**\n             * 桌面端 渲染表格\n             *\n             */\n            RxmGridImpl.prototype._plusViewBegin = function () {\n                var cf = _config;\n                var scrollHight = $tableBody[0].scrollHeight;\n                var scrollTop = $tableBody.scrollTop();\n                //$tableBody高度\n                var tableHight = $tableBody.height();\n                var b = scrollHight - scrollTop - tableHight < 200;\n                // console.info(\"_downViewBegin\" + $tableBody.scrollTop());\n                //if (b) { console.info(\"_plusViewBegin++\" + cf.param.viewBegin); };\n                if (b && (cf.param.viewBegin + cf.param.viweMaxLen) * cf.pageSize < cf.param.data.length) {\n                    cf.param.viewBegin++;\n                    //console.info(\"_plusViewBegin++\" + cf.param.viewBegin);\n                    this.refresh();\n                    return true;\n                }\n                return false;\n            };\n            RxmGridImpl.prototype._minViewBegin = function () {\n                var cf = _config;\n                var b = $tableBody.scrollTop() < 200;\n                if (b && cf.param.viewBegin > 0) {\n                    cf.param.viewBegin--;\n                    //console.info(\"_minViewBegin--\" + cf.param.viewBegin);\n                    this.refresh();\n                    return true;\n                }\n                return false;\n            };\n            /**\n             * 上滑手势监听函数(上拉分页)\n             * @param {event} evt - jquery event对象\n             * @param {Object} data - 滑动位置数据对象\n             */\n            RxmGridImpl.prototype._onSwipeUpMove = function (evt, data) {\n                //当前移动中tartY值\n                var startYMove = data.position.delta[0].startY;\n                this.touchRowInfo(evt);\n                // if(this._plusViewBegin())return;\n                //判定是否到底 如果处于长按状态不可上拉下拉\n                if (this._isOnBottom() && _pressFlag == false) {\n                    if (_startYMove == 0) {\n                        $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottom, 0);\n                        $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottomBegin);\n                        //从到底位置作为起始记录startY值\n                        _startYMove = startYMove;\n                    }\n                    else {\n                        //滑动距离  滑动中startY与到底位置起始记录startY值做差\n                        var swipeDIF = startYMove - _startYMove;\n                        //判断到底后只激发一次\n                        //$gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottom,swipeDIF);\n                    }\n                }\n            };\n            ;\n            /**\n             * 下滑手势监听函数(下拉刷新)\n             * @param {event} evt - jquery event对象\n             * @param {Boolean} data - 滑动位置数据对象\n             */\n            RxmGridImpl.prototype._onSwipeDownMove = function (evt, data) {\n                //当前移动中tartY值\n                this.touchRowInfo(evt);\n                if (this._minViewBegin())\n                    return;\n                var startYMove = data.position.delta[0].startY;\n                //判断是否到顶 如果处于长按状态不可上拉下拉\n                if (this._isOnTop() && _pressFlag == false) {\n                    if (_startYMove == 0) {\n                        $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTop, 0);\n                        $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTopBegin);\n                        _startYMove = startYMove;\n                    }\n                    else {\n                        var swipeDIF = startYMove - _startYMove;\n                        //判断到顶后持续激发 阻尼下拉效果      \n                        $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTop, swipeDIF);\n                    }\n                }\n            };\n            /**\n             * 上滑手势结束监听函数(上拉分页)\n             */\n            RxmGridImpl.prototype._onSwipeUpEnd = function () {\n                //滚动距离总长(注意不是滚动条的长度)\n                var scrollHight = $tableBody[0].scrollHeight;\n                //滚动到的当前位置\n                var scrollTop = $tableBody.scrollTop();\n                //$tableBody高度\n                var tableHight = $tableBody.height();\n                //判断是否到底，上拉分页\n                if (scrollTop + tableHight >= scrollHight) {\n                    $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottomEnd);\n                }\n            };\n            /**\n             * 下滑手势结束监听函数(下拉刷新)\n             */\n            RxmGridImpl.prototype._onSwipeDownEnd = function () {\n                //判断是否到顶，如果处于长按状态不可上拉下拉\n                if (this._isOnTop() && _pressFlag == false) {\n                    $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTopEnd);\n                }\n            };\n            ;\n            /**\n             * 向表格中追加一行数据\n             * @param {Object} row - 行数据\n             * @param {Number} rowIndex - 行索引\n             * @param {Number} baseIndex - true克隆数据，undefined，false 返回 view 数据此为默认\n             * @returns {Object} $tr - 行对象\n             */\n            RxmGridImpl.prototype._createRow = function (row, rowIndex, baseIndex) {\n                //渲染表格行前触发\n                if (typeof (_config.onBeforeRenderRow) == \"function\") {\n                    //可对行数据进行处理\n                    row = _config.onBeforeRenderRow.apply(this, [row]) || row;\n                }\n                //配置tr rowevent\n                var $tr = $(\"<tr></tr>\");\n                if (!!_config.rowevent && _config.rowevent.length > 0) {\n                    for (var i = 0, length = _config.rowevent.length; i < 1; i++) {\n                        var item = _config.rowevent[i];\n                        $tr = $(\"<tr class='\" + item.field + \"'></tr>\");\n                    }\n                }\n                if (isDesktop(_config.id)) {\n                    $tr = this.createRowInPc(row, $tr, rowIndex, baseIndex);\n                }\n                else {\n                    if (!!_config.slidemenu && _config.slidemenu.length > 0) {\n                        $tr = this.createSlideRow(row, $tr);\n                    }\n                    else {\n                        $tr = this.createRow(row, $tr);\n                    }\n                }\n                return $tr;\n            };\n            /**\n             * 创建左滑菜单行\n             * @param {Object} row - 行数据\n             * @param {Object} $tr - 表格行对象\n             * @returns {Object} $tr - 表格行对象 jquery对象\n             */\n            RxmGridImpl.prototype.createSlideRow = function (row, $tr) {\n                //创建表格行数据   共4列  icon 数据内容 (标题+内容)   复选框(默认隐藏)  \n                var the = this;\n                var $td = $('<td width=\"100%\" style=\"padding:0px\"></td>');\n                var $wrapperDiv = $('<div class=\"rxm-slide-wrapper clearfix\"></div>');\n                var $scrollDiv = $('<div class=\"rxm-slide-scroll-wrapper clearfix\"></div>');\n                var $iconDiv = $('<div class=\"rxm-icon-div clearfix\"></div>');\n                var $dataDiv = $('<div class=\"rxm-data-div clearfix\"></div>');\n                var $slideBtnDiv = $('<div class=\"rxm-slide-btn-div clearfix\"></div>');\n                var $checkboxDiv = $('<div class=\"rxm-td-checkbox fix\" style=\"display:none;float:left\" ></div>');\n                //数据字段个数\n                var parNum = _config.layout.length;\n                var firstField = '1';\n                //循环创建icon与数据列\n                for (var j = 0, item = void 0; item = _config.layout[j++]; j < item.length) {\n                    var tdName = item.name;\n                    var tdValue = item.format ? item.format({ \"row\": row }) : row[item.field];\n                    if (item.field == \"icon\") {\n                        _hasIcon = true;\n                        parNum = parNum - 1;\n                        tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                        $iconDiv.append(tdValue);\n                        $scrollDiv.append($iconDiv);\n                    }\n                    else {\n                        tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                        if (firstField === '1') {\n                            if (tdName !== \"\" && tdName !== null) {\n                                $dataDiv.append(\"<span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                                firstField = '2';\n                            }\n                            else {\n                                $dataDiv.append(\"<span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                                firstField = '2';\n                            }\n                        }\n                        else {\n                            if (tdName !== \"\" && tdName !== null) {\n                                //其他字段换行\n                                $dataDiv.append(\"</br><span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            }\n                            else {\n                                //其他字段换行\n                                $dataDiv.append(\"</br><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            }\n                        }\n                    }\n                    $scrollDiv.append($dataDiv);\n                }\n                //创建checkbox列   multi属性配置为true：多选框      false：单选按钮\n                if (typeof _config.multi != \"undefined\") {\n                    $checkboxDiv.append('<input class=\"rxm-multi-check\" type=\"' + (_config.multi ? 'checkbox' : 'radio') + '\" name=\"s_gird_multi_' + (_config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '>');\n                    $scrollDiv.append($checkboxDiv);\n                }\n                $scrollDiv.append($slideBtnDiv);\n                $wrapperDiv.append($scrollDiv);\n                $td.append($wrapperDiv);\n                $tr.append($td);\n                //设置tr中各个部分的div高度值、宽度值\n                this._attrSlideRowStyle($slideBtnDiv, $dataDiv, $scrollDiv, $iconDiv, parNum);\n                //数据行绑定touchStart触屏开始事件\n                this._bindTrSlideEvent($scrollDiv);\n                return $tr;\n            };\n            /**\n             * 设置左滑行内div高度与宽度\n             * @param {Number} parNum - 单个字段高度值\n             */\n            RxmGridImpl.prototype._attrSlideRowStyle = function ($slideBtnDiv, $dataDiv, $scrollDiv, $iconDiv, parNum) {\n                //数据div高度\n                var dataDivHeight = parNum * _config.trRowParam.parHeight;\n                //滑动菜单div设置高度\n                //$slideBtnDiv.height(dataDivHeight + _config.trRowParam.dataMargin);\n                //滑动按钮区域div高度值\n                var slideBtnDivHeight = dataDivHeight + _config.trRowParam.dataMargin / 2;\n                //ios处理菜单div高度少4px的问题\n                if (appTool.isIOS()) {\n                    slideBtnDivHeight = dataDivHeight + _config.trRowParam.dataMargin / 2 + 4;\n                }\n                $slideBtnDiv.height(slideBtnDivHeight);\n                if (_hasIcon) {\n                    _iconMargin = dataDivHeight / 2 + _config.trRowParam.dataMargin / 2 - 20;\n                    $iconDiv.css(\"margin-top\", _iconMargin);\n                }\n                //tr宽度\n                var screenWidth = $(window).width() - _config.trRowParam.trMargin;\n                //数据显示div宽度 tr宽度 减去 icon宽度\n                var dataWidth = screenWidth;\n                //判断是否具有icon列,若有即减去icon列宽度\n                if (_hasIcon) {\n                    dataWidth = screenWidth - _config.trRowParam.iconWidth;\n                }\n                //数据显示div设置宽度\n                $dataDiv.width(dataWidth);\n                //获取左滑按钮的数量，计算左滑按钮区域面积\n                var itemWidth = 0;\n                for (var i = 0, length = _config.slidemenu.length; i < length; i++) {\n                    var item = _config.slidemenu[i];\n                    var $btnWrap = $('<div class=\"rxm-slide-btn\"></div>');\n                    //滑动菜单绑定事件\n                    $btnWrap.tap(this, item.callback);\n                    var $btn = $('<div></div>');\n                    //滑动菜单内容垂直居中设置\n                    $btn.css(\"line-height\", slideBtnDivHeight + \"px\");\n                    //按钮图标\n                    if (!!item.icon) {\n                        var $btnIcon = $(\"<i></i>\");\n                        $btnIcon.attr(\"class\", item.icon);\n                        $btn.append($btnIcon);\n                    }\n                    //按钮名称\n                    if (!!item.name) {\n                        $btn.append(item.name);\n                    }\n                    //按钮文字大小\n                    if (!!item.fontSize) {\n                        $btn.css(\"font-size\", item.fontSize);\n                    }\n                    //按钮文字颜色\n                    if (!!item.fontSize) {\n                        $btn.css(\"color\", item.fontColor);\n                    }\n                    //按钮背景色\n                    if (!!item.color) {\n                        $btn.css(\"background-color\", item.color);\n                    }\n                    //按钮样式表\n                    $btn.addClass(item.class);\n                    //按钮宽度\n                    if (!!item.width) {\n                        $btn.width(item.width);\n                    }\n                    $btnWrap.append($btn);\n                    $slideBtnDiv.append($btnWrap);\n                    itemWidth += item.width ? parseInt(item.width) : _config.leftSlideParam.btnWidth;\n                    //console.info(btnAreaWidth);\n                }\n                //滑动菜单区域div宽度 每个按钮宽度之和\n                btnAreaWidth = itemWidth;\n                //滑动按钮div设置宽度  默认宽度每个60  可配置\n                $slideBtnDiv.width(btnAreaWidth);\n                //具有滚动条div宽度 tr宽度 加上 隐藏按钮宽度\n                var scrollWidth = screenWidth + btnAreaWidth;\n                //滚动条div设置宽度  \n                $scrollDiv.width(scrollWidth);\n                scrollDivWidth = scrollWidth;\n                dataDivWidth = dataWidth;\n            };\n            /**\n             * 绑定表格行左滑事件\n             * @param {Object} $slideTr - 表格行对象\n             */\n            RxmGridImpl.prototype._bindTrSlideEvent = function ($slideTr) {\n                var the = this;\n                //数据行绑定touchStart触屏开始事件\n                $slideTr.touchStart(function (e, data) {\n                    if (!_pressFlag) {\n                        // 记录当前触屏的行对象 \n                        slideCurSwipeTr = this;\n                        // 当前滑动数据行设定过渡效果设置  1、过渡效果的 CSS 属性的名称   2、完成过渡效果需要多少秒或毫秒  3、速度效果的速度曲线（过渡效果）\n                        the._setTransition($(slideCurSwipeTr));\n                        // 点击除当前左滑对象之外的任意其他位置\n                        if (slideLastSwipeTr && slideCurSwipeTr != slideLastSwipeTr) {\n                            $(slideCurSwipeTr).removeData(\"position\");\n                            $(slideLastSwipeTr).removeData(\"position\");\n                            // 上一个左滑对象设定过渡效果设置  1、过渡效果的 CSS 属性的名称   2、完成过渡效果需要多少秒或毫秒  3、速度效果的速度曲线（过渡效果）\n                            the._setTransition($(slideLastSwipeTr));\n                            // 隐藏上一个左滑对象按钮\n                            the._resetStatus($(slideLastSwipeTr));\n                            // 清空上一个左滑的对象\n                            slideLastSwipeTr = null;\n                        }\n                    }\n                });\n                //数据行绑定touchMove触屏移动事件\n                $slideTr.touchMove(function (e, data) {\n                    if (!_pressFlag) {\n                        //滑动距离  当前滑动横向坐标减去起始横向坐标\n                        var moveDis = data.position.delta[0].moved;\n                        //滑动方向\n                        var curSwipe = data.curSwipe;\n                        //console.info('moveDis==='+moveDis);\n                        //左滑，距离在75之内，按钮区域随着左滑距离逐渐显示，大于75后按钮区域不变\n                        console.info('btnAreaWidth===' + btnAreaWidth);\n                        if (moveDis <= btnAreaWidth && curSwipe == \"Left\" && $(slideCurSwipeTr).data(\"position\") != \"view\") {\n                            $(slideCurSwipeTr).css('-webkit-transform', 'translate3d(' + -moveDis + 'px, 0px, 0px)');\n                        }\n                        //左滑完全显示按钮区域，标识词条数据位置为显示\n                        if (moveDis > btnAreaWidth && curSwipe == \"Left\") {\n                            $(slideCurSwipeTr).data(\"position\", \"view\");\n                            console.info('position===' + slideCurSwipeTr);\n                        }\n                        //右滑，按钮区域直接隐藏\n                        if (curSwipe == \"Right\") {\n                            the._resetStatus($(slideCurSwipeTr));\n                        }\n                    }\n                });\n                //数据行绑定touchEnd触屏结束事件\n                $slideTr.touchEnd(function (e, data) {\n                    if (!_pressFlag) {\n                        // 点击除当前左滑对象之外的任意其他位置\n                        if (slideLastSwipeTr && slideCurSwipeTr != slideLastSwipeTr) {\n                            // 右滑隐藏按钮\n                            the._resetStatus($(slideLastSwipeTr));\n                            // 清空上一个左滑的对象\n                            slideLastSwipeTr = null;\n                        }\n                        //滑动方向\n                        var curSwipe = data.curSwipe;\n                        if (curSwipe != \"\") {\n                            //移动距离  结束时横向坐标减去起始横向坐标\n                            var moveDis = data.position.delta[0].moved;\n                            console.info('moveDis===' + moveDis);\n                            //当滑动结束时，左滑距离大于设置距离数值，显示按钮区域\n                            if (moveDis > _config.leftSlideParam.viewWidth && curSwipe == \"Left\") {\n                                //显示按钮区域\n                                $(slideCurSwipeTr).css('-webkit-transform', 'translate3d(' + (-1 * btnAreaWidth) + 'px, 0px, 0px)');\n                                $(slideCurSwipeTr).data(\"position\", \"view\");\n                                slideLastSwipeTr && slideLastSwipeTr != slideCurSwipeTr &&\n                                    $(slideLastSwipeTr).css('-webkit-transform', 'translate3d(0px, 0px, 0px)'); // 已经左滑状态的按钮右滑\n                                slideLastSwipeTr = slideCurSwipeTr; // 记录上一个左滑的对象\n                            }\n                            else if (moveDis < _config.leftSlideParam.viewWidth && curSwipe == \"Left\") {\n                                the._resetStatus($(slideCurSwipeTr));\n                                if (slideCurSwipeTr == slideLastSwipeTr) {\n                                    // 右滑\n                                    the._resetStatus($(slideCurSwipeTr));\n                                    // 清空上一个左滑的对象\n                                    slideLastSwipeTr = null;\n                                }\n                            }\n                        }\n                    }\n                });\n            };\n            /**\n             * 渲染表格行数据(可重写)\n             * @param {Object} row - 行数据\n             * @param {Object} $tr - 表格行对象\n             * @returns {Object} $tr - 表格行对象 jquery对象\n             */\n            RxmGridImpl.prototype.createRow = function (row, $tr) {\n                //模板数据\n                var _rowData = {\n                    gridId: _config.id,\n                    layout: _config.layout,\n                    rowData: row,\n                    multi: _config.multi\n                };\n                //判断heml是否存在createRow模板 不存在使用默认\n                if ($(\"#template-\" + _config.id).length !== 0) {\n                    $tr.append(artTemplate(\"template-\" + _config.id, _rowData));\n                }\n                else {\n                    //art模板compile加载默认html模板\n                    var renderRow = artTemplate.compile(rowTmpl);\n                    $tr = renderRow(_rowData);\n                }\n                return $tr;\n            };\n            /**\n             * 渲染表格标题栏(可重写)\n             */\n            RxmGridImpl.prototype.renderTitleBar = function () {\n                if (_config.title) {\n                    $titlebar.css(\"display\", \"\");\n                    $titlebar.empty().append(_config.title);\n                }\n            };\n            /**\n             * 渲染表格搜索栏(可重写)\n             */\n            RxmGridImpl.prototype.renderSearchBar = function () {\n                if (!!_config.searchbar) {\n                    $searchbar.css(\"display\", \"\");\n                }\n            };\n            /**\n             * 移动端 渲染表格工具栏(可重写) 以config配置对象中的配置为主\n             */\n            RxmGridImpl.prototype.renderToolbar = function () {\n                //html页面中已经定义工具栏，并且将默认按钮绑定默认事件\n                var liBtn = $toolbar.find(\"ul li\");\n                for (var i = 0; i < liBtn.length; i++) {\n                    if ($(liBtn[i]).is(\".rxm-default-delete\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindDeleteBtn, this));\n                    }\n                    if ($(liBtn[i]).is(\".rxm-default-all-select\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindSelectAllBtn, this));\n                    }\n                    if ($(liBtn[i]).is(\".rxm-default-cancel\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindCancelBtn, this));\n                    }\n                }\n                if (!!_config.toolbar && _config.toolbar.length > 0) {\n                    var $ul = $(\"<ul style='width:330px;'></ul>\");\n                    for (var i = 0, length = _config.toolbar.length; i < length; i++) {\n                        var item = _config.toolbar[i];\n                        var $li = $('<li></li>');\n                        $li.tap(this, item.callback);\n                        $li.attr(\"style\", item.style);\n                        var $a = $('<a></a>');\n                        var $i = $('<i></i>');\n                        $i.attr(\"class\", item.icon);\n                        $i.appendTo($a);\n                        $a.append(item.name);\n                        $a.appendTo($li);\n                        $li.appendTo($ul);\n                    }\n                    $toolbar.empty().append($ul);\n                }\n            };\n            ;\n            /**\n             * 渲染表格顶部刷新栏(可重写)\n             */\n            RxmGridImpl.prototype.renderTopRefreshbar = function () {\n                var $loading = $('<img class = \"rxm-top-loading-arrow\" src=\"' + _downArrowImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + _config.refreshTip.topTipBegin + '</span>');\n                $topRefreshbar.append($loading);\n            };\n            ;\n            /**\n             * 渲染表格底部刷新栏(可重写)\n             */\n            RxmGridImpl.prototype.renderBottomRefreshbar = function () {\n                var $loading = $('<span class=\"rxm-grid-loading\"/>&nbsp;&nbsp;&nbsp;<span>' + _config.refreshTip.bottomTipLoading + '</span>');\n                $bottomRefreshbar.append($loading);\n            };\n            ;\n            /**\n             * 触发长按状态函数\n             */\n            RxmGridImpl.prototype.initPress = function () {\n                _pressFlag = true;\n                if (!!_config.slidemenu) {\n                    $gridWrap.find(\".rxm-data-div\").css(\"width\", dataDivWidth - 30);\n                    $gridWrap.find(\".rxm-slide-scroll-wrapper\").css(\"width\", scrollDivWidth + 40);\n                    $gridWrap.find(\".rxm-td-checkbox\").css(\"margin-top\", _iconMargin);\n                    if (!!_config.toolbar || $gridWrap.find(\".rxm-s-grid-toolbar\").length > 0) {\n                        //显示toolbar\n                        $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"block\");\n                        //_config.heigh = _config.height - 50;\n                        //调用resize 重置tableBody高度 \n                        _resize.call(this, \"minus\", $gridWrap.find(\".rxm-s-grid-toolbar\").outerHeight());\n                        //$tableBody.css(\"height\", _config.heigh + \"px\");\n                    }\n                    //显示行数据右侧复选框\n                    $gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"\");\n                }\n                else {\n                    //隐藏行数据右侧箭头\n                    $gridWrap.find(\".rxm-td-arrow\").css(\"display\", \"none\");\n                    if (!!_config.toolbar || $gridWrap.find(\".rxm-s-grid-toolbar\").length > 0) {\n                        //显示toolbar\n                        $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"block\");\n                        //  _config.heigh = _config.height - 50;\n                        //  $tableBody.css(\"height\", _config.heigh + \"px\");\n                        //if(!$gridWrap.find(\".rxm-s-grid-toolbar\").hasClass(\"rxm-floated\")){\n                        // _resize(\"minus\",$gridWrap.find(\".rxm-s-grid-toolbar\").outerHeight())\n                        //}\n                    }\n                    //显示行数据右侧复选框\n                    $gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"\");\n                }\n            };\n            /**\n             * 取消长按状态\n             */\n            RxmGridImpl.prototype.cancelPress = function () {\n                $gridWrap.find(\".rxm-multi-check\").prop(\"checked\", false);\n                _pressFlag = false;\n                _allChecked = true;\n                //提示全选\n                $toolbar.find(\"ul .rxm-default-all-select a\").html(\"全选\");\n                //隐藏行数据右侧复选框\n                $gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"none\");\n                if (!!_config.slidemenu) {\n                    $gridWrap.find(\".rxm-data-div\").css(\"width\", dataDivWidth);\n                    $gridWrap.find(\".rxm-slide-scroll-wrapper\").css(\"width\", scrollDivWidth);\n                }\n                //显示行数据右侧箭头\n                $gridWrap.find(\".rxm-td-arrow\").css(\"display\", \"\");\n                if (!!_config.toolbar || $gridWrap.find(\".rxm-s-grid-searchbar\").length > 0) {\n                    //隐藏toolbar\n                    $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n                    //  _config.heigh = _config.height + 50;\n                    //  $tableBody.css(\"height\", _config.height + \"px\");\n                    //_resize(\"add\",$gridWrap.find(\".rxm-s-grid-toolbar\").outerHeight())\n                }\n            };\n            /**\n             * 全选/取消全选函数\n             */\n            RxmGridImpl.prototype.allSelect = function () {\n                //获取表格中所有checkbox  jquery对象\n                var $checkTr = $gridWrap.find(\"input[name='s_gird_multi_\" + _config.id + \"']\");\n                if (_allChecked) {\n                    $checkTr.prop(\"checked\", true);\n                    _allChecked = false;\n                    //提示全不选\n                    $toolbar.find(\"ul .rxm-default-all-select a\").html(\"全不选\");\n                }\n                else {\n                    $checkTr.prop(\"checked\", false);\n                    _allChecked = true;\n                    //提示全选\n                    $toolbar.find(\"ul .rxm-default-all-select a\").html(\"全选\");\n                }\n            };\n            /**\n             * 设置长按状态\n             * @param {Boolean} value - 状态值参数\n             * @returns {Boolean}  - 长按状态\n             */\n            RxmGridImpl.prototype.attriPressFlag = function (value) {\n                if (!!value) {\n                    _pressFlag = value;\n                }\n                return _pressFlag;\n            };\n            /**\n             * 设置top状态\n             * @param {Boolean} value - 状态值参数\n             * @returns {Boolean}  - top状态\n             */\n            RxmGridImpl.prototype.attriTopFlag = function (value) {\n                if (typeof value != \"undefined\") {\n                    var tmp = _config._bTop;\n                    _config._bTop = value;\n                    if (tmp != value && value) {\n                        $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTop);\n                        $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTopBegin);\n                    }\n                }\n                return _config._bTop;\n            };\n            /**\n             * 设置bottom状态\n             * @param {Boolean} value - 状态值参数\n             * @returns {Boolean} - bottom状态\n             */\n            RxmGridImpl.prototype.attriBottomFlag = function (value) {\n                if (typeof value != \"undefined\") {\n                    var tmp = _config._bottom;\n                    _config._bottom = value;\n                    if (tmp != value && value) {\n                        if (_startYMove == 0) {\n                            $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottom);\n                            $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottomBegin);\n                        }\n                    }\n                }\n                return _config._bottom;\n            };\n            /**\n             * 表格绑定滑动至顶部事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInTop = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: this._onSwipeInTop,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                arg.fn = arg.fn || arg.callback;\n                $gridWrap.on(RxmGridMsg.msgEnum.swipeInTop, arg.data, $.proxy(arg.fn, the), arg.one);\n            };\n            /**\n             * 表格绑定滑动至底部事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInBottom = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: this._onSwipeInBottom,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                arg.fn = arg.fn || arg.callback;\n                $gridWrap.on(RxmGridMsg.msgEnum.swipeInBottom, arg.data, $.proxy(arg.fn, the), arg.one);\n            };\n            ;\n            /**\n             * 表格绑定滑动至底部后事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInBottomAfter = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: this._onSwipeInBottomAfter,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                arg.fn = arg.fn || arg.callback;\n                $gridWrap.on(RxmGridMsg.msgEnum.swipeInBottomAfter, arg.data, $.proxy(arg.fn, the), arg.one);\n            };\n            ;\n            /**\n             * 表格绑定滑动至顶部结束后事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInTopEndAfter = function (arg, scope) {\n                var args = {};\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    args = {\n                        callback: this._onSwipeInTopEndAfter,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || (function (a) { });\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格绑定滑动至顶部开始事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInTopBegin = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: this._onSwipeInTopBegin,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格绑定滑动至底部开始事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInBottomBegin = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        callback: this._onSwipeInBottomBegin,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格绑定滑动至顶部结束事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInTopEnd = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        callback: this._onSwipeInTopEnd,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function (e, data) { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格绑定滑动至底部结束事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindSwipeInBottomEnd = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        callback: this._onSwipeInBottomEnd,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInBottomEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInBottomEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格行绑定tap事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindTapLineElement = function (arg, scope) {\n                (!!arg.callback) && (arg.fn = arg.callback);\n                if (!arg.selector) {\n                    arg.selector = \"tr:not(.rxm-nodata-tip-tr)\";\n                }\n                else if (arg.selector.indexOf(\"tr\") !== 0) {\n                    arg.selector = \"tr:not(.rxm-nodata-tip-tr) \" + arg.selector;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.tapLineElement, arg.selector, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.tapLineElement, arg.selector, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格行绑定长按事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindPressLineElement = function (arg, scope) {\n                (!!arg.callback) && (arg.fn = arg.callback);\n                if (!arg.selector) {\n                    arg.selector = \"tr:not(.rxm-nodata-tip-tr)\";\n                }\n                else if (arg.selector.indexOf(\"tr\") !== 0) {\n                    arg.selector = \"tr:not(.rxm-nodata-tip-tr) \" + arg.selector;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格绑定删除按钮默认事件 删除选中的数据行\n             */\n            RxmGridImpl.prototype.bindDeleteBtn = function () {\n                var the = this;\n                //获取选中行的index数据\n                var selIdx = the.getSelectedRow();\n                if (!selIdx || selIdx.length < 1) {\n                    Util.alert(\"您好，请选择一条数据\");\n                    return;\n                }\n                Util.confirm(\"您是否要删除选中的数据？\", function () {\n                    //获取选中行数据\n                    var selData = the.getSelectedData();\n                    the.deleteRow(selIdx);\n                    //获取删除数据请求的ajax地址\n                    var delUrl = $gridWrap.find(\".rxm-default-delete\").attr(\"rxmurl\");\n                    var arg = {\n                        delUrl: delUrl,\n                        delData: selData,\n                        loadComplete: function () { }\n                    };\n                    _doc.ajaxDeleteRow(arg);\n                }, function () {\n                    return;\n                });\n            };\n            ;\n            /**\n             * 表格绑定全选按钮默认事件 选中当前页面所有数据\n             */\n            RxmGridImpl.prototype.bindSelectAllBtn = function () {\n                this.allSelect();\n            };\n            ;\n            /**\n             * 表格绑定取消按钮默认事件 长按事件取消\n             */\n            RxmGridImpl.prototype.bindCancelBtn = function () {\n                this.cancelPress();\n            };\n            ;\n            /**\n             * reload函数 ajax请求成功函数重写\n             * @param {Object} args - 参数对象\n             */\n            // public formatDataAfterAjaxSuccess(args: any) {\n            //     _doc.formatDataAfterAjaxSuccess(args);\n            // };\n            /**\n             * reload函数 ajax重写\n             * @param {Object} args - 参数对象\n             */\n            // public formatDataBeforeAjax(args: any) {\n            //     _doc.formatDataBeforeAjax(args);\n            // };\n            /**\n             * 数据删除函数 ajax重写\n             * @param {Object} args - 参数对象\n             */\n            RxmGridImpl.prototype.formatDataBeforeDelAjax = function (args) {\n                _doc.formatDataBeforeDelAjax(args);\n            };\n            ;\n            /**\n             * 表格绑定数据追加事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindDataAppend = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        callback: this._onAppend,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            /**\n             * 表格绑定数据插入事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.callbackDataInsert = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: this._onInsert,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            /**\n             * 表格绑定数据删除事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.callbackDataDelete = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: this._onDelete,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            /**\n             * 表格绑定数据更新事件\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.callbackDataUpdate = function (arg, scope) {\n                if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                    arg = {\n                        fn: this._onUpdate,\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            /**\n             * 表格绑定reload成功事件 没有默认触发函数\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.callbackLoadSucsess = function (arg, scope) {\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.loadSucsess, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.loadSucsess, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            /**\n             * 表格绑定reload完成后事件  没有默认触发函数\n             * @param {Object} arg - 参数对象\n             * @param {Object} scope - this对象\n             */\n            RxmGridImpl.prototype.bindLoadComplete = function (arg, scope) {\n                var the = this;\n                if (scope) {\n                    the = scope;\n                }\n                var cb = arg.fn || arg.callback || function () { };\n                if (!arg.one) {\n                    $gridWrap.on(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                else {\n                    $gridWrap.one(RxmGridMsg.msgEnum.swipeInTopEnd, arg.data, $.proxy(cb, the));\n                }\n                ;\n            };\n            ;\n            RxmGridImpl.prototype._onAppend = function (e, data) {\n                this.refresh();\n            };\n            RxmGridImpl.prototype.attrRefreshTip = function (arg) {\n                return _config.refreshTip = $.extend(true, _config.refreshTip, arg);\n            };\n            /**\n             * 属性设置 表格标题\n             * 默认为\"表格标题\"\n             */\n            RxmGridImpl.prototype.attrGridTitle = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    //titlebar 修改标题\n                    $gridWrap.find(\".rxm-s-grid-titlebar\").empty().append(arg);\n                }\n                else {\n                    //初始化获取html中标题栏中的内容 正则去除多余空格\n                    arg = $gridWrap.find(\".rxm-s-grid-titlebar\").text().replace(/\\s+/g, \"\");\n                }\n                return arg;\n            };\n            /**\n             * 属性设置 表格自适应\n             * 默认为\"自适应\"版本\n             */\n            RxmGridImpl.prototype.attrGridSelfAdaption = function (arg) {\n                var gridType = \"rxm-grid-mobile-desktop\";\n                if (typeof arg != \"undefined\") {\n                    gridType = arg;\n                    $gridWrap.removeClass(\"rxm-grid-mobile-desktop rxm-grid-mobile rxm-grid-desktop\");\n                    $gridWrap.addClass(arg);\n                }\n                else {\n                    if ($gridWrap.hasClass(\"rxm-grid-mobile\")) {\n                        gridType = \"rxm-grid-mobile\";\n                    }\n                    else if ($gridWrap.hasClass(\"rxm-grid-desktop\")) {\n                        gridType = \"rxm-grid-desktop\";\n                    }\n                }\n                return gridType;\n            };\n            /**\n             * 属性设置 表格数据url\n             * 默认为/resoft/xxx\n             */\n            RxmGridImpl.prototype.attrRxmUrl = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    //rxmurl处理 判断地址首字符是否添加斜杠 \n                    if (arg.substring(0, 1) != \"/\") {\n                        arg = \"/\" + arg;\n                    }\n                    _config.data = {\n                        \"type\": \"URL\",\n                        \"value\": \"\",\n                    };\n                    _config.data.value = getServer() + arg;\n                    //包裹器添加rxmurl属性\n                    $gridWrap.attr(\"rxmurl\", arg);\n                }\n                else {\n                    arg = $gridWrap.attr(\"rxmurl\");\n                }\n                return arg;\n            };\n            /**\n             * 属性设置 表格数据url传入的参数\n             * 默认为\n             */\n            RxmGridImpl.prototype.attrDataParam = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    //rxmurl处理 判断地址首字符是否添加斜杠 \n                    _config.queryParam = arg;\n                    //包裹器添加rxmparam属性\n                    $gridWrap.attr(\"rxmparam\", arg);\n                }\n                else {\n                    arg = $gridWrap.attr(\"rxmparam\");\n                }\n                return arg;\n            };\n            /**\n             * 行数据是否省略多余字符 属性设置\n             * true 省略多余字符,其他字符用三个点代替,false 换行显示所有内容,默认省略多余字符\n             */\n            RxmGridImpl.prototype.attrTextEllipsis = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    arg = getRadioValue(arg);\n                    _config.textEllipsis = arg;\n                }\n                else {\n                    if ($gridWrap.hasClass(\"rxm-s-grid-ellipsis\")) {\n                        _config.textEllipsis = true;\n                    }\n                    else {\n                        _config.textEllipsis = false;\n                    }\n                }\n                _config.textEllipsis == true ? $gridWrap.addClass(\"rxm-s-grid-ellipsis\") : $gridWrap.removeClass(\"rxm-s-grid-ellipsis\");\n                return _config.textEllipsis;\n            };\n            /**\n             * 属性设置 是否需要工具栏\n             * 默认为 移动桌面端都需要\n             */\n            RxmGridImpl.prototype.attrToolBarExist = function (arg) {\n                var barType = \"rxmmdview\";\n                if (typeof arg != \"undefined\") {\n                    barType = arg;\n                    if (arg !== \"rxmhidden\") {\n                        if ($gridWrap.find(\".rxm-s-grid-toolbar\").length == 0) {\n                            var $tbar = $('<div class=\"rxm-s-grid-toolbar rxm-floated\" rxmtype=\"sublayout\" clsnm=\"rxm-s-grid-toolbar\" rxmname=\"表格工具栏\"> <ul class=\"rxm-cmd-btnbar\" rxmtype=\"container\" clsnm=\"rxm-cmd-btnbar\"><li class=\"rxm-cmd-btn rxm-default-delete\" rxmtype=\"button\" clsnm=\"rxm-cmd-btn\" rxmname=\"删除\"><button class=\"\" rxmcmdid=\"\" title=\"删除\"><i class=\"fa  fa-trash-o\"></i><span>删除</span></button></li><li class=\"rxm-cmd-btn rxm-default-all-select\" rxmtype=\"button\" clsnm=\"rxm-cmd-btn\" rxmname=\"全选\"><button class=\"\" rxmcmdid=\"\" title=\"全选\"><i class=\"fa fa-check\"></i><span>全选</span></button></li><li class=\"rxm-cmd-btn rxm-default-cancel\" rxmtype=\"button\" clsnm=\"rxm-cmd-btn\" rxmname=\"取消\"><button class=\"\" rxmcmdid=\"\" title=\"取消\"><i class=\"fa  fa-close\"></i><span>取消</span></button></li></ul></div>');\n                            if ($gridWrap.find(\".rxm-s-grid-titlebar\").length !== 0) {\n                                $gridWrap.find(\".rxm-s-grid-titlebar\").after($tbar);\n                            }\n                            else {\n                                $gridWrap.after($tbar);\n                            }\n                        }\n                        else {\n                            $gridWrap.find(\".rxm-s-grid-toolbar\").removeClass(\"rxmmdview rxmmview rxmdview\");\n                        }\n                        $gridWrap.find(\".rxm-s-grid-toolbar\").addClass(arg);\n                        $gridWrap.find(\".rxm-s-grid-toolbar\").attr(\"ormgrid\", _config.id);\n                    }\n                    else {\n                        $gridWrap.find(\".rxm-s-grid-toolbar\").remove();\n                    }\n                }\n                else {\n                    if ($gridWrap.find(\".rxm-s-grid-toolbar\").length == 0) {\n                        barType = \"rxmhidden\";\n                    }\n                    else if ($gridWrap.hasClass(\"rxmmview\")) {\n                        barType = \"rxmmview\";\n                    }\n                    else if ($gridWrap.hasClass(\"rxmdview\")) {\n                        barType = \"rxmdview\";\n                    }\n                }\n                return barType;\n            };\n            /**\n             * 工具栏展现样式 属性设置\n             * 悬浮；表格上部\n             */\n            RxmGridImpl.prototype.attrToolBarType = function (arg) {\n                if (typeof arg != \"undefined\") {\n                }\n                else {\n                    if ($gridWrap.find(\".rxm-s-grid-toolbar\").hasClass(\"rxm-floated\")) {\n                        arg = true;\n                    }\n                    else {\n                        arg = false;\n                    }\n                }\n                arg == true ? $gridWrap.find(\".rxm-s-grid-toolbar\").addClass(\"rxm-floated\") : $gridWrap.find(\".rxm-s-grid-toolbar\").removeClass(\"rxm-floated\");\n                return arg;\n            };\n            /**\n             * 行数据序号显示 属性设置\n             * true 显示,false 不显示\n             */\n            RxmGridImpl.prototype.attrRowIndex = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    arg = getRadioValue(arg);\n                    if (arg) {\n                        if ($gridWrap.find(\"th[class~='rxmindex']\").length == 0) {\n                            var $rxmindex = $('<th align=\"center\" class=\"rxmindex noDrag\" width=\"35px\"></th>');\n                            $gridWrap.find(\".rxm-column-container\").prepend($rxmindex);\n                        }\n                    }\n                    else {\n                        $gridWrap.find(\"th[class~='rxmindex']\").remove();\n                    }\n                }\n                else {\n                    if ($gridWrap.find(\"th[class~='rxmindex']\").length == 0) {\n                        arg = false;\n                    }\n                    else {\n                        arg = true;\n                    }\n                }\n                $gridWrap.attr(\"rxmindex\", arg);\n                return arg;\n            };\n            /**\n             * 行数据选中方式 不显示 checkbox或radio 属性设置\n             * 桌面端默认为不显示\n             */\n            RxmGridImpl.prototype.attrRxmmulti = function (arg) {\n                var $multi = $gridWrap.find(\"th[class~='rxmmulti']\");\n                if (typeof arg != \"undefined\") {\n                    if (arg == \"null\") {\n                        $multi.remove();\n                    }\n                    else {\n                        if ($multi.length == 0) {\n                            var $mt = $('<th align=\"center\" class=\"rxmmulti fix noDrag\" width=\"24px\"></th>');\n                            $gridWrap.find(\"th[class~='rxm-grid-column']\").first().before($mt);\n                            if (arg == \"checkbox\") {\n                                if ($multi.find(\"input\").length == 0) {\n                                    var $check = $('<input type=\"checkbox\">');\n                                    $multi.append($check);\n                                }\n                            }\n                            else {\n                                $multi.empty();\n                            }\n                        }\n                        else {\n                            if (arg == \"checkbox\") {\n                                if ($multi.find(\"input\").length == 0) {\n                                    var $check = $('<input type=\"checkbox\">');\n                                    $multi.append($check);\n                                }\n                            }\n                            else {\n                                $multi.empty();\n                            }\n                        }\n                    }\n                }\n                else {\n                    if ($multi.length == 0) {\n                        arg = \"null\";\n                    }\n                    else {\n                        if ($multi.find(\"input\").length == 0) {\n                            arg = \"radio\";\n                        }\n                        else {\n                            arg = \"checkbox\";\n                        }\n                    }\n                }\n                return arg;\n            };\n            /**\n             * 属性设置 最大缓存页数\n             * 默认为\"30\"\n             */\n            RxmGridImpl.prototype.attrCacheMaxLen = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.param.cacheMaxLen = arg;\n                    //包裹器添加cachemaxlen属性\n                    $gridWrap.attr(\"rxmcachemaxlen\", _config.param.cacheMaxLen);\n                }\n                return _config.param.cacheMaxLen;\n            };\n            /**\n             * 属性设置 最大显示页数\n             * 默认为\"10\"\n             */\n            RxmGridImpl.prototype.attrViweMaxLen = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.param.viweMaxLen = arg;\n                    //包裹器添加viwemaxlen属性\n                    $gridWrap.attr(\"rxmviwemaxlen\", _config.param.viweMaxLen);\n                }\n                return _config.param.viweMaxLen;\n            };\n            /**\n             * 属性设置 表格暂无数据提示语\n             * 默认为\"暂无数据！\"\n             */\n            RxmGridImpl.prototype.attrNodataTip = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.refreshTip.nodataTip = arg;\n                    //包裹器添加nodatatip属性\n                    $gridWrap.attr(\"rxmnodatatip\", _config.refreshTip.nodataTip);\n                }\n                return _config.refreshTip.nodataTip;\n            };\n            /**\n             * 属性设置 数据行图标区域宽度\n             * 默认为\"55px\"\n             */\n            RxmGridImpl.prototype.attrRowIconWidth = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.trRowParam.iconWidth = arg;\n                    //包裹器添加rowiconwidth属性\n                    $gridWrap.attr(\"rxmrowiconwidth\", _config.trRowParam.iconWidth);\n                }\n                return _config.trRowParam.iconWidth;\n            };\n            /**\n             * 属性设置 数据行数据字段单个高度\n             * 默认为\"21px\"\n             */\n            RxmGridImpl.prototype.attrRowParHeight = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.trRowParam.parHeight = arg;\n                    //包裹器添加rowparheight属性\n                    $gridWrap.attr(\"rxmrowparheight\", _config.trRowParam.parHeight);\n                }\n                return _config.trRowParam.parHeight;\n            };\n            /**\n             * 属性设置 数据行数据显示div距离上下边距\n             * 默认为\"16px\"\n             */\n            RxmGridImpl.prototype.attrRowDataMargin = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.trRowParam.dataMargin = arg;\n                    //包裹器添加rowdatamargin属性\n                    $gridWrap.attr(\"rxmrowdatamargin\", _config.trRowParam.dataMargin);\n                }\n                return _config.trRowParam.dataMargin;\n            };\n            /**\n             * 属性设置 数据行距离屏幕左右边距\n             * 默认为\"20px\"\n             */\n            RxmGridImpl.prototype.attrRowTrMargin = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.trRowParam.trMargin = arg;\n                    //包裹器添加rowtrmargin属性\n                    $gridWrap.attr(\"rxmrowtrmargin\", _config.trRowParam.trMargin);\n                }\n                return _config.trRowParam.trMargin;\n            };\n            /**\n             * 属性设置 左滑菜单每个选项默认宽度\n             * 默认为\"60px\"\n             */\n            RxmGridImpl.prototype.attrLeftBtnWidth = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.leftSlideParam.btnWidth = arg;\n                    //包裹器添加leftbtnwidth属性\n                    $gridWrap.attr(\"rxmleftbtnwidth\", _config.leftSlideParam.btnWidth);\n                }\n                return _config.leftSlideParam.btnWidth;\n            };\n            /**\n             * 属性设置 左滑出现菜单区域的最小距离值，小于此值则隐藏\n             * 默认为\"60px\"\n             */\n            RxmGridImpl.prototype.attrLeftViewWidth = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.leftSlideParam.viewWidth = arg;\n                    //包裹器添加leftviewwidth属性\n                    $gridWrap.attr(\"rxmleftviewwidth\", _config.leftSlideParam.viewWidth);\n                }\n                return _config.leftSlideParam.viewWidth;\n            };\n            /**\n             * 属性设置 左滑菜单滑动隐藏时间设定\n             * 默认为\"200ms\"\n             */\n            RxmGridImpl.prototype.attrLeftTrAduration = function (arg) {\n                if (typeof arg != \"undefined\") {\n                    _config.leftSlideParam.traDuration = arg;\n                    //包裹器添加lefttraduration属性\n                    $gridWrap.attr(\"rxmleftaduration\", _config.leftSlideParam.traDuration);\n                }\n                return _config.leftSlideParam.traDuration;\n            };\n            RxmGridImpl.prototype._onInsert = function (e, data) {\n                this.refresh();\n            };\n            RxmGridImpl.prototype._onDelete = function (e, data) {\n                this.refresh();\n            };\n            RxmGridImpl.prototype._onUpdate = function (e, data) {\n                this.refresh();\n            };\n            ;\n            /**\n             * 响应ormRereshGridView消息\n             * @param {Object} arg - 参数对象\n             */\n            RxmGridImpl.prototype._onRefreshView = function (arg) {\n                var cf = _config;\n                var baseIndex = (_pageInfo.curPage - 1) * parseInt(_config.pageSize);\n                var begin = cf.param.viewBegin * cf.pageSize;\n                var cacheD = cf.param.data.length;\n                var viewD = (cf.param.viweMaxLen + cf.param.viewBegin) * cf.pageSize;\n                var end = cacheD < viewD ? cacheD : viewD;\n                _viewData = [];\n                var i = 0;\n                //reload 返回数据即画表格，若无数据则提示\"暂无数据！\"\n                if (end > 0) {\n                    for (var j = begin; j < end; j++, i++) {\n                        var item = _config.param.data[j];\n                        item._rxm_baseIndex = i + 1;\n                        item._rxm_baseIndex2 = baseIndex;\n                        _viewData.push(item);\n                    }\n                }\n                this.refresh();\n            };\n            /**\n             * 默认长按事件\n             * @param {Event} e - jquery event对象\n             * @param {Number} data - 下滑距离值\n             */\n            RxmGridImpl.prototype._onPressLine = function (e, d) {\n                var $tr = e.currentTarget;\n                var index = $tBody.find(\"tr\").index($tr);\n                var data = {\n                    \"index\": index,\n                    \"row\": _doc.getRowDataByViewIndexs(index),\n                    \"pageInfo\": _pageInfo\n                };\n                e.data = data;\n                $(e.target).trigger(RxmGridMsg.msgEnum.pressLineElement, data);\n                return false;\n            };\n            /**\n             * 默认点击事件\n             * @param {Event} e - jquery Event对象\n             */\n            RxmGridImpl.prototype._onTapLine = function (e, d) {\n                if (isDesktop(_config.id) && $(e.target)[0].tagName === \"INPUT\") {\n                }\n                else {\n                    var $tr = e.currentTarget;\n                    var index = $tBody.find(\"tr\").index($tr);\n                    var data = {\n                        \"index\": index,\n                        \"row\": _doc.getRowDataByViewIndexs(index),\n                        \"pageInfo\": _pageInfo\n                    };\n                    e.data = data;\n                    $(e.target).trigger(RxmGridMsg.msgEnum.tapLineElement, data);\n                    return false;\n                }\n            };\n            /**\n             * 默认左滑事件\n             * @param {Event} e - jquery Event对象\n             */\n            RxmGridImpl.prototype._onSlideLine = function (e, d) {\n                var $tr = e.currentTarget;\n                var index = $tBody.find(\"tr\").index($tr);\n                var data = {\n                    \"index\": index,\n                    \"row\": _doc.getRowDataByViewIndexs(index),\n                    \"pageInfo\": _pageInfo\n                };\n                e.data = data;\n                $(e.target).trigger(RxmGridMsg.msgEnum.slideInLine, data);\n                return false;\n            };\n            /**\n             * 下滑至顶部，从开始至结束持续监听动态设置 $gridContent top值\n             * @param {Event} e - jquery Event对象\n             * @param {Number} data - 下滑距离值\n             */\n            RxmGridImpl.prototype._onSwipeInTop = function (e, data) {\n                //1.共xx页，松手获取第x页面\n                //2.查看是否是第一页，如果是第一页，显示 ‘松手刷新数据’\n                $topRefreshbar.empty();\n                $topRefreshbar.css(\"height\", \"40px\");\n                this.renderTopRefreshbar();\n                $topRefreshbar.css(\"display\", \"\");\n                //阻尼设置为0.3\n                $gridContent.css(\"top\", data * 0.3);\n                if (data * 0.3 > 25) {\n                    var $loading = $('<img class = \"rxm-top-loading-arrow\" src=\"' + _upArrowImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + _config.refreshTip.topTipRefresh + '</span>');\n                    $topRefreshbar.empty().append($loading);\n                }\n            };\n            /**\n             * 上滑至底部，从开始至结束持续监听  动态设置 $gridContent top值\n             * @param {Event} e - jquery Event对象\n             * @param {Number} data - 滑动位置数据对象\n             */\n            RxmGridImpl.prototype._onSwipeInBottom = function (e, data) {\n                //1.共xx页，松手获取第x页面\n                //2.查看是否是最后一页，如果是最后一页，显示 ‘已经是全部内容’\n                var the = this;\n                //非最后一页,继续reload数据\n                if (!this._isLastPage()) {\n                    //显示底部刷新栏\n                    $bottomRefreshbar.css(\"display\", \"\");\n                    this.reload({\n                        data: { type: _config.data.type, value: _config.data.value },\n                        totalPage: -2,\n                        type: \"bottom\",\n                        loadComplete: function () {\n                            $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottomAfter);\n                        }\n                    });\n                }\n                else {\n                    //最后一页数据,不调用reload方法,直接显示“没有更多了”\n                    $bottomRefreshbar.css(\"display\", \"\");\n                    setTimeout(function () {\n                        $bottomRefreshbar.empty();\n                        var $loading = $('<span>' + _config.refreshTip.bottomTipEnd + '</span>');\n                        $loading.appendTo($bottomRefreshbar);\n                        $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                            $gridContent.stop(true);\n                            $bottomRefreshbar.empty();\n                            the.renderBottomRefreshbar();\n                            $bottomRefreshbar.css(\"display\", \"none\");\n                            $bottomRefreshbar.css(\"bottom\", \"45px\");\n                        });\n                    }, 500);\n                    $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInBottomAfter);\n                }\n            };\n            /**\n             * 上滑至底部后需要进行的操作\n             */\n            RxmGridImpl.prototype._onSwipeInBottomAfter = function () {\n                //TODO\n            };\n            /**\n             * 下滑至顶部结束后需要进行的操作\n             */\n            RxmGridImpl.prototype._onSwipeInTopEndAfter = function () {\n                //TODO\n            };\n            /**\n             * 下滑至顶部开始\n             */\n            RxmGridImpl.prototype._onSwipeInTopBegin = function () {\n                //TODO\n            };\n            /**\n             * 上滑至底部开始\n             */\n            RxmGridImpl.prototype._onSwipeInBottomBegin = function () {\n                //TODO\n            };\n            /**\n             * 下滑至顶部结束\n             * @param {Event} e - jquery Event对象\n             * @param {Number} data - 滑动位置数据对象\n             */\n            RxmGridImpl.prototype._onSwipeInTopEnd = function (e, data) {\n                //1.当前的cacheBegin是 1时，刷新全部数据\n                //2.当前的cacheBegin 大于1时 取-1 ；\n                //3.松手后，应该显示获取动作，直到ajax返回数据\n                var the = this;\n                var prePageFlag = _config.param.cacheBegin == 1 ? 1 : -1;\n                if (this._isFirstPage()) {\n                    $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                        $gridContent.stop(true);\n                        $topRefreshbar.empty();\n                        var $loading = $('<span class=\"rxm-grid-loading\"/>&nbsp;&nbsp;&nbsp;<span>' + _config.refreshTip.topTipLoading + '</span>');\n                        $loading.appendTo($topRefreshbar);\n                        //  $topRefreshbar.css(\"display\",\"none\");\n                        the.reload({\n                            totalPage: 1, loadComplete: function (data) {\n                                setTimeout(function () {\n                                    $gridContent.stop(true);\n                                    $topRefreshbar.empty();\n                                    var $loading;\n                                    if (data.status === \"sucsess\") {\n                                        $loading = $('<span>' + _config.refreshTip.topTipSuccess + '</span>');\n                                    }\n                                    else {\n                                        $loading = $('<span>' + _config.refreshTip.topTipError + '</span>');\n                                    }\n                                    $loading.appendTo($topRefreshbar);\n                                    $topRefreshbar.animate({ height: '0px' }, \"400\");\n                                }, 300);\n                                $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTopEndAfter);\n                            }\n                        });\n                    });\n                }\n                else {\n                    $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                        $gridContent.stop(true);\n                        $topRefreshbar.empty();\n                        var $loading = $('<img class=\"rxm-top-loading-img\" src=\"' + _loadingImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + _config.refreshTip.topTipLoading + '</span>');\n                        $loading.appendTo($topRefreshbar);\n                        //$topRefreshbar.css(\"display\",\"none\");\n                        $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                            $gridContent.stop(true);\n                            $topRefreshbar.empty();\n                            var $loading = $('<img class=\"rxm-top-loading-img\" src=\"' + _loadingImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + _config.refreshTip.topTipBegin + '</span>');\n                            $loading.appendTo($topRefreshbar);\n                            the.reload({ totalPage: prePageFlag });\n                            $topRefreshbar.css(\"display\", \"none\");\n                        });\n                    });\n                    $gridWrap.trigger(RxmGridMsg.msgEnum.swipeInTopEndAfter);\n                }\n                _startYMove = 0;\n            };\n            /**\n             * 上滑至底部结束，初始化_startYMove值为0\n             */\n            RxmGridImpl.prototype._onSwipeInBottomEnd = function () {\n                _startYMove = 0;\n            };\n            /**\n             * 判断表格滚动条到顶(下拉刷新)\n             * @returns {Boolean} - 到顶状态值\n             */\n            RxmGridImpl.prototype._isOnTop = function () {\n                //滚动到的当前位置\n                var scroHeight = $tableBody.scrollTop();\n                //ios的scroHeight到顶判断为负值 安卓scroHeight为0\n                if (scroHeight <= 0 && _config.param.viewBegin == 0) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            };\n            /**\n             * 判断表格滚动条到底(上拉分页)\n             * @returns {Boolean} - 到底状态值\n             */\n            RxmGridImpl.prototype._isOnBottom = function () {\n                //滚动距离总长(注意不是滚动条的长度)\n                var scrollHight = $tableBody[0].scrollHeight;\n                //滚动到的当前位置\n                var scrollTop = $tableBody.scrollTop();\n                //$tableBody高度\n                var tableHight = $tableBody.height();\n                if ((scrollTop + tableHight >= scrollHight)) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            };\n            /**\n             * 判断分页是否为最后一页数据(上拉分页)\n             * @returns {Boolean} - 最后一页状态值\n             */\n            RxmGridImpl.prototype._isLastPage = function () {\n                //计算总页数\n                _doc._pageInfo.pageCount = Math.ceil(_doc._pageInfo.dataCount / _config.pageSize);\n                //计算当然数组数据条目数\n                var caheLength = Math.ceil(_config.param.data.length / _config.pageSize) + _config.param.cacheBegin;\n                if (_doc._pageInfo.pageCount < caheLength) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            };\n            /**\n             * 判断内存中是否为内存中的首页数据(下拉刷新)\n             * @returns {Boolean} - 第一页状态值\n             */\n            RxmGridImpl.prototype._isFirstPage = function () {\n                if (this._isOnTop() && _config.param.cacheBegin == 1) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            };\n            /**\n             * 判断是否通过html属性配置生成表格\n             * @returns {Boolean} - 状态值\n             */\n            RxmGridImpl.prototype._isHtmlAttrCfg = function () {\n                if ($gridWrap.find(\".rxm-table-head\").length != 0) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            };\n            /**\n             * 重置左滑按钮区域处于隐藏状态\n             * @param {Object} $obj - 左滑行对象\n             */\n            RxmGridImpl.prototype._resetStatus = function ($obj) {\n                $obj.css('-webkit-transform', 'translate3d(0px, 0px, 0px)');\n            };\n            /**\n             * 设定左滑菜单过渡效果参数\n             * @param {Object} $obj - 左滑行对象\n             */\n            RxmGridImpl.prototype._setTransition = function ($obj) {\n                var the = this;\n                $obj.css({\n                    '-webkit-transition-property': '-webkit-transform',\n                    '-webkit-transition-duration': _config.leftSlideParam.traDuration + \"ms\",\n                    '-webkit-transition-timing-function': _config.leftSlideParam.traFunction\n                });\n            };\n            ;\n            /***************************************************** 桌面版表格函数 ********************************************************/\n            /**\n             * 渲染PC端表格行数据(可重写)\n             * @param {Object} row - 行数据\n             * @param {Object} $tr - 行数据\n             * @param {Number} rowIndex - 行索引\n             * @param {Number} baseIndex - true克隆数据，undefined，false 返回 view 数据此为默认\n             * @returns {Object} $tr - 表格行对象 jquery对象\n             */\n            RxmGridImpl.prototype.createRowInPc = function (row, $tr, rowIndex, baseIndex) {\n                var _index = rowIndex || (function guid() {\n                    function s4() {\n                        return Math.floor((1 + Math.random()) * 0x10000)\n                            .toString(16)\n                            .substring(1);\n                    }\n                    return s4() + s4() + '' + s4() + '' + s4() + '' +\n                        s4() + '' + s4() + s4() + s4();\n                })();\n                //console.log(_index);\n                $tr.data(\"index\", _index);\n                row[\"_index\"] = _index;\n                if (!!_config.index) {\n                    $tr.append('<td align=\"center\" class=\"rxmindex\" width=\"35px\">' + (rowIndex + baseIndex) + '</td>');\n                }\n                if (typeof _config.multi != \"undefined\") {\n                    $tr.append('<td align=\"center\" class=\"fix\" width=\"24px\"><input type=\"' + (_config.multi ? 'checkbox' : 'radio') + '\" name=\"rxm-s-gird-multi-' + (_config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '></td>');\n                }\n                var _loop_1 = function (j, item, $td) {\n                    var tdValue = row[item.field];\n                    //format重写函数名称定义\n                    var formatFun = \"format\" + item.field;\n                    //表格config对象中layout中数据format处理\n                    if (item.format) {\n                        tdValue = item.format({ \"row\": row });\n                    }\n                    //重写format函数\n                    var the = this_1;\n                    if ($.isFunction(the[formatFun])) {\n                        tdValue = the[formatFun](row);\n                    }\n                    tdValue = (tdValue || tdValue == 0) ? tdValue : \"\";\n                    $td = $('<td class=\"' + _config.id + '-' + item.field + '\"' + (item.align ? ' align=\"' + item.align + '\"' : '') + '></td>');\n                    //td添加点击效果样式\n                    if (item.rxmtap) {\n                        $td.addClass(\"rxm-click-style\");\n                    }\n                    item.click ? function () {\n                        $td.append('<a' + (item.field ? ' class=\"' + item.field + '\"' : '') + '></a>');\n                        $td.children(\"a\").append(tdValue);\n                    }() : $td.append(tdValue);\n                    $tr.append($td);\n                    out_$td_1 = $td;\n                };\n                var this_1 = this, out_$td_1;\n                for (var j = 0, item = void 0, $td = void 0; item = _config.layout[j++];) {\n                    _loop_1(j, item, $td);\n                    $td = out_$td_1;\n                }\n                $tr.children(\"td\").each(function () {\n                    $(this).attr(\"title\", $(this).text());\n                });\n                return $tr;\n            };\n            /**\n             * 桌面端 加载视图内所有属性（表格、标题栏、工具栏、搜索栏、分页栏)\n             */\n            RxmGridImpl.prototype._renderPc = function () {\n                //行高\n                var trHeight = 40;\n                //清空表格包裹器\n                $gridWrap.addClass(\"rxm-s-grid\");\n                //添加隐藏多余字符样式\n                _config.textEllipsis && $gridWrap.addClass(\"rxm-s-grid-ellipsis\");\n                //判断html文件中是否存在定制titlebar\n                if ($gridWrap.find(\".rxm-s-grid-titlebar\").length == 0) {\n                    this._renderTitleBarPc();\n                }\n                //判断html文件中是否存在定制searchbar\n                if ($gridWrap.find(\".rxm-s-grid-searchbar\").length == 0) {\n                    this._renderSearchBarPc();\n                }\n                //判断html文件中是否存在定制toolbar\n                if ($gridWrap.find(\".rxm-s-grid-toolbar\").length == 0) {\n                    this._renderToolbarPc();\n                }\n                else {\n                    //工具栏默认按钮事件绑定\n                    this._setDefalToolbarEvent();\n                }\n                //判断html文件中是否存在定制表格\n                if ($gridWrap.find(\".rxm-s-grid-content\").length == 0) {\n                    this._renderContentPc();\n                }\n                else {\n                    //行事件绑定\n                    this._setTableRowEvent();\n                    //表头全选checkbox点击事件绑定\n                    this._setTableHeadEvent();\n                }\n                //判断html文件中是否存在定制分页栏\n                if ($gridWrap.find(\".rxm-s-grid-pagination\").length == 0) {\n                    this._renderPaginationPc();\n                }\n                else {\n                    //设置分页数初始值\n                    this._setPaginationSize();\n                }\n                //设置表格高度 如果设置表格高速则直接使用设置高度 \n                /**\n                 * 设置表格rxm-table-body高度\n                 * 1、如果直接配置高度则直接使用设置高度\n                 * 2、如果没有设置表格高度，但是设置分页，表格高度则是分页行数的高度\n                 * 3、如果没有设置高度、也没有分页，则表格根据数据条目数据自动填充\n                 */\n                if (!!_config.height) {\n                    _wrapHeight = _config.height;\n                    $gridWrap.find(\".rxm-table-body\").css(\"height\", _config.height);\n                }\n                else if (!_config.height && _config.pagination) {\n                    var temp = _config.pageSize * trHeight;\n                    _wrapHeight = temp.toString();\n                    $gridWrap.find(\".rxm-table-body\").css(\"height\", _wrapHeight);\n                }\n                else {\n                    $gridWrap.find(\".rxm-table-body\").css(\"height\", \"auto\");\n                }\n                //绑定刷新函数  doc中_refresh()函数激发\n                $gridWrap.on(RxmGridMsg.msgEnum.ormRereshGridView, $.proxy(this._onRefreshView, this));\n            };\n            /**\n             * 桌面端 渲染表格\n             */\n            RxmGridImpl.prototype._renderTablePc = function () {\n                //清空表格中行数据\n                var $table = $gridWrap.find(\".rxm-s-grid-table\").empty();\n                $table.append('<div class=\"rxm-table-head\"><table onselectstart=\"return false;\" class=\"rxm-table rxm-table-hover\"><thead></thead></table><div class=\"dragTrigger\"></div></div>');\n                //var style = 'style=\"overflow-x:hidden;overflow-y:auto;' + (_config.height && \"height:\" + _config.height) + '\"';\n                var $tableBody = $('<div class=\"rxm-table-body\"><table class=\"table rxm-table-hover\"><thead></thead><tbody></tbody></table></div>');\n                $table.append($tableBody);\n                var _tBodyHeight = _calTableBodyHeight();\n                $gridWrap.find(\".rxm-table-body\").css(\"height\", _tBodyHeight);\n                $gridWrap.find(\".rxm-table-body\").css(\"overflow-x\", \"hidden\");\n                $gridWrap.find(\".rxm-table-body\").css(\"overflow-y\", \"auto\");\n                this._setTableRowEvent();\n                this._renderTableHeadPc();\n            };\n            /**\n             * 桌面端 渲染表格头部\n             */\n            RxmGridImpl.prototype._renderTableHeadPc = function () {\n                var $tableHead = $gridWrap.find(\".rxm-s-grid-table table thead\").empty();\n                var html = \"\";\n                //渲染索引表头\n                if (!!_config.index) {\n                    html += '<th align=\"center\" class=\"rxmindex noDrag\" width=\"35px\"></th>';\n                }\n                //渲染checkbox表头\n                if (typeof _config.multi != \"undefined\") {\n                    html += '<th align=\"center\" class=\"fix noDrag\" width=\"24px\">' + (_config.multi ? '<input type=\"checkbox\">' : '') + '</th>';\n                }\n                var layout = _config.layout;\n                for (var i = 0, item; item = layout[i++];) {\n                    var width = (item.width ? \"width:\" + item.width + \";\" : \"width:\" + (100 / layout.length + '%') + \";\");\n                    var align = (item.align ? \"text-align:\" + item.align + \";\" : \"\");\n                    var style = 'style=\"' + align + ' ' + width + '\"';\n                    html += '<th ' + style + ' class=\"' + item.field + '\" title=\"' + item.name + '\">' + item.name + (item.sort ? '<i class=\"fa fa-sort\"></i>' : '') + '</th>';\n                }\n                $tableHead.append('<tr>' + html + '</tr>');\n                $gridWrap.find(\".rxm-s-grid-table .rxm-table-body thead th\").removeAttr(\"title\").empty();\n                //表头全选checkbox点击事件绑定\n                this._setTableHeadEvent();\n            };\n            /**\n             * 桌面端 表格行事件绑定\n             */\n            RxmGridImpl.prototype._setTableRowEvent = function () {\n                //点击事件绑定  这个需要认真斟酌\n                $tBody = $gridWrap.find(\".rxm-s-grid-table .rxm-table-body tbody\");\n                $tBody.tap(\"tr\", $.proxy(this._onTapLine, this));\n                var clkFun;\n                var aFun;\n                var aFunClass;\n                for (var i = 0; i < _config.rowevent.length; i++) {\n                    if (!!_config.rowevent[i].click) {\n                        clkFun = _config.rowevent[i].click;\n                    }\n                }\n                for (var i = 0; i < _config.layout.length; i++) {\n                    if (!!_config.layout[i].click) {\n                        aFun = _config.layout[i].click;\n                        aFunClass = \".\" + _config.layout[i].field;\n                    }\n                }\n                //绑定数据列表配置的所有事件\n                if (!!clkFun) {\n                    this.bindTapLineElement({ fn: clkFun }, this);\n                }\n                if (!!aFun) {\n                    this.bindTapLineElement({ selector: aFunClass, fn: aFun }, this);\n                }\n            };\n            /**\n             * 桌面端 表头全选checkbox点击事件绑定\n             */\n            RxmGridImpl.prototype._setTableHeadEvent = function () {\n                var $tHead = $gridWrap.find(\".rxm-s-grid-table .rxm-table-head thead\"), _$tBody = $gridWrap.find(\".rxm-s-grid-table .rxm-table-body tbody\");\n                $tHead.tap(\"th\", function (event) {\n                    var nodeName = event.target.nodeName;\n                    if (nodeName == \"INPUT\") {\n                        var checked = $(event.target).is(\":checked\");\n                        _$tBody.find(\"input\").each(function () {\n                            if (checked) {\n                                this.checked = true;\n                            }\n                            else {\n                                $(this).removeAttr(\"checked\");\n                            }\n                        });\n                    }\n                });\n            };\n            /**\n             * 渲染表格标题栏\n             */\n            RxmGridImpl.prototype._renderTitleBarPc = function () {\n                $gridWrap.append($('<div class=\"rxm-s-grid-titlebar\"></div>'));\n                $gridWrap.find(\".rxm-s-grid-titlebar\").css(\"display\", \"none\");\n                if (_config.title) {\n                    $titlebar.css(\"display\", \"\");\n                    $titlebar.empty().append(_config.title);\n                }\n            };\n            /**\n             * 渲染表格搜索栏\n             */\n            RxmGridImpl.prototype._renderSearchBarPc = function () {\n                $gridWrap.append($('<div class=\"rxm-s-grid-searchbar\"></div>'));\n                $gridWrap.find(\".rxm-s-grid-searchbar\").css(\"display\", \"none\");\n                if (!!_config.searchbar) {\n                    $searchbar.css(\"display\", \"\");\n                }\n            };\n            /**\n             * 桌面端 渲染表格工具栏\n             */\n            RxmGridImpl.prototype._renderToolbarPc = function () {\n                $gridWrap.append($('<div class=\"rxm-s-grid-toolbar\"></div>'));\n                $toolbar = $gridWrap.find(\".rxm-s-grid-toolbar\");\n                $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n                //通过config对象生成工具栏\n                if (!!_config.toolbar && _config.toolbar.length > 0) {\n                    $toolbar.css(\"display\", \"block\");\n                    var $ul = $(\"<ul style='width:100%'></ul>\");\n                    for (var i = 0, length = _config.toolbar.length; i < length; i++) {\n                        var item = _config.toolbar[i];\n                        var $li = $('<li></li>');\n                        $li.tap(this, item.callback);\n                        $li.attr(\"style\", item.style);\n                        var $a = $('<a></a>');\n                        var $i = $('<i></i>');\n                        $i.attr(\"class\", item.icon);\n                        $i.appendTo($a);\n                        $a.append(item.name);\n                        $a.appendTo($li);\n                        $li.appendTo($ul);\n                    }\n                    $toolbar.empty().append($ul);\n                    //表格工具栏默认按钮事件绑定\n                    this._setDefalToolbarEvent();\n                }\n            };\n            ;\n            /**\n             * 桌面端 表格工具栏默认按钮事件绑定\n             */\n            RxmGridImpl.prototype._setDefalToolbarEvent = function () {\n                //获取所有按钮，判断是否有默认值定义\n                var liBtn = $gridWrap.find(\".rxm-s-grid-toolbar ul li\");\n                //包裹器html中默认定义三个按钮  删除、全选、取消\n                if (liBtn.length > 0) {\n                    for (var i = 0; i < liBtn.length; i++) {\n                        if ($(liBtn[i]).is(\".rxm-default-delete\")) {\n                            $(liBtn[i]).tap($.proxy(this.bindDeleteBtn, this));\n                        }\n                        if ($(liBtn[i]).is(\".rxm-default-all-select\")) {\n                            $(liBtn[i]).tap($.proxy(this.bindSelectAllBtn, this));\n                        }\n                        if ($(liBtn[i]).is(\".rxm-default-cancel\") && appTool.isMobileOpen()) { //判断是否在移动端\n                            $(liBtn[i]).tap($.proxy(this.bindCancelBtn, this));\n                        }\n                    }\n                }\n            };\n            /**\n             * 桌面端 渲染表格数据包裹器\n             */\n            RxmGridImpl.prototype._renderContentPc = function () {\n                $gridWrap.append($('<div class=\"rxm-s-grid-content\"><div class=\"rxm-s-grid-table\"></div></div>'));\n                this._renderTablePc();\n            };\n            ;\n            /**\n             * 桌面端 渲染表格分页区域\n             */\n            RxmGridImpl.prototype._renderPaginationPc = function () {\n                $gridWrap.append($('<div class=\"rxm-s-grid-pagination\"></div>'));\n                $pagination = $gridWrap.find(\".rxm-s-grid-pagination\");\n                $pagination.css(\"display\", \"none\");\n                if (!_config.pagination) {\n                    $pagination.empty().hide();\n                }\n                else {\n                    $pagination.empty().show();\n                    //render pagination\n                    $pagination.append($('<a title=\"第一页\" class=\"GoToFirst\"><i class=\"glyphicon glyphicon-step-backward\"></i></a>' +\n                        '<a title=\"上一页\" class=\"GoToPrev\"><i class=\"glyphicon glyphicon-chevron-left\"></i></a>' +\n                        '<span class=\"rxm-cur-page\"><input type=\"text\" value=\"\"/></span>' +\n                        '<a title=\"下一页\" class=\"GoToNext\"><i class=\"glyphicon glyphicon-chevron-right\"></i></a>' +\n                        '<a title=\"最后一页\" class=\"GoToEnd\"><i class=\"glyphicon glyphicon-step-forward\"></i></a>'));\n                    $pagination.append($('<a title=\"刷新\" class=\"refresh\"><i class=\"glyphicon glyphicon-refresh\"></i></a>'));\n                    $pagination.append($('<span class=\"rxm-data-count\">共<i class=\"rxm-num\"></i>条</span>'));\n                    var $select = $('<select></select>');\n                    var pageList = [5, 10, 15, 20, 50, 100];\n                    for (var i = 0; i < pageList.length; i++) {\n                        $select.append('<option value=\"' + pageList[i] + '\">' + pageList[i] + '</option>');\n                    }\n                    $pagination.append($('<span class=\"rxm-page-size\">每页' + $select.clone().wrap('<div/>').parent().html() + '条</span>'));\n                    //设置分页数初始值\n                    this._setPaginationSize();\n                }\n            };\n            /**\n             * 桌面端 表格分页区域设置初始分页数\n             */\n            RxmGridImpl.prototype._setPaginationSize = function () {\n                $pagination = $gridWrap.find(\".rxm-s-grid-pagination\");\n                $pagination.find(\".rxm-page-size select\").val(_config.pageSize);\n            };\n            /**\n             * 桌面端 表格分页区域数据初始化\n             */\n            RxmGridImpl.prototype._setPaginationDataEvent = function () {\n                var the = this;\n                //计算总页数\n                _doc._pageInfo.pageCount = Math.ceil(_doc._pageInfo.dataCount / _config.pageSize);\n                //当前页码input框赋值\n                $pagination.find(\".rxm-cur-page input\").val(_pageInfo.curPage);\n                //数据总数量\n                $pagination.find(\".rxm-data-count .rxm-num\").text(_pageInfo.dataCount);\n                //设置分页 上一页、下一页图标可点击状态  \n                this._setPaginationStatus();\n                if (!$pagination.data(\"bindEvent\")) {\n                    $pagination.tap(\"a\", function () {\n                        if ($(this).is(\".disable\")) {\n                            return false;\n                        }\n                        var className = this.className.split()[0];\n                        var type = className.substring(4);\n                        if (className.indexOf(\"GoTo\") > -1) {\n                            var curPage = _pageInfo.curPage;\n                            var pageCount = _pageInfo.pageCount;\n                            switch (type) {\n                                case 'First':\n                                    _pageInfo.curPage = 1;\n                                    _config.param.viewBegin = 0;\n                                    break;\n                                case 'End':\n                                    _pageInfo.curPage = pageCount;\n                                    _config.param.viewBegin = 0;\n                                    break;\n                                case 'Prev':\n                                    if (curPage <= 1) {\n                                        return false;\n                                    }\n                                    _config.param.viewBegin--;\n                                    if (_config.param.viewBegin <= 0) {\n                                        _config.param.viewBegin = 0;\n                                    }\n                                    _pageInfo.curPage = curPage - 1;\n                                    break;\n                                case 'Next':\n                                    if (curPage >= pageCount) {\n                                        return false;\n                                    }\n                                    _pageInfo.curPage = curPage + 1;\n                                    if (_config.param.viewBegin >= pageCount) {\n                                        _config.param.viewBegin = pageCount;\n                                    }\n                                    else {\n                                        _config.param.viewBegin++;\n                                    }\n                                    break;\n                            }\n                        }\n                        else if (className != \"refresh\" && className != \"rxm-cur-page\") {\n                            _pageInfo.curPage = parseInt($(this).text());\n                        }\n                        else if (className == \"refresh\") {\n                            the.reload();\n                        }\n                        if (type == \"Prev\") {\n                            the.reload({\n                                totalPage: -1,\n                                deskCurPage: _pageInfo.curPage\n                            });\n                        }\n                        else if (type == \"Next\") {\n                            the.reload({\n                                totalPage: -2,\n                                deskCurPage: _pageInfo.curPage\n                            });\n                        }\n                        else {\n                            the.reload({\n                                totalPage: _pageInfo.curPage\n                            });\n                        }\n                    }).on(\"keydown\", \"input\", function (e) {\n                        if (e.which != 13) {\n                            return true;\n                        }\n                        var curPage = Math.min($(this).val() * 1, _pageInfo.pageCount);\n                        _pageInfo.curPage = curPage > 0 ? curPage : 1;\n                        //the.refresh();\n                        the.reload({\n                            totalPage: _pageInfo.curPage\n                        });\n                    }).on(\"tap\", \"input\", function () {\n                        //$(this).select();\n                    }).on(\"blur\", \"input\", function () {\n                        //$(this).val(_pageInfo.curPage);\n                        var curPage = Math.min($(this).val() * 1, _pageInfo.pageCount);\n                        _pageInfo.curPage = curPage > 0 ? curPage : 1;\n                        //the.refresh();\n                        the.reload({\n                            totalPage: _pageInfo.curPage\n                        });\n                    }).on(\"change\", \"select\", function () {\n                        _config.pageSize = $(this).val() * 1;\n                        _pageInfo.curPage = 1;\n                        //the.refresh();\n                        the.reload({\n                            totalPage: _pageInfo.curPage\n                        });\n                    });\n                    $pagination.data(\"bindEvent\", true);\n                }\n            };\n            /**\n             * 桌面端 表格分页区域数据初始化\n             */\n            RxmGridImpl.prototype._setPaginationStatus = function () {\n                $pagination.children(\"a.disable\").removeClass(\"disable\");\n                if (_pageInfo.dataCount <= _config.pageSize) {\n                    $pagination.children(\"a\").not(\".refresh\").addClass(\"disable\");\n                }\n                if (_pageInfo.curPage == 1) {\n                    $pagination.children(\"a.GoToFirst,a.GoToPrev\").addClass(\"disable\");\n                }\n                else if (_pageInfo.curPage == _pageInfo.pageCount) {\n                    $pagination.children(\"a.GoToEnd,a.GoToNext\").addClass(\"disable\");\n                }\n            };\n            /**\n             * 表格初始化函数 调用reload生成表格\n             */\n            RxmGridImpl.prototype._gridInit = function () {\n                //设置分页,默认绑定上滑下滑手势\n                if (_config.pagination) {\n                    this.bindSwipeInTop(true, this);\n                    this.bindSwipeInTopEnd(true, this);\n                    this.bindSwipeInBottom(true, this);\n                    this.bindSwipeInBottomEnd(true, this);\n                }\n                //长按事件绑定\n                // this.bindPressLineElement({\n                //     fn: function (this: any, evt: any, data: any) {\n                //         //初始化长按多选按钮\n                //         this.initPress();\n                //         this.checkRow(data.index);\n                //     }\n                // }, this);\n                //buffer\n                $.isArray(_config.data) && _config.data.length > 0 && this.reload(_config.data);\n                //ajax\n                $.isString(_config.data) && _config.data.length > 0 && this.reload(_config.data);\n                //兼容原有表格\n                _config.data instanceof Object && this.reload(_config.data);\n            };\n            return RxmGridImpl;\n        }());\n        var ret = thisObj(_id, new RxmGridImpl());\n        var rrr = window;\n        rrr.require('RxmPageBase').bindPageReady({ callback: $.proxy(ret._gridInit, ret), one: true });\n        return ret;\n    };\n    return ClsFactory;\n});\n","define(\"RxmIconList\", [\"require\", \"exports\", \"RxmArtTemplate\", \"RxmPageBase\", \"RxmAppTool\"], function (require, exports, ArtTemplate, PageBase, appTool) {\n    \"use strict\";\n    ///<amd-dependency path=\"RxmArtTemplate\" name=\"ArtTemplate\"/>\n    /**\n     * 引入类声明公共方法\n     * @type {rxm.AppTool}\n     * */\n    var thisObj = appTool.thisObj;\n    /**\n     * 组件默认值\n     * @type String\n     */\n    var clsdef = {\n        data: [{\n                \"categoryTitle\": \"导航\",\n                \"listData\": []\n            }],\n        isExpand: true,\n        rxmPath: 'RxmIconList',\n        clsName: 'rxm-icon-list',\n        juryFn: 'rxmBufferGrid',\n    };\n    /**\n     * @param  {rxm.iconlist.cnf} config\n     */\n    var ClassFactory = function (config) {\n        //查找已有iconList实例，有则直接返回\n        if (thisObj(config.id)) {\n            return thisObj(config.id);\n        }\n        //消息唯一ID，保证不同实例消息不冲突\n        var messageId = appTool.uuid();\n        //组件参数设置\n        var settings = $.extend(clsdef, config);\n        //组件实例唯一ID\n        var _id = settings.id;\n        //组件数据\n        var _data = settings.data;\n        //组件容器DOM\n        var _$wrapDom = $('#' + _id);\n        //触摸时的坐标\n        var startX, startY;\n        //滑动的距离\n        var x, y;\n        //设一个全局变量记录上一次内部块滑动的位置\n        var aboveY = 0;\n        //初始化按钮data\n        _$wrapDom.data('selectedData' + _id, []);\n        //组件头部\n        var _$headers = function () {\n            return _$wrapDom.find('.rxm-icon-list-header');\n        };\n        //组件外层包裹器\n        var _$wrapContainer = function (me) {\n            return (me.attrListType() == 'iconlist') ? _$wrapDom : _$wrapDom.find('.rxm-icon-list-desktop');\n        };\n        //iconlist组件内容包裹器\n        var _$wrapContent = function () {\n            return _$wrapDom.find('.rxm-icon-list-content');\n        };\n        //组件渲染入口\n        var _render = function () {\n            /**@type {IconList} */\n            var me = thisObj(_id);\n            if (me.render)\n                return me.render(_data);\n            /**@type {Cls} */\n            //用模板渲染页面HTML\n            var iconListHTML = ArtTemplate(me.attrTemplateId(), { data: _data });\n            $('#' + _id).html(iconListHTML);\n            if (me.attrListType() == \"iconlist\") {\n                //是否开启展开功能\n                if (me.attrIsExpand()) {\n                    me.addExpend();\n                }\n                else {\n                    me.removeExpand();\n                }\n                //添加移动端事件监听\n                //me.addMobileListener();\n                //添加或者删除分割线\n                me.setSeperateLine();\n                //单选，多选功能\n                me.setSelectIconlist();\n                //修正flex布局\n                me._flexCenterFix();\n            }\n            else if (me.attrListType() == \"desktop\") {\n                me.initFixedHeader();\n                me.setSelectDesktop();\n                $('#rxmdk_debug_simulator').onresize = function () {\n                    me.initFixedHeader();\n                };\n            }\n        };\n        var IconList = /** @class */ (function () {\n            function IconList() {\n            }\n            /**\n              * 功能初始化\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.init = function () {\n                var url = this.attrUrl();\n                if (url && typeof url == 'string') {\n                    url = getServer() + '/' + url;\n                    $.ajax({\n                        url: url,\n                        dataType: 'json',\n                        type: 'get',\n                        success: function (data) {\n                            _data = data;\n                            _render();\n                        }, error: function (e) {\n                            console.error(e);\n                        }\n                    });\n                }\n                else if (_data) {\n                    _render();\n                }\n            };\n            /**\n              * 添加新icon\n              * 要求格式\n              * {\n                    \"title\": \"文本域\",\n                    \"iconClass\":\"icon iconfont icon-RectangleCopy9\",\n                    \"id\":\"button9\" ,\n                    \"categoryTitle\":\"表单项\",\n                    \"href\":\"http://www.baidu.com\",\n                    \"selected\": \"true\"\n                }\n              * @param {Sting} value\n              */\n            IconList.prototype.addIcon = function (iconData) {\n                this.storeData(iconData);\n                var $li = $('<li><i class=\"' + iconData.iconClass + '\" style=\"font-size: 20px\"></i><span class=\"anticon-class\">' + iconData.title + '</span></li>');\n                $li.attr('title', iconData.comment);\n                $li.attr('id', iconData.id);\n                $li.attr('class', 'rxm-icon-list-item rxm-icon-list-item-hoverDefault');\n                _$wrapDom.find('ul[type=' + iconData.categoryTitle + '] li').last().after($li);\n                this._flexCenterFix();\n                var a = {\n                    originalEvent: event,\n                    data: iconData\n                };\n                $('rxmiconadded' + messageId).rxmTriggerCmd(a);\n            };\n            /**\n              * 删除指定ID的icon\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.removeIcon = function (id) {\n                this.deleteData(id);\n                _$wrapDom.find('#' + id).remove();\n                this._flexCenterFix();\n                //消息激发\n                var a = {\n                    originalEvent: event,\n                    data: id\n                };\n                $('rxmiconremove' + messageId).rxmTriggerCmd(a);\n            };\n            /**\n              * 设置选择状态\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.setSelectIconlist = function () {\n                var me = this;\n                //寻找选中节点\n                var _findClickedLi = function (event) {\n                    if (event.target.nodeName.toLowerCase() == 'li') {\n                        return event.target;\n                    }\n                    else if (event.target.nodeName.toLowerCase() == 'i' || (event.target.nodeName.toLowerCase() == 'span' && event.target.className == 'anticon-class') || event.target.nodeName.toLowerCase() == 'img') {\n                        return event.target.parentNode;\n                    }\n                    else if (event.target.nodeName.toLowerCase() == 'span') {\n                        return event.target.parentNode.parentNode;\n                    }\n                    else {\n                        return false;\n                    }\n                };\n                //多选实现\n                if (!me.attrSelected()) {\n                    _$wrapContent().on('click', function (e) {\n                        //激活此事件，发送消息\n                        var li = _findClickedLi(e);\n                        var a = {\n                            originalEvent: event,\n                            data: me.getSelectedDataById(li.id)\n                        };\n                        //如果处于active，删除active\n                        if ($(li).hasClass('active')) {\n                            me.setSelectedData(li.id, false);\n                            $(li).find('.ribbon').remove();\n                            $(li).removeClass('active');\n                            $('rxmiconcancelselected' + messageId).rxmTriggerCmd(a);\n                        }\n                        else {\n                            //添加active\n                            me.setSelectedData(li.id, true);\n                            $(li).prepend('<div class=\"ribbon ribbon-top-right\"><span>ribbon</span></div>');\n                            $(li).addClass('active');\n                            $('rxmiconselected' + messageId).rxmTriggerCmd(a);\n                        }\n                    });\n                }\n                //默认，及单选实现\n                else {\n                    _$wrapContent().on('click', function (e) {\n                        var li = _findClickedLi(e);\n                        var $deseletedLi = _$wrapContainer(me).find('li.active');\n                        //如果有active标签，先清除\n                        if ($deseletedLi.length) {\n                            me.setSelectedData($deseletedLi.attr('id'), false);\n                            $deseletedLi.removeClass('active');\n                            _$wrapContainer(me).find('.ribbon').remove();\n                        }\n                        //添加数据\n                        me.setSelectedData(li.id, true);\n                        //添加样式及元素\n                        $(li).addClass('active');\n                        $(li).prepend('<div class=\"ribbon ribbon-top-right\"><span>ribbon</span></div>');\n                        //激活此事件，发送消息\n                        var a = {\n                            originalEvent: event,\n                            data: me.getSelectedDataById(li.id)\n                        };\n                        $('rxmiconselected' + messageId).rxmTriggerCmd(a);\n                    });\n                }\n            };\n            /**\n              * 设置选择状态\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.setSelectDesktop = function () {\n                var me = this;\n                //寻找选中节点\n                var _findClickedItem = function (event) {\n                    if (event.target.nodeName.toLowerCase() == 'span') {\n                        return event.target.parentNode.parentNode;\n                    }\n                    else if (event.target.className == 'rxm-icon-list-desktop-leftColumnSection' || event.target.className == 'rxm-icon-list-desktop-rightColumnSection') {\n                        return event.target.parentNode;\n                    }\n                    else {\n                        return false;\n                    }\n                };\n                //多选实现\n                if (!me.attrSelected()) {\n                    _$wrapContainer(me).on('click', function (e) {\n                        var item = _findClickedItem(e);\n                        if ($(item).hasClass('active')) {\n                            me.setSelectedData(item.id, false);\n                            $(item).removeClass('active');\n                        }\n                        else {\n                            me.setSelectedData(item.id, true);\n                            $(item).addClass('active');\n                        }\n                    });\n                }\n                //默认，及单选实现\n                else {\n                    _$wrapContainer(me).on('click', function (e) {\n                        var item = _findClickedItem(e);\n                        var $deselectedItem = _$wrapContainer(me).find('.active');\n                        //无论是否有选择状态，先清空数据\n                        if ($deselectedItem) {\n                            me.setSelectedData($deselectedItem.attr('id'), false);\n                            //清空样式及元素\n                            $deselectedItem.removeClass('active');\n                        }\n                        //添加数据\n                        me.setSelectedData(item.id, true);\n                        //添加样式及元素\n                        $(item).addClass('active');\n                    });\n                }\n            };\n            /**\n              * 初始化浮动标签\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.initFixedHeader = function () {\n                $('.rxm-icon-list-header-container').css({\n                    top: _$wrapDom[0].getBoundingClientRect().top,\n                    left: _$wrapDom[0].getBoundingClientRect().left,\n                    width: _$wrapDom[0].clientWidth + 'px',\n                    height: '30px'\n                });\n                _$wrapDom.find('.rxm-icon-list-desktop:first').css({\n                    marginTop: '30px'\n                });\n            };\n            /**\n              * 展开功能\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.addExpend = function () {\n                $('<i class=\"rxm-icon-list-expand fa fa-chevron-down\"></i>').appendTo(_$headers()).tap(function () {\n                    $(this).parent().next().slideToggle(\"slow\");\n                    if ($(this).hasClass('fa-chevron-down')) {\n                        $(this).removeClass('fa-chevron-down').addClass('fa-chevron-up');\n                    }\n                    else {\n                        $(this).removeClass('fa-chevron-up').addClass('fa-chevron-down');\n                    }\n                });\n            };\n            /**\n              * 去除展开功能\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.removeExpand = function () {\n                if (_$wrapDom.find('.rxm-icon-list-expand').length > 0) {\n                    _$wrapDom.find('.rxm-icon-list-expand').remove();\n                }\n            };\n            /**\n              * 私有：解决flex布局最后一排居左，hack\n              */\n            IconList.prototype._flexCenterFix = function () {\n                var emptyCells, i;\n                var me = this;\n                //cellpush( addedCellnumber ) ;\n                //找到list内容选择器，在每一项后面补充空的item，属于CSS hack\n                _$wrapContent().each(function () {\n                    emptyCells = [];\n                    //清空为了在动态插入icon或者删除icon时重新计算\n                    $(this).find('.is-empty').remove();\n                    //每行icon数目\n                    var nunmberPerRow = Math.floor($(this).width() / $(this).find('.rxm-icon-list-item:first').width());\n                    //最后一行icon数目\n                    var lastRowNumber = $(this).find('.rxm-icon-list-item').length % nunmberPerRow;\n                    //需要添加的空icon数目\n                    var addedNumber = nunmberPerRow - lastRowNumber;\n                    for (i = 0; i < addedNumber; i++) {\n                        emptyCells.push($('<ul>', {\n                            class: 'rxm-icon-list-item is-empty'\n                        }));\n                    }\n                    $(this).append(emptyCells);\n                });\n            };\n            /**\n              * 设置分割线\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.setSeperateLine = function () {\n                if (this.attrSeperateLine()) {\n                    _$wrapContent().css('borderBottom', '10px solid #EEE');\n                }\n                else {\n                    _$wrapContent().css('borderBottom', 'none');\n                }\n            };\n            /* ------------------------------------\n                        数据处理\n            ----------------------------------  */\n            /**\n              * 存储iconlist数据\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.storeData = function (dataObj) {\n                if (dataObj) {\n                    // var data = {\n                    //     id : dataObj.id ,\n                    //     name : dataObj.title, \n                    // }\n                    $.each(this.getData(), function (i, e) {\n                        if (e.categoryTitle == dataObj.categoryTitle)\n                            e.listData.push(dataObj);\n                    });\n                }\n                else {\n                    console.log('无法保存数据，请联系管理员！');\n                }\n            };\n            /**\n              * 删除iconlist数据\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.deleteData = function (id) {\n                var me = this;\n                if (id) {\n                    $.each(this.getData(), function (i, e) {\n                        var temp = e.listData;\n                        $.each(e.listData, function (index, element) {\n                            if (element.id == id) {\n                                temp.splice(index, 1);\n                                return false;\n                            }\n                        });\n                    });\n                }\n            };\n            /**\n              * 选中，取消选中时标记数据\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.setSelectedData = function (id, status) {\n                var me = this;\n                if (id) {\n                    $.each(me.getData(), function (i, e) {\n                        $.each(e.listData, function (index, element) {\n                            if (element.id == id) {\n                                element.selected = status;\n                                return;\n                            }\n                        });\n                    });\n                }\n                else {\n                    console.log('点击元素无法保存数据，请联系管理员！');\n                }\n            };\n            /**\n              * 或者选中数据通过ID\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.getSelectedDataById = function (id) {\n                var me = this;\n                var data = null;\n                if (id) {\n                    $.each(me.getData(), function (i, e) {\n                        $.each(e.listData, function (index, element) {\n                            if (element.id == id) {\n                                data = element;\n                                return false;\n                            }\n                        });\n                    });\n                }\n                else {\n                    console.log('点击元素无法保存数据，请联系管理员！');\n                }\n                return data;\n            };\n            /**\n              * 获取iconlist数据\n              * @returns Object\n              */\n            IconList.prototype.getData = function () {\n                return _data;\n            };\n            /* ------------------------------------\n                        属性getter\n            ----------------------------------  */\n            /**\n              * 数据URL\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.attrUrl = function (value) {\n                value && _$wrapDom.attr(\"rxmurl\", ret);\n                return _$wrapDom.attr(\"rxmurl\");\n            };\n            /**\n              * 模板id\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.attrId = function (value) {\n                value && _$wrapDom.attr(\"id\", ret);\n                return _$wrapDom.attr(\"id\");\n            };\n            /**\n              * 模板id\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.attrTemplateId = function (value) {\n                value && _$wrapDom.attr(\"rxmtemplate\", ret);\n                return _$wrapDom.attr(\"rxmtemplate\");\n            };\n            /**\n              * 列表类型\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.attrListType = function (value) {\n                value && _$wrapDom.attr(\"rxmlisttype\", ret);\n                return _$wrapDom.attr(\"rxmlisttype\");\n            };\n            /**\n              * 是否开启展开属性\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.attrIsExpand = function (value) {\n                value && _$wrapDom.attr(\"rxmisexpand\", ret);\n                return (_$wrapDom.attr(\"rxmisexpand\") === 'true');\n            };\n            /**\n              * 单选多选属性\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.attrSelected = function (value) {\n                value && _$wrapDom.attr(\"rxmissingle\", ret);\n                return (_$wrapDom.attr(\"rxmissingle\") === 'true');\n            };\n            /**\n              * 分割线\n              * @param {Sting} value\n              * @returns {String}\n              */\n            IconList.prototype.attrSeperateLine = function (value) {\n                value && _$wrapDom.attr(\"rxmisseperateline\", ret);\n                return (_$wrapDom.attr(\"rxmisseperateline\") === 'true');\n            };\n            // /**\n            //   * 私有：渲染主方法\n            //   * @param {Sting} value  \n            //   * @returns {String}\n            //   */\n            //  attrData  (value) {\n            //     value && (_data = value)\n            //     return _data\n            // }\n            /* ------------------------------------\n                        消息绑定\n            ----------------------------------  */\n            /**\n             * 添加icon消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            IconList.prototype.bindRxmAddIcon = function (arg) {\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmiconadded' + messageId).rxmBindCmd(arg);\n            };\n            /**\n             * 删除icon消息绑定\n             * @param {rxm.cmd.triggerArgs} args - 消息绑定对象\n             */\n            IconList.prototype.bindRxmRemoveIcon = function (arg) {\n                // if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                //     arg = {}\n                // }\n                !arg.hearFrom && (arg.hearFrom = \"all\");\n                $('rxmiconremove' + messageId).rxmBindCmd(arg);\n            };\n            /**\n             * 选中icon消息绑定\n             * @param {rxm.iconlist.bindTapIcon} args\n             */\n            IconList.prototype.bindTapIcon = function (args) {\n                //绑定\n                //_$wrapDom.tap('.rxm-icon-list-item', { id: _id, cmdType: cmdType, items: _data }, _callbacktap);\n                //相应组件ID\n                //args.id = _id\n                //将callback及ID关联到相应标识selector上面\n                //$('rxmiconselected').rxmBindCmd(args)\n                // if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                //     arg = {}\n                // }\n                !args.hearFrom && (args.hearFrom = \"all\");\n                $('rxmiconselected' + messageId).rxmBindCmd(args);\n            };\n            /**\n     * 选中icon消息绑定\n     * @param {rxm.iconlist.bindTapIcon} args\n     */\n            IconList.prototype.bindTapCancelIcon = function (args) {\n                //绑定\n                //_$wrapDom.tap('.rxm-icon-list-item', { id: _id, cmdType: cmdType, items: _data }, _callbacktap);\n                //相应组件ID\n                //args.id = _id\n                //将callback及ID关联到相应标识selector上面\n                //$('rxmiconselected').rxmBindCmd(args)\n                // if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                //     arg = {}\n                // }\n                !args.hearFrom && (args.hearFrom = \"all\");\n                $('rxmiconcancelselected' + messageId).rxmBindCmd(args);\n            };\n            return IconList;\n        }());\n        var ret = thisObj(_id, new IconList());\n        PageBase.bindPageReady({ callback: $.proxy(ret.init, ret), one: false });\n        return ret;\n    };\n    return ClassFactory;\n});\n","define(\"RxmSingleImage\", [\"require\", \"exports\", \"RxmArtTemplate\", \"RxmAppTool\"], function (require, exports, ArtTemplate, appTool) {\n    \"use strict\";\n    ///<amd-dependency path=\"RxmArtTemplate\" name=\"ArtTemplate\"/>\n    /**\n     * 引入类声明公共方法\n     * @type {rxm.AppTool}\n     * */\n    var thisObj = appTool.thisObj;\n    /**\n     * 组件默认值\n     * @type String\n     */\n    var clsdef = {\n        id: 'rxm-singleImage',\n        data: [],\n        loop: true,\n        fullScreen: true,\n        rxmPath: 'RxmSingleImage',\n        clsName: 'rxm-single-image',\n        scaleType: 'scale' // 'scale, full, original'\n    };\n    /**\n     * 激发方法\n     * @type String\n     */\n    var _triggerEvent = function (e) {\n        /**\n         * @type {rxm.cmd.triggerArgs}\n         */\n        var a = {\n            originalEvent: e,\n            id: e.data.id\n        };\n        var cmdType = e.data.cmdType;\n        delete e.data;\n        $(cmdType).rxmTriggerCmd(a);\n    };\n    /**\n     * 使用常量\n     * @type String\n     */\n    var CMDTYPE = \"rxmSingleImageCmd\";\n    /**\n         * 功能初始化\n         * @param {Sting} value\n         * @returns {String}\n         */\n    var _scaleImage = function ($imageElment) {\n        var containerWidth = $imageElment.parent().width();\n        var containerHeight = $imageElment.parent().height();\n        var ratio = $imageElment.width() / $imageElment.height();\n        var pratio = containerWidth / containerHeight;\n        if (ratio < pratio) { //图片过高\n            $imageElment.css({ height: '100%' });\n            $imageElment.parent().css({ textAlign: 'center' });\n            $imageElment.css({ visibility: 'visible' });\n        }\n        else { //图片过宽\n            $imageElment.css({ width: '100%', verticalAlign: 'middle' });\n            $imageElment.parent().css({ lineHeight: containerHeight + 'px' });\n            $imageElment.css({ visibility: 'visible' });\n        }\n    };\n    var _fullImage = function ($imageElment) {\n        console.log('full');\n    };\n    var _originalImage = function ($imageElment) {\n        console.log('original');\n    };\n    /**\n     * @param  {rxm.slider.cnf} config\n     */\n    var ClassFactory = function (config) {\n        //查找已有Slider实例，有则直接返回\n        if (thisObj(_id)) {\n            return thisObj(_id);\n        }\n        var _config = $.extend(clsdef, config);\n        var _id = _config.id;\n        var _data = _config.data;\n        var _$wrapDom = $('#' + _id);\n        //组件渲染入口\n        var _render = function () {\n            /**@type {Slider} */\n            var me = thisObj(_id);\n            if (me.render)\n                return me.render(_data);\n            /**@type {Cls} */\n            //用模板渲染页面HTML\n            var sliderHTML = ArtTemplate(me.attrTemplateId(), { data: _data });\n            $('#' + _id).html(sliderHTML);\n            //图片注册load事件，一旦加载完毕开始处理图片尺寸\n            $('#' + _id + ' img').on('load', function () {\n                if (_config.scaleType == 'scale') {\n                    _scaleImage($(this));\n                }\n                else if (_config.scaleType == 'full') {\n                    _fullImage($(this));\n                }\n                else if (_config.scaleType == 'original') {\n                    _originalImage($(this));\n                }\n            });\n        };\n        var SingleImage = /** @class */ (function () {\n            function SingleImage() {\n            }\n            /**\n              * 功能初始化\n              * @param {Sting} value\n              * @returns {String}\n              */\n            SingleImage.prototype.init = function () {\n                var url = this.attrUrl();\n                var me = this;\n                if (url && typeof url == 'string') {\n                    url = getServer() + '/' + url;\n                    $.ajax({\n                        url: url,\n                        dataType: 'json',\n                        type: 'get',\n                        success: function (data) {\n                            _data = data;\n                            _render();\n                        }, error: function (e) {\n                            console.error(e);\n                        }\n                    });\n                }\n                else if (_data) {\n                    _render();\n                }\n                else {\n                    console.log('数据有误，请检查！');\n                }\n            };\n            /**\n              * 模板id\n              * @param {Sting} value\n              * @returns {String}\n              */\n            SingleImage.prototype.attrId = function (value) {\n                value && _$wrapDom.attr(\"rxmid\", value);\n                return _$wrapDom.attr(\"rxmid\");\n            };\n            /**\n              * 模板id\n              * @param {Sting} value\n              * @returns {String}\n              */\n            SingleImage.prototype.attrTemplateId = function (value) {\n                value && _$wrapDom.attr(\"rxmtemplate\", value);\n                return _$wrapDom.attr(\"rxmtemplate\");\n            };\n            /**\n              * 数据URL\n              * @param {Sting} value\n              * @returns {String}\n              */\n            SingleImage.prototype.attrUrl = function (value) {\n                value && _$wrapDom.attr(\"rxmurl\", value);\n                return _$wrapDom.attr(\"rxmurl\");\n            };\n            /**\n              * 私有：渲染主方法\n              * @param {Sting} value\n              * @returns {String}\n              */\n            SingleImage.prototype.attrData = function (value) {\n                value && (_data = value);\n                return _data;\n            };\n            /**\n             * 暴露扩展方法\n             */\n            SingleImage.prototype.bindTapEvent = function (args) {\n                //绑定\n                _$wrapDom.tap('.rxm-slider-item', { id: _id, cmdType: CMDTYPE, items: _data }, _triggerEvent);\n                //相应组件ID\n                args.id = _id;\n                //将callback及ID关联到相应标识selector上面\n                $(CMDTYPE).rxmBindCmd(args);\n            };\n            return SingleImage;\n        }());\n        return thisObj(_id, new SingleImage());\n    };\n    return ClassFactory;\n});\n","define(\"RxmSlider\", [\"require\", \"exports\", \"RxmArtTemplate\", \"RxmPageBase\", \"RxmAppTool\"], function (require, exports, ArtTemplate, PageBase, appTool) {\n    \"use strict\";\n    ///<amd-dependency path=\"RxmArtTemplate\" name=\"ArtTemplate\"/>\n    /**\n     * 引入类声明公共方法\n     * @type {rxm.AppTool}\n     * */\n    var thisObj = appTool.thisObj;\n    /**\n     * 组件默认值\n     * @type String\n     */\n    var clsdef = {\n        id: 'rxm-slider',\n        data: [],\n        loop: true,\n        fullScreen: true,\n        rxmPath: 'RxmSlider'\n    };\n    /**\n     * 激发方法\n     * @type String\n     */\n    var _triggerEvent = function (e) {\n        /**\n         * @type {rxm.cmd.triggerArgs}\n         */\n        var a = {\n            originalEvent: e,\n            id: e.data.id\n        };\n        var cmdType = e.data.cmdType;\n        delete e.data;\n        $(cmdType).rxmTriggerCmd(a);\n    };\n    /**\n     * 使用常量\n     * @type String\n     */\n    var DATA_KEY = 'bs.rxm-slider';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var Direction = {\n        NEXT: 'next',\n        PREV: 'prev',\n        LEFT: 'left',\n        RIGHT: 'right'\n    };\n    var Selector = {\n        ACTIVE: '.active',\n        ACTIVE_ITEM: '.active.rxm-slider-item',\n        ITEM: '.rxm-slider-item',\n        NEXT_PREV: '.rxm-slider-item-next, .rxm-slider-item-prev',\n        INDICATORS: '.rxm-slider-indicators',\n        DATA_SLIDE: '[data-slide], [data-slide-to]',\n        DATA_RIDE: '[data-ride=\"rxm-slider\"]' //预留\n    };\n    var ClassName = {\n        SLIDER: 'rxm-slider',\n        ACTIVE: 'active',\n        SLIDE: 'slide',\n        RIGHT: 'rxm-slider-item-right',\n        LEFT: 'rxm-slider-item-left',\n        NEXT: 'rxm-slider-item-next',\n        PREV: 'rxm-slider-item-prev',\n        ITEM: 'rxm-slider-item'\n    };\n    var Event = {\n        SLIDE: 'slide' + EVENT_KEY,\n        SLID: 'slid' + EVENT_KEY,\n        KEYDOWN: 'keydown' + EVENT_KEY,\n        MOUSEENTER: 'mouseenter' + EVENT_KEY,\n        MOUSELEAVE: 'mouseleave' + EVENT_KEY,\n        TOUCHEND: 'touchend' + EVENT_KEY,\n        TRANSITION_END: 'transitionend' + EVENT_KEY\n    };\n    var MILLISECONDS_MULTIPLIER = 1000;\n    var CMDTYPE = \"rxmSliderCmd\";\n    /**\n      * 激活过渡结束后事件\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _triggerTransitionEnd = function (element) {\n        $(element).trigger(Event.TRANSITION_END);\n    };\n    /**\n      * 获取过渡结束后事件\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _getSpecialTransitionEndEvent = function () {\n        return {\n            bindType: Event.TRANSITION_END,\n            delegateType: Event.TRANSITION_END,\n            handle: function handle(event) {\n                if ($(event.target).is(this)) {\n                    return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n                }\n                return undefined; // eslint-disable-line no-undefined\n            }\n        };\n    };\n    /**\n      * 过渡结束后执行函数\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _transitionEndEmulator = function (duration) {\n        var _this = this;\n        var called = false;\n        $(this).one(Event.TRANSITION_END, function () {\n            called = true;\n        });\n        setTimeout(function () {\n            if (!called) {\n                _triggerTransitionEnd(_this);\n            }\n        }, duration);\n        return this;\n    };\n    /**\n      * 样式变化结束后支持函数入口\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _setTransitionEndSupport = function () {\n        $.fn.emulateTransitionEnd = _transitionEndEmulator;\n        var jq = $;\n        jq.event.special[Event.TRANSITION_END] = _getSpecialTransitionEndEvent();\n    };\n    /**\n      * slider对象初始化等系列事件，待优化\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _sliderInterface = function (config) {\n        return this.each(function () {\n            //var data = $(this).data(DATA_KEY);\n            var data = thisObj(this.id);\n            var _config = _objectSpread({}, clsdef, $(this).data());\n            if (typeof config === 'object') {\n                _config = _objectSpread({}, _config, config);\n            }\n            var action = typeof config === 'string' ? config : _config.slide;\n            //if (!data) {\n            //data = new Carousel(this, _config);\n            //$(this).data(DATA_KEY, data);\n            //}\n            if (typeof config === 'number') {\n                data.to(config);\n            }\n            else if (typeof action === 'string') {\n                if (typeof data[action] === 'undefined') {\n                    throw new TypeError(\"No method named \\\"\" + action + \"\\\"\");\n                }\n                data[action]();\n            }\n            else if (_config.interval) {\n                data.pause();\n                data.cycle();\n            }\n        });\n    };\n    /**\n      * 导航及指示按钮点击回调入口\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _clickCallback = function (event) {\n        //获取容器选择器\n        var selector = _getSelectorFromElement(this);\n        //异常处理\n        if (!selector) {\n            return;\n        }\n        var target = $(selector)[0];\n        if (!target || !$(target).hasClass(ClassName.SLIDER)) {\n            return;\n        }\n        var config = _objectSpread({}, $(target).data(), $(this).data());\n        var slideIndex = this.getAttribute('data-slide-to');\n        if (slideIndex) {\n            config.interval = false;\n        }\n        _sliderInterface.call($(target), config);\n        if (slideIndex) {\n            thisObj(target.id)._to(slideIndex);\n        }\n        event.preventDefault();\n    };\n    /**\n      * 工具方法-定义属性\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _defineProperty = function (obj, key, value) {\n        if (key in obj) {\n            Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n            });\n        }\n        else {\n            obj[key] = value;\n        }\n        return obj;\n    };\n    /**\n      * 工具方法-对象扩展，暂时不用$.extend，待定\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _objectSpread = function (target, a, b) {\n        var _loop_1 = function () {\n            source = arguments_1[i] != null ? arguments_1[i] : {};\n            ownKeys = Object.keys(source);\n            var Obj = Object;\n            if (typeof Obj.getOwnPropertySymbols === 'function') {\n                ownKeys = ownKeys.concat(Obj.getOwnPropertySymbols(source).filter(function (sym) {\n                    return Obj.getOwnPropertyDescriptor(source, sym).enumerable;\n                }));\n            }\n            ownKeys.forEach(function (key) {\n                _defineProperty(target, key, source[key]);\n            });\n        };\n        var arguments_1 = arguments, source, ownKeys;\n        for (var i = 1; i < arguments.length; i++) {\n            _loop_1();\n        }\n        return target;\n    };\n    /**\n      * 获取元素选择器\n      * @param {Sting} value\n      * @returns {String}\n      */\n    var _getSelectorFromElement = function (element) {\n        var selector = element.getAttribute('data-target');\n        if (!selector || selector === '#') {\n            selector = element.getAttribute('href') || '';\n        }\n        try {\n            return document.querySelector(selector) ? selector : null;\n        }\n        catch (err) {\n            return null;\n        }\n    };\n    /**\n     * @param  {rxm.slider.cnf} config\n     */\n    var ClassFactory = function (config) {\n        //查找已有Slider实例，有则直接返回\n        if (thisObj(_id)) {\n            return thisObj(_id);\n        }\n        var _items = null;\n        var _interval = null;\n        var _activeElement = null;\n        var _isSliding = null;\n        var _config = $.extend(clsdef, config);\n        var _id = _config.id;\n        var _data = _config.data;\n        var _$wrapDom = $('#' + _id);\n        var _indicatorsElement = _$wrapDom[0].querySelector(Selector.INDICATORS);\n        //组件渲染入口\n        var _render = function () {\n            /**@type {Slider} */\n            var me = thisObj(_id);\n            if (me.render)\n                return me.render(_data);\n            /**@type {Cls} */\n            //用模板渲染页面HTML\n            var sliderHTML = ArtTemplate(me.attrTemplateId(), { data: _data });\n            $('#' + _id).find('.rxm-slider-inner').append(sliderHTML);\n            //手势绑定\n            me.detectSwipe();\n            //初始化指示器\n            me.initIndicator();\n            //初始化导航和指示目标设定\n            me.setTargetId();\n            //clean active处理编辑器留下的active bug，默认应该为第一个active\n            me.initImageActive();\n            //是否显示标题\n            //me.initTitle();\n            //设置是否显示导航\n            me.initNav();\n            //过渡效果矫正\n            _setTransitionEndSupport();\n        };\n        var Slider = /** @class */ (function () {\n            function Slider() {\n            }\n            /**\n             * 手势控制\n             */\n            Slider.prototype.detectSwipe = function () {\n                var start;\n                var end;\n                var swiped;\n                var me = this;\n                $('#' + _id).bind('touchstart', function (e) {\n                    var eori = e.originalEvent;\n                    e.preventDefault();\n                    var touch = eori.touches[0] || eori.changedTouches[0];\n                    start = touch.pageX;\n                });\n                $('#' + _id).bind('touchend', function (e) {\n                    var eori = e.originalEvent;\n                    e.preventDefault();\n                    var touch = eori.touches[0] || eori.changedTouches[0];\n                    end = touch.pageX;\n                    swiped = start - end;\n                    if (swiped >= 30) {\n                        me.prev();\n                    }\n                    else if (swiped <= -30) {\n                        me.next();\n                    }\n                });\n            };\n            /**\n              * 初始化active图片\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.initImageActive = function () {\n                _$wrapDom.find('.rxm-slider-item.active').removeClass('active');\n                _$wrapDom.find('.rxm-slider-item').first().addClass('active');\n            };\n            /**\n              * 初始化indicator\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.initIndicator = function () {\n                var imgNum = _$wrapDom.find('.rxm-slider-item').length;\n                var liString = '';\n                for (var i = 0; i < imgNum; i++) {\n                    if (i == 0)\n                        liString += '<li class=\"active\" data-target=\"\" data-slide-to=\"' + i + '\"></li>';\n                    else {\n                        liString += '<li data-target=\"\" data-slide-to=\"' + i + '\"></li>';\n                    }\n                }\n                _$wrapDom.find('.rxm-slider-indicators').append($(liString));\n            };\n            /**\n              * 设置目标ID，讲导航和指示器锚定容器ID\n              */\n            Slider.prototype.setTargetId = function () {\n                _$wrapDom.find('a').attr('href', '#' + _id);\n                _$wrapDom.find('li').attr('data-target', '#' + _id);\n            };\n            /**\n              * 初始化左右导航设置\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.initNav = function () {\n                if (this.attrIsNav() == 'on') {\n                    _$wrapDom.find('.rxm-slider-control-prev, .rxm-slider-control-next').css('display', 'flex');\n                }\n                else if (this.attrIsNav() == 'off') {\n                    _$wrapDom.find('.rxm-slider-control-prev, .rxm-slider-control-next').css('display', 'none');\n                }\n            };\n            /**\n              * 初始化标题设置\n              * @param {Sting} value\n              * @returns {String}\n              */\n            // initTitle  () {\n            //   if( this.attrIsDisplayTitle() ){\n            //     _$wrapDom.find('.rxm-single-image-title').css('display', 'block');\n            //   }else if(  this.attrIsDisplayTitle() ) {\n            //     _$wrapDom.find('.rxm-single-image-title').css('display', 'none');\n            //   }\n            // }\n            /**\n              * 功能初始化\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.init = function () {\n                var url = this.attrUrl();\n                var me = this;\n                if (url && typeof url == 'string') {\n                    url = getServer() + '/' + url;\n                    $.ajax({\n                        url: url,\n                        dataType: 'json',\n                        type: 'get',\n                        success: function (data) {\n                            _data = data;\n                            _render();\n                        }, error: function (e) {\n                            console.log('请确认滚动横幅服务地址！');\n                            _render();\n                        }\n                    });\n                }\n                else if (_data) {\n                    _render();\n                }\n                else {\n                    console.log('数据有误，请检查！');\n                }\n            };\n            /**\n              * 向后翻页\n              */\n            Slider.prototype.next = function () {\n                if (!_isSliding) {\n                    this._slide(Direction.NEXT);\n                }\n            };\n            /**\n              * 向前翻页\n              */\n            Slider.prototype.prev = function () {\n                if (!_isSliding) {\n                    this._slide(Direction.PREV);\n                }\n            };\n            /**\n              * 滑动函数\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._slide = function (direction, element) {\n                var activeElement = _$wrapDom[0].querySelector(Selector.ACTIVE_ITEM);\n                var activeElementIndex = this._getItemIndex(activeElement);\n                var nextElement = element || activeElement &&\n                    this._getItemByDirection(direction, activeElement);\n                var nextElementIndex = this._getItemIndex(nextElement);\n                var isCycling = Boolean(_interval);\n                var directionalClassName;\n                var orderClassName;\n                var eventDirectionName;\n                if (direction === Direction.NEXT) {\n                    directionalClassName = ClassName.LEFT;\n                    orderClassName = ClassName.NEXT;\n                    eventDirectionName = Direction.LEFT;\n                }\n                else {\n                    directionalClassName = ClassName.RIGHT;\n                    orderClassName = ClassName.PREV;\n                    eventDirectionName = Direction.RIGHT;\n                }\n                if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n                    _isSliding = false;\n                    return;\n                }\n                var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n                if (slideEvent.isDefaultPrevented()) {\n                    return;\n                }\n                if (!activeElement || !nextElement) {\n                    // 处理特别异常\n                    return;\n                }\n                _isSliding = true;\n                if (isCycling) {\n                    this.pause();\n                }\n                this._setActiveIndicatorElement(nextElement);\n                var slidEvent = $.Event(Event.SLID, {\n                    relatedTarget: nextElement,\n                    direction: eventDirectionName,\n                    from: activeElementIndex,\n                    to: nextElementIndex\n                });\n                if (_$wrapDom.hasClass(ClassName.SLIDE)) {\n                    $(nextElement).addClass(orderClassName);\n                    //?\n                    this._reflow(nextElement);\n                    $(activeElement).addClass(directionalClassName);\n                    $(nextElement).addClass(directionalClassName);\n                    var transitionDuration = this._getTransitionDurationFromElement(activeElement);\n                    $(activeElement)\n                        .one(Event.TRANSITION_END, function () {\n                        $(nextElement)\n                            .removeClass(directionalClassName + ' ' + orderClassName)\n                            .addClass(ClassName.ACTIVE);\n                        var actv = activeElement;\n                        $(actv).removeClass(ClassName.ACTIVE + ' ' + orderClassName + ' ' + directionalClassName);\n                        _isSliding = false;\n                        setTimeout(function () {\n                            return $(_$wrapDom[0]).trigger(slidEvent);\n                        }, 0);\n                    })\n                        .emulateTransitionEnd(transitionDuration);\n                }\n                else {\n                    $(activeElement).removeClass(ClassName.ACTIVE);\n                    $(nextElement).addClass(ClassName.ACTIVE);\n                    _isSliding = false;\n                    var _this = this;\n                    $(_this._element).trigger(slidEvent);\n                }\n                // if (isCycling) {\n                //   this.cycle()\n                // }\n            };\n            /**\n              * 直接跳转\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._to = function (index) {\n                var _this = this;\n                _activeElement = _$wrapDom[0].querySelector(Selector.ACTIVE_ITEM);\n                var activeIndex = this._getItemIndex(_activeElement);\n                if (index > _items.length - 1 || index < 0) {\n                    return;\n                }\n                if (_isSliding) {\n                    $(_$wrapDom[0]).one(Event.SLID, function () {\n                        return _this._to(index);\n                    });\n                    return;\n                }\n                if (activeIndex === index) {\n                    this.pause();\n                    this.cycle();\n                    return;\n                }\n                var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;\n                this._slide(direction, _items[index]);\n            };\n            ;\n            /**\n              * 重新流布局\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._reflow = function (element) {\n                return element.offsetHeight;\n            };\n            /**\n              * 获取元素的TransitionDuration\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._getTransitionDurationFromElement = function (element) {\n                if (!element) {\n                    return 0;\n                }\n                // 获取元素的transition-duration\n                var transitionDuration = $(element).css('transition-duration');\n                var floatTransitionDuration = parseFloat(transitionDuration);\n                // 如果元素或transition duration没有找到，返回0\n                if (!floatTransitionDuration) {\n                    return 0;\n                }\n                // 如果定义了多个durations，取第一个\n                transitionDuration = transitionDuration.split(',')[0];\n                return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER;\n            };\n            /**\n              * 获取横幅索引顺序\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._getItemIndex = function (element) {\n                _items = element && element.parentNode\n                    ? [].slice.call(element.parentNode.querySelectorAll(Selector.ITEM))\n                    : [];\n                return _items.indexOf(element);\n            };\n            /**\n              * 通过滑动方向，获取下一个横幅\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._getItemByDirection = function (direction, activeElement) {\n                var isNextDirection = direction === Direction.NEXT;\n                var isPrevDirection = direction === Direction.PREV;\n                var activeIndex = this._getItemIndex(activeElement);\n                var lastItemIndex = _items.length - 1;\n                var isGoingToWrap = isPrevDirection && activeIndex === 0 ||\n                    isNextDirection && activeIndex === lastItemIndex;\n                //?\n                if (isGoingToWrap && !_config.loop) {\n                    return activeElement;\n                }\n                var delta = direction === Direction.PREV ? -1 : 1;\n                var itemIndex = (activeIndex + delta) % _items.length;\n                return itemIndex === -1\n                    ? _items[_items.length - 1] : _items[itemIndex];\n            };\n            /**\n              * 设置下一个active的横幅\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._setActiveIndicatorElement = function (element) {\n                _indicatorsElement = _$wrapDom[0].querySelector(Selector.INDICATORS);\n                if (_indicatorsElement) {\n                    var indicators = [].slice.call(_indicatorsElement.querySelectorAll(Selector.ACTIVE));\n                    $(indicators)\n                        .removeClass(ClassName.ACTIVE);\n                    var nextIndicator = _indicatorsElement.children[this._getItemIndex(element)];\n                    if (nextIndicator) {\n                        $(nextIndicator).addClass(ClassName.ACTIVE);\n                    }\n                }\n            };\n            /**\n              * 触发滑动事件\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype._triggerSlideEvent = function (relatedTarget, eventDirectionName) {\n                var targetIndex = this._getItemIndex(relatedTarget);\n                var fromIndex = this._getItemIndex(_$wrapDom[0].querySelector(Selector.ACTIVE_ITEM));\n                var slideEvent = $.Event(Event.SLIDE, {\n                    relatedTarget: relatedTarget,\n                    direction: eventDirectionName,\n                    from: fromIndex,\n                    to: targetIndex\n                });\n                $(_$wrapDom[0]).trigger(slideEvent);\n                return slideEvent;\n            };\n            /**\n              * 是否开启导航属性\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.attrIsNav = function () {\n                return _$wrapDom.attr(\"rxmisnav\");\n            };\n            /**\n              * 是否显示标题\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.attrIsDisplayTitle = function (value) {\n                return _$wrapDom.attr(\"rxmisDisplayTitle\");\n            };\n            /**\n              * 容器id\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.attrId = function () {\n                return _$wrapDom.attr(\"rxmid\");\n            };\n            /**\n              * 模板id\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.attrTemplateId = function () {\n                return _$wrapDom.attr(\"rxmtemplate\");\n            };\n            /**\n              * 数据URL\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.attrUrl = function () {\n                return _$wrapDom.attr(\"rxmurl\");\n            };\n            /**\n              * 获取数据\n              * @param {Sting} value\n              * @returns {String}\n              */\n            Slider.prototype.attrData = function (value) {\n                value && (_data = value);\n                return _data;\n            };\n            /**\n             * 暴露扩展方法\n             * @param {rxm.iconlist.bindTapIcon} args\n             */\n            Slider.prototype.bindTapEvent = function (args) {\n                //绑定\n                _$wrapDom.tap('.rxm-slider-item', { id: _id, cmdType: CMDTYPE, items: _data }, _triggerEvent);\n                //相应组件ID\n                args.id = _id;\n                //将callback及ID关联到相应标识selector上面\n                $(CMDTYPE).rxmBindCmd(args);\n            };\n            //\n            Slider.prototype.pause = function () {\n            };\n            Slider.prototype.cycle = function () {\n            };\n            return Slider;\n        }());\n        var ret = thisObj(_id, new Slider());\n        PageBase.bindPageReady({ callback: $.proxy(ret.init, ret), one: false });\n        return ret;\n    };\n    //重要，事件绑定主方法\n    $(document.body).tap(Selector.DATA_SLIDE, function () {\n        //获取容器选择器\n        var selector = _getSelectorFromElement(this);\n        //异常处理\n        if (!selector) {\n            return;\n        }\n        var target = $(selector)[0];\n        if (!target || !$(target).hasClass(ClassName.SLIDER)) {\n            return;\n        }\n        var config = _objectSpread({}, $(target).data(), $(this).data());\n        var slideIndex = this.getAttribute('data-slide-to');\n        if (slideIndex) {\n            config.interval = false;\n        }\n        _sliderInterface.call($(target), config);\n        if (slideIndex) {\n            thisObj(target.id)._to(slideIndex);\n        }\n        var evnt = event;\n        evnt.preventDefault();\n    });\n    return ClassFactory;\n});\n","define(\"RxmTree\", [\"require\", \"exports\", \"RxmAppTool\", \"ZTree\", \"css!ZTreeCss\"], function (require, exports, appTool) {\n    \"use strict\";\n    var clsdef = {\n        rxmPath: 'RxmTree',\n        clsName: 'rxm-tree-wdgt',\n        juryFn: 'rxmTreeWdgt'\n    };\n    /**获得tree对象本身，这么做是为了防止聂村泄露 以前都是放在链表中或者 thisObj */\n    var soleThisObj = appTool.thisObj;\n    var settingDefault = {\n        treeId: \"\",\n        async: {\n            enable: false,\n            url: \"\",\n            otherParam: \"\",\n            type: \"post\"\n        },\n        check: {\n            chkboxType: { \"Y\": \"ps\", \"N\": \"ps\" },\n            enable: false\n        },\n        data: {\n            key: {\n                name: \"\"\n            },\n            simpleData: {\n                enable: true,\n                idKey: \"id\",\n                pIdKey: \"pId\",\n                rootPId: null\n            }\n        },\n        isNodeOpen: true\n    };\n    /**\n     * 获取ztree  Node  节点的\n     * @param {Object} node\n     * @returns  {Object}\n     */\n    var _toPlainNode = function (node) {\n        var ret;\n        if (node) {\n            ret = JSON.parse(JSON.stringify(node));\n            var zTreeNodeKey = ['check_Child_State', 'check_Focus', 'checked',\n                'checkedOld', 'chkDisabled', 'editNameFlag', 'isAjaxing',\n                'isFirstNode', 'isHover', 'isLastNode', 'isParent', 'level', 'halfCheck',\n                'isAjaxing', 'isFirstNode', 'isHover', 'isLastNode', 'isParent', 'level',\n                'nocheck', 'open', 'tId', 'type', 'zAsync',\n                /**function */\n                'getCheckStatus', 'getNextNode', 'getParentNode', 'getPreNode'\n            ];\n            for (var i = 0; i < zTreeNodeKey.length; i++) {\n                ret[zTreeNodeKey[i]] = undefined;\n            }\n            ret = $.extend(true, {}, ret);\n        }\n        return ret;\n    };\n    /**\n     *\n     * @param {rxm.tree.config} config\n     */\n    var ClsFactory = function (config) {\n        var _id = config.id || config.treeId;\n        // if (!_id || ($('#' + _id).length == 0)&&$('[rxmtreeid=' + _id + ']').length == 0) {\n        //   console.error('id is needed by rxmTree ')\n        //   return \n        // }\n        if (soleThisObj(_id))\n            return soleThisObj(_id);\n        /** 初始化setting值\n         * @type  {rxm.tree.config} */\n        var _setting = $.extend(true, {}, settingDefault, cssOrm.default.rxmTreeSettingDefault, config);\n        //每次都要提交的数据\n        var _dataRequestEverytime = {};\n        var _defaultUrl = '';\n        _setting.treeId = _id;\n        var treeObj;\n        /**\n         * reload成功毁掉函数\n         * @param {Object} data\n         */\n        var _loadOK = function (data) {\n            var dt = data;\n            /**@type {rxm.tree.loadArgsExt|JQueryAjaxSettings} */\n            var ths = this;\n            var thsObj = soleThisObj(_id);\n            ths._success && (ths._success(data));\n            /**有全局的format */\n            //thsObj.rxmLoadFormat && $.isFunction(thsObj.rxmLoadFormat) && (data = thsObj.rxmLoadFormat(data))\n            /**有针对数据load的format */\n            // if (ths.rxmLoadFormat) {\n            //   if ($.isFunction(ths.rxmLoadFormat)) { dt = ths.rxmLoadFormat(data) } else\n            //     if ($.isString(ths.rxmLoadFormat) && $.isFunction(thsObj[ths.rxmLoadFormat])) {\n            //       dt = thsObj[ths.rxmLoadFormat](data)\n            //     }\n            // }\n            if (ths.rxmLoadAppend) {\n                thsObj.addNodes(dt);\n            }\n            else {\n                _createTree(dt);\n                $('RxmCreateTreeOk').rxmTriggerCmd({ data: { op: 'create' }, id: _id });\n            }\n        };\n        var _loadError = function (data) {\n            /**@type {rxm.tree.loadArgsExt|JQueryAjaxSettings} */\n            var ths = this;\n            var rqr = window;\n            var page = rqr.require('RxmPageBase');\n            page.alert('数据查询出错');\n        };\n        var _createTree = function (data) {\n            if (treeObj) {\n                treeObj.destroy();\n            }\n            treeObj = $.fn.zTree.init($('#' + _id), _setting, data);\n            $('RxmCreateTreeOk').rxmTriggerCmd({ data: treeObj });\n            if (_setting && _setting.isNodeOpen) {\n                treeObj.expandAll(true);\n            }\n        };\n        /**rxm 树对象\n           * @class\n           * @constructor\n           *\n           */\n        var RxmTreeImpl = /** @class */ (function () {\n            function RxmTreeImpl() {\n            }\n            /**\n             * 获取选中的节点  返回被添加数据clone\n             * @param {rxm.tree.RxmTreeAddNodesArgs}  args\n             * @returns  {Array.<Object>}\n             */\n            RxmTreeImpl.prototype.getCheckedNodes = function (args) {\n                return treeObj.getCheckedNodes(true);\n            };\n            /**\n             * 添加节点  返回被添加数据clone\n         \r\n             */\n            RxmTreeImpl.prototype.addNodes = function (args) {\n                treeObj.addNodes(args);\n            };\n            /**\n             * 获取全部的节点数据\n             */\n            RxmTreeImpl.prototype.getNodes = function () {\n                var r;\n                r = treeObj.getNodes();\n                return r;\n            };\n            /**\n           * 获取全部被选择的数据\n           */\n            RxmTreeImpl.prototype.getSelectedNodes = function () {\n                return treeObj.getSelectedNodes();\n            };\n            /**\n             * 删除节点\n             * @param {Object} node\n             * @param {Boolean} callbackFlag\n             */\n            RxmTreeImpl.prototype.removeNode = function (node, callbackFlag) {\n                treeObj.removeNode(node, callbackFlag);\n            };\n            /**\n             * 更新节点数据\n             * @param {Object} node  json对象\n            \r\n             */\n            RxmTreeImpl.prototype.updateNode = function (node, checkTypeFlag) {\n                treeObj.updateNode(node, checkTypeFlag);\n            };\n            /**\n             * 初始化函数\n             * @param {rxm.tree.initArg} args\n             */\n            RxmTreeImpl.prototype.init = function (args) {\n                // args.settingcfg && ($.extend(true, _setting, args.settingcfg))\n                //treeObj = $.fn.tree.init($('#' + _id), _setting, args.treeData)\n                //初始化可视化设置的属性\n                this._initEditTreeAttr();\n            };\n            RxmTreeImpl.prototype.reload = function (ajaxParam, setting) {\n                setting && $.extend(true, _setting, setting);\n                if (treeObj) {\n                    treeObj.destroy();\n                }\n                if ($.isArray(ajaxParam)) {\n                }\n                else {\n                    var ajaxArgs = $.extend(true, { data: _dataRequestEverytime, url: _defaultUrl }, ajaxParam);\n                    ajaxParam && $.isString(ajaxParam.url) && ajaxParam.url.length > 3 && (_defaultUrl = ajaxParam.url);\n                    if (ajaxArgs.url.length > 3) {\n                        ajaxArgs._error = ajaxArgs.error;\n                        ajaxArgs._success = ajaxArgs.success;\n                        ajaxArgs.success = _loadOK;\n                        ajaxArgs.error = _loadError;\n                        $.ajax(ajaxArgs);\n                    }\n                }\n            };\n            // editName (node){}\n            RxmTreeImpl.prototype.expandAll = function (expandFlag) {\n                treeObj && treeObj.expandAll(expandFlag);\n                return true;\n            };\n            /**\n             * 将 zTree node 节点数据  转变为用户数据\n         \r\n            */\n            RxmTreeImpl.prototype.toPlainNodes = function (nodes) {\n                var ret = [];\n                if ($.isArray(nodes)) {\n                    for (var i = 0; nodes.length; i++) {\n                        ret.push(_toPlainNode(nodes[i]));\n                    }\n                }\n                else {\n                    ret = _toPlainNode(nodes);\n                }\n                return ret;\n            };\n            /**\n             * 获取 被选择的节点数据，返回值为 用户输入数据格式 plainObject\n             * @return  {Array.<Object>}\n             */\n            RxmTreeImpl.prototype.getPlainSelectedNodes = function () {\n                return this.toPlainNodes(treeObj.getSelectedNodes());\n            };\n            /**\n             * 获取 被checked的节点数据，返回值为 用户输入数据格式 plainObject\n             * @return  {Array.<Object>}\n             */\n            RxmTreeImpl.prototype.getPlainCheckedNodes = function () {\n                return this.toPlainNodes(treeObj.getCheckedNodes());\n            };\n            // expandNode (node, expandFlag, sonSign, focus, callbackFlag){}\n            /**销毁树 */\n            RxmTreeImpl.prototype.destroy = function () { treeObj.destroy(); };\n            /**\n             * \bReload 函数执行成功\n             * @param {rxm.cmd.bindArgs |{bindWinId:'',triggerWinId:''}} args\n             */\n            RxmTreeImpl.prototype.bindReloadOk = function (args) {\n                args.id = _id;\n                $('RxmCreateTreeOk').rxmBindCmd(args);\n            };\n            RxmTreeImpl.prototype.getZTreeObj = function () { return treeObj; };\n            RxmTreeImpl.prototype.setDataForEveryReload = function (d) {\n                !d && (_dataRequestEverytime = {});\n                !!d && (_dataRequestEverytime = $.extend(true, _dataRequestEverytime, d));\n            };\n            RxmTreeImpl.prototype.setUrl = function (url) {\n                _defaultUrl = url;\n            };\n            RxmTreeImpl.prototype.selectNode = function (treeNode, addFlag, isSilent) {\n                return treeObj.selectNode(treeNode, addFlag, isSilent);\n            };\n            RxmTreeImpl.prototype._initEditTreeAttr = function () {\n                if ($('#' + _id).hasClass('rxm-tree')) {\n                    var $wrap = $('#' + _id);\n                    //获取可视化编辑器中设置的属性\n                    //var treeid = $wrap.attr('rxmtreeid')\n                    var url = $wrap.attr('rxmurl');\n                    var params = $wrap.attr('rxmparams');\n                    try {\n                        params = JSON.parse(params);\n                        _dataRequestEverytime = params;\n                    }\n                    catch (e) {\n                    }\n                    var idKey = $wrap.attr('rxmidkey');\n                    var pIdKey = $wrap.attr('rxmpidkey');\n                    var nameKey = $wrap.attr('rxmnamekey');\n                    var isCheckBox = $wrap.attr('rxmischeckbox') == 'true' ? true : false;\n                    var checkep = $wrap.attr('checkep') == 'true' ? true : false;\n                    var checkes = $wrap.attr('checkes') == 'true' ? true : false;\n                    var cancelep = $wrap.attr('cancelep') == 'true' ? true : false;\n                    var canceles = $wrap.attr('canceles') == 'true' ? true : false;\n                    var isNodeOpen = $wrap.attr('rxmisnodeopen') == 'true' ? true : false;\n                    var rootPId = $wrap.attr('rxmrootpid') == 'true' ? true : false;\n                    var checkStr = '';\n                    var cancelStr = '';\n                    if (checkep) {\n                        checkStr += 'p';\n                    }\n                    if (checkes) {\n                        checkStr += 's';\n                    }\n                    if (cancelep) {\n                        cancelStr += 'p';\n                    }\n                    if (canceles) {\n                        cancelStr += 's';\n                    }\n                    var editAjaxParam = {\n                        url: url,\n                        data: params\n                    };\n                    var editSettings = {\n                        id: _id,\n                        check: {\n                            chkboxType: { \"Y\": checkStr, \"N\": cancelStr },\n                            enable: isCheckBox\n                        },\n                        data: {\n                            key: {\n                                name: nameKey\n                            },\n                            simpleData: {\n                                enable: true,\n                                idKey: idKey,\n                                pIdKey: pIdKey,\n                                rootPId: rootPId\n                            }\n                        },\n                        isNodeOpen: isNodeOpen\n                    };\n                    this.reload(editAjaxParam, editSettings);\n                }\n                else { //不使用可视化创建的页面\n                    if (!!_setting && _setting.async && !!_setting.async.otherParam) {\n                        if ($.isArray(_setting.async.otherParam)) { //处理数组参数\n                            var tmp = {};\n                            for (var i = 0; i < _setting.async.otherParam.length - 1; i = i + 2) {\n                                tmp[_setting.async.otherParam[i]] = _setting.async.otherParam[i + 1];\n                            }\n                            _setting.async.data = tmp;\n                        }\n                        else { //处理对象参数\n                            _setting.async.data = _setting.async.otherParam;\n                        }\n                    }\n                    this.reload(_setting.async);\n                }\n            };\n            return RxmTreeImpl;\n        }());\n        var ret = new RxmTreeImpl();\n        $('#' + _id).data(clsdef.clsName, ret);\n        var rqr = window;\n        rqr.require('RxmPageBase').bindPageReady({ callback: $.proxy(ret.init, ret), one: true });\n        return ret;\n    };\n    return ClsFactory;\n});\n","define(\"RxmDisplayVideo\", [\"require\", \"exports\", \"RxmAppTool\"], function (require, exports, appTool) {\n    \"use strict\";\n    // 控件名称：rxmdk-show-video-player rxmdk-show-video-player\n    // 控件说明：视频播放控件\n    // 创建时间：Aug 2, 2017 10:01:20 AM\n    // 创建人：王欢\n    var clsdef = {\n        rxmPath: 'RxmDisplayVideo',\n        clsName: 'rxm-display-video',\n    };\n    var _msgEnum = {\n        /// <summary>开始</summary>\n        started: 'started',\n        /// <summary>单击player</summary>\n        tapInPlayer: 'tapInPlayer',\n        /// <summary>重启</summary>\n        reset: 'reset',\n        /// <summary>加载进程</summary>\n        loadProgress: 'loadProgress',\n        /// <summary>暂停事件</summary>\n        paused: 'paused',\n        /// <summary>停止</summary>\n        stopped: 'stopped',\n        /// <summary>设置音量</summary>\n        setVolume: 'setVolume',\n        /// <summary>静音</summary>\n        volumeMute: 'volumeMute',\n        /// <summary>全屏</summary>\n        fullScreen: 'fullScreen'\n    };\n    var clsFactory = function (config) {\n        var videoUrl;\n        var thumbnail;\n        var floatWidgetUrl;\n        var spotsVideoUrl;\n        var fetchVideoListUrl;\n        var _cfgDefault = {};\n        var _cfg;\n        //cls.rxmtype = 'rxmdk-show-video-player'\n        var dcfg = _cfgDefault;\n        var ucfg = cssOrm.default.clsShowVideoPlayer || {};\n        ucfg = ucfg.cfg;\n        _cfg = $.extend(true, {}, dcfg, ucfg, config);\n        if (typeof _cfg.id !== 'undefined') {\n            _cfg.$cls = $('#' + _cfg.id);\n        }\n        var _id = _cfg.id;\n        var _leaveTime = 0;\n        var $wrap = $('#' + _id);\n        var totalWidth = $wrap.find('.som-progress-ctrl').width();\n        var _iWidth = $wrap.find('.som-progress-ctrl').find('i').width();\n        var _mouseTag = true;\n        function formatTime(seconds) {\n            return [\n                parseInt(seconds) / 60 / 60,\n                parseInt(seconds) / 60 % 60,\n                parseInt(seconds) % 60\n            ]\n                .join(':')\n                .replace(/\\b(\\d)\\b/g, '0$1');\n        }\n        var RxmDisplayVideoImpl = /** @class */ (function () {\n            function RxmDisplayVideoImpl() {\n            }\n            /// <summary>rxmdk-show-video-player控件事件枚举对象</summary>\n            /// <summary>重新加载音频/视频元素</summary>\n            RxmDisplayVideoImpl.prototype.load = function () {\n            };\n            // 绑定事件\n            RxmDisplayVideoImpl.prototype.initEvent = function () {\n                // 绑定开始按钮事件\n                $('#' + _id).find('.som-start-ctrl').find('.fa-play').on('click', cssOrm.hitch(this._tapStart, this));\n                this.bindStarted();\n                // 绑定停止按钮事件\n                $('#' + _id).find('.som-start-ctrl').find('.fa-pause').on('click', cssOrm.hitch(this._tapPause, this));\n                this.bindPaused();\n                // 绑定进度条点击事件\n                $('#' + _id).find('.som-progress-ctrl').on('click', cssOrm.hitch(this._tapProgress, this));\n                this.bindLoadProgress();\n                // 绑定音量调节事件\n                $('#' + _id).find('.som-volume-set').on('click', cssOrm.hitch(this._tapVolume, this));\n                this.bindSetVolume();\n                // 绑定静音事件\n                $('#' + _id).find('.som-volume-ctrl').children('i').on('click', cssOrm.hitch(this._tabVolumeMute, this));\n                this.bindVolumeMute();\n                // 绑定屏幕缩放事件\n                $('#' + _id).find('.som-screen-ctrl').on('click', cssOrm.hitch(this._tapFullScreen, this));\n                this.bindFullScreen();\n                // 设置音量按钮位置\n                this.setProgressAndVolumeButton();\n                // 绑定鼠标移出事件\n                $('#' + _id).on('mouseleave', cssOrm.hitch(this._mouseLeaveEvent, this));\n                // 绑定鼠标移入事件\n                $('#' + _id).on('mouseenter', cssOrm.hitch(this._mouseEnterEvent, this));\n                // 触屏进入\n                $('#' + _id).on('touchEnter', cssOrm.hitch(this._mouseEnterEvent, this));\n                // 触屏离开\n                $('#' + _id).on('touchLeave', cssOrm.hitch(this._mouseLeaveEvent, this));\n            };\n            // 点击start的事件\n            RxmDisplayVideoImpl.prototype._tapStart = function (e, data) {\n                // 显示video总时间方法\n                this.showVideoTotalTime();\n                $wrap.trigger(_msgEnum.started);\n            };\n            // 点击pause的事件\n            RxmDisplayVideoImpl.prototype._tapPause = function (e, data) {\n                $wrap.trigger(_msgEnum.paused);\n            };\n            // 点击进度条事件\n            RxmDisplayVideoImpl.prototype._tapProgress = function (e, data) {\n                var currentX = e.pageX;\n                $wrap.trigger(_msgEnum.loadProgress, currentX);\n            };\n            // 点击音量调节事件\n            RxmDisplayVideoImpl.prototype._tapVolume = function (e, data) {\n                var currentX = e.offsetX;\n                $wrap.trigger(_msgEnum.setVolume, currentX);\n            };\n            // 点击静音事件\n            RxmDisplayVideoImpl.prototype._tabVolumeMute = function (e, data) {\n                $wrap.trigger(_msgEnum.volumeMute);\n            };\n            // 点击全屏按钮事件\n            RxmDisplayVideoImpl.prototype._tapFullScreen = function () {\n                $wrap.trigger(_msgEnum.fullScreen);\n            };\n            // 鼠标离开视频区域事件\n            RxmDisplayVideoImpl.prototype._mouseLeaveEvent = function () {\n                var the = this;\n                _mouseTag = false;\n                setTimeout(function () {\n                    if (_leaveTime > 2) {\n                        $wrap.find('.som-video-ctrl').css('display', 'none');\n                        return;\n                    }\n                    if (!_mouseTag) {\n                        _leaveTime += 1;\n                        the._mouseLeaveEvent();\n                    }\n                }, 1000);\n            };\n            // 鼠标进入视频区域事件\n            RxmDisplayVideoImpl.prototype._mouseEnterEvent = function () {\n                _leaveTime = 0;\n                _mouseTag = true;\n                $wrap.find('.som-video-ctrl').css('display', '');\n            };\n            // 组件被调用时 获取当前组件的html\n            RxmDisplayVideoImpl.prototype.getWrap = function (html) {\n                if (html) {\n                    $wrap = $(html);\n                    if (typeof _cfg.id !== 'undefined') {\n                        $wrap = $('#' + _cfg.id);\n                    }\n                    else {\n                        $wrap = $('#' + appTool.unid());\n                    }\n                }\n                return $wrap.get(0).outerHTML;\n            };\n            // 设置按钮位置\n            RxmDisplayVideoImpl.prototype.setProgressAndVolumeButton = function () {\n                var width = $('#' + _id).find('.som-volume-set').width();\n                var iconWidth = $('#' + _id).find('.som-volume-set').find('i').width();\n                $('#' + _id).find('.som-volume-set').find('i').css('margin-left', width - iconWidth + 'px');\n                width = $('#' + _id).find('.som-progress-ctrl').width();\n                iconWidth = $('#' + _id).find('.som-progress-ctrl').find('i').width();\n                $('#' + _id).find('.som-progress-ctrl').find('i').css('margin-left', -iconWidth + 'px');\n                $('#' + _id).find('.som-start-ctrl').find('.fa-play').css('display', '');\n                $('#' + _id).find('.som-start-strl').find('.fa-pause').css('display', 'none');\n            };\n            /// <summary>开始播放音频/视频</summary>\n            RxmDisplayVideoImpl.prototype.play = function () {\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var video = $wrap.find('video')[0];\n                    video.play();\n                    $wrap.find('.som-start-ctrl').find('.fa-play').css('display', 'none');\n                    $wrap.find('.som-start-ctrl').find('.fa-pause').css('display', '');\n                    // 播放\n                    video.play();\n                    // 计时\n                    this.bindSetProgressTime(true);\n                    // 隐藏浮动窗口\n                    $wrap.find('.rxmdk-video-float-ctrl').css('display', 'none');\n                }\n            };\n            /// <summary>暂停当前播放的音频/视频</summary>\n            RxmDisplayVideoImpl.prototype.pause = function () {\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    $wrap.find('.som-start-ctrl').find('.fa-pause').css('display', 'none');\n                    $wrap.find('.som-start-ctrl').find('.fa-play').css('display', '');\n                    var video = $wrap.find('video')[0];\n                    // 停止\n                    video.pause();\n                    // 停止计时\n                    this.bindSetProgressTime(false);\n                    // 判定是否有浮动窗口需要展示\n                    var content = $wrap.find('.rxmdk-video-float-ctrl').html();\n                    if (content != null && content.length != 0) {\n                        $wrap.find('.rxmdk-video-float-ctrl').css('display', '');\n                    }\n                }\n            };\n            /// <summary>开始事件绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindStarted = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onStarted\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.started, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>开始激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onStarted = function () {\n                /// TODO\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var video = $wrap.find('video')[0];\n                    video.controls = false;\n                    $wrap.find('.som-start-ctrl').find('.fa-play').css('display', 'none');\n                    $wrap.find('.som-start-ctrl').find('.fa-pause').css('display', '');\n                    // 播放\n                    video.play();\n                    // 计时\n                    this.bindSetProgressTime(true);\n                    // 隐藏浮动窗口\n                    $wrap.find('.rxmdk-video-float-ctrl').css('display', 'none');\n                }\n            };\n            // 计时显示控制\n            RxmDisplayVideoImpl.prototype.bindSetProgressTime = function (tag) {\n                var the = this;\n                var cTime;\n                if (tag) {\n                    cTime = setTimeout(function () {\n                        var video = $wrap.find('video')[0];\n                        var currentTime = video.currentTime;\n                        // 显示浮标位置\n                        var duration = video.duration;\n                        if (currentTime == duration) {\n                            the._onReset();\n                            return;\n                        }\n                        var currentLocation = currentTime * totalWidth / duration;\n                        $wrap.find('.som-progress-ctrl').find('i').css('margin-left', currentLocation - _iWidth + 'px');\n                        // 显示当前时间\n                        currentTime = formatTime(currentTime);\n                        $wrap.find('.som-currentTime-ctrl').text(currentTime);\n                        if ($wrap.find('.som-start-ctrl').find('.fa-play').css('display') == 'none') {\n                            the.bindSetProgressTime(true);\n                        }\n                        else {\n                            the.bindSetProgressTime(false);\n                        }\n                    }, 500);\n                }\n                else {\n                    clearTimeout(cTime);\n                }\n            };\n            // 设定视频总时间\n            RxmDisplayVideoImpl.prototype.showVideoTotalTime = function () {\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var video = $wrap.find('video')[0];\n                    var duration = video.duration;\n                    if (!isNaN(duration)) {\n                        $wrap.find('.som-totalTime-ctrl').text(formatTime(duration));\n                    }\n                }\n            };\n            /// <summary>开始事件绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindFullScreen = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onFullScreen\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.fullScreen, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            // 全屏播放视频\n            RxmDisplayVideoImpl.prototype._onFullScreen = function () {\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var video = $wrap.find('video')[0];\n                    this.autoFullScrenn(video);\n                }\n            };\n            /// <summary>单击player事件绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindTapInPlayer = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onTapInPlayer\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.tapInPlayer, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>单击player激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onTapInPlayer = function () {\n                /// TODO\n            };\n            /// <summary>重启事件绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindReset = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onReset\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.reset, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>重启激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onReset = function () {\n                /// TODO\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var video = $wrap.find('video')[0];\n                    video.currentTime = 0;\n                    this._onStarted();\n                }\n            };\n            /// <summary>加载进程事件绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindLoadProgress = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onLoadProgress\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.loadProgress, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>加载进程激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onLoadProgress = function (e, currentX) {\n                /// TODO\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var length = $wrap.find('.som-progress-ctrl').width();\n                    var percent = currentX / length;\n                    var video = $wrap.find('video')[0];\n                    var duration = video.duration;\n                    var currentTime = duration * currentX / length;\n                    video.currentTime = currentTime;\n                    //var iWidth = $wrap.find('.som-progress-ctrl').find('i').width()\n                    $wrap.find('.som-progress-ctrl').find('i').css('margin-left', currentX - _iWidth + 'px');\n                }\n            };\n            /// <summary>暂停事件事件绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindPaused = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onPaused\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.paused, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>暂停事件激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onPaused = function () {\n                /// TODO\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    $wrap.find('.som-start-ctrl').find('.fa-pause').css('display', 'none');\n                    $wrap.find('.som-start-ctrl').find('.fa-play').css('display', '');\n                    var video = $wrap.find('video')[0];\n                    // 停止\n                    video.pause();\n                    // 停止计时\n                    this.bindSetProgressTime(false);\n                    // 判定是否有浮动窗口需要展示\n                    var content = $wrap.find('.rxmdk-video-float-ctrl').html();\n                    if (content != null && content.length != 0) {\n                        $wrap.find('.rxmdk-video-float-ctrl').css('display', '');\n                    }\n                }\n            };\n            /// <summary>停止事件绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindStopped = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onStopped\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.stopped, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>停止激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onStopped = function () {\n                /// TODO\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    $wrap.find('.som-start-ctrl').find('.fa-stop').css('display', 'none');\n                    $wrap.find('.som-start-ctrl').find('.fa-play').css('display', '');\n                    var video = $wrap.find('video')[0];\n                    // 停止\n                    video.pause();\n                    // 停止计时\n                    this.bindSetProgressTime(false);\n                }\n            };\n            /// <summary>音量调节绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindSetVolume = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onSetVolume\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.setVolume, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>调节音量激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onSetVolume = function (e, currentX) {\n                /// TODO\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var video = $wrap.find('video')[0];\n                    var totalWidth = $wrap.find('.som-volume-set').width();\n                    var percent = currentX / totalWidth;\n                    video.volume = percent;\n                    if (percent > 0) {\n                        $wrap.find('.som-volume-ctrl').find('i').addClass('fa-volume-up');\n                        $wrap.find('.som-volume-ctrl').find('i').removeClass('fa-volume-off');\n                    }\n                    var iconWidth = $wrap.find('.som-volume-set').find('i').width();\n                    $wrap.find('.som-volume-set').find('i').css('margin-left', currentX - iconWidth + 'px');\n                }\n            };\n            /// <summary>静音绑定</summary>\n            RxmDisplayVideoImpl.prototype.bindVolumeMute = function (arg, scope) {\n                if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n                    arg = {\n                        fn: this._onVolumeMute\n                    };\n                    scope = this;\n                }\n                var the = this;\n                if ($.isExist(scope)) {\n                    the = scope;\n                }\n                $wrap.on(_msgEnum.volumeMute, arg.data, cssOrm.hitch(arg.fn, the), arg.one);\n            };\n            /// <summary>静音激发函数</summary>\n            RxmDisplayVideoImpl.prototype._onVolumeMute = function () {\n                /// TODO\n                if ($wrap.find('video') != null && $wrap.find('video').length != 0) {\n                    var video = $wrap.find('video')[0];\n                    if ($wrap.find('.som-volume-ctrl').children('i').hasClass('fa-volume-up')) {\n                        $wrap.defaultVolume = video.volume;\n                        video.volume = 0;\n                        $wrap.find('.som-volume-ctrl').children('i').removeClass('fa-volume-up');\n                        $wrap.find('.som-volume-ctrl').children('i').addClass('fa-volume-off');\n                        $wrap.find('.som-volume-set').find('i').css('margin-left', 0);\n                    }\n                    else {\n                        video.volume = $wrap.defaultVolume;\n                        var volumeWidth = $wrap.find('.som-volume-set').width();\n                        $wrap.find('.som-volume-ctrl').children('i').removeClass('fa-volume-off');\n                        $wrap.find('.som-volume-ctrl').children('i').addClass('fa-volume-up');\n                        var iconWidth = $wrap.find('.som-volume-set').find('i').width();\n                        $wrap.find('.som-volume-set').find('i').css('margin-left', volumeWidth * video.volume - iconWidth + 'px');\n                    }\n                }\n            };\n            RxmDisplayVideoImpl.prototype.fullscreen = function (elem) {\n                var prefix = 'webkit';\n                if (elem[prefix + 'RequestFullScreen']) {\n                    return prefix + 'RequestFullScreen';\n                }\n                else if (elem[prefix + 'EnterFullScreen']) {\n                    return prefix + 'EnterFullScreen';\n                }\n                return false;\n            };\n            RxmDisplayVideoImpl.prototype.autoFullScrenn = function (v) {\n                var ua = navigator.userAgent.toLowerCase();\n                var Android = String(ua.match(/android/i)) == 'android';\n                // if(!Android) return;//非android系统不使用;\n                var video = v, doc = document;\n                var fullscreenvideo = this.fullscreen(doc.createElement('video'));\n                if (!fullscreenvideo) {\n                    alert('不支持全屏模式');\n                    return;\n                }\n                video[fullscreenvideo]();\n            };\n            RxmDisplayVideoImpl.prototype.attrId = function (value) {\n                if (value) {\n                    var jqWidget = $(this.getWrap());\n                    jqWidget.attr('id', value);\n                    this.getWrap(jqWidget.get(0).outerHTML);\n                }\n            };\n            RxmDisplayVideoImpl.prototype.attrVideoUrl = function (value) {\n                /// <summary>视频播放地址</summary>\n                /// <param  name=\"value\" value=\"event\"></param>\n                (!!value) && (value !== '') && (($wrap.attr('videoUrl', value)));\n                (!!value) && (value === '') && (($wrap.removeAttr('videoUrl')));\n                return $wrap.attr('videoUrl');\n            };\n            RxmDisplayVideoImpl.prototype.attrThumbnail = function (value) {\n                /// <summary>视频的缩略图，用于播放之前的显示</summary>\n                /// <param  name=\"value\" value=\"event\"></param>\n                (!!value) && (value !== '') && (($wrap.attr('thumbnail', value)));\n                (!!value) && (value === '') && (($wrap.removeAttr('thumbnail')));\n                return $wrap.attr('thumbnail');\n            };\n            RxmDisplayVideoImpl.prototype.attrFloatWidgetUrl = function (value) {\n                /// <summary>暂停或者缓冲时，浮动窗口显示的内容</summary>\n                /// <param  name=\"value\" value=\"event\"></param>\n                (!!value) && (value !== '') && (($wrap.attr('floatWidgetUrl', value)));\n                (!!value) && (value == '') && (($wrap.removeAttr('floatWidgetUrl')));\n                return $wrap.attr('floatWidgetUrl');\n            };\n            RxmDisplayVideoImpl.prototype.attrSpotsVideoUrl = function (value) {\n                /// <summary>插播视频url，正式视频播放之前及间隔播放</summary>\n                /// <param  name=\"value\" value=\"event\"></param>\n                (!!value) && (value !== '') && (($wrap.attr('spotsVideoUrl', value)));\n                (!!value) && (value === '') && (($wrap.removeAttr('spotsVideoUrl')));\n                return $wrap.attr('spotsVideoUrl');\n            };\n            RxmDisplayVideoImpl.prototype.attrFetchVideoListUrl = function (value) {\n                /// <summary>获取视频的播放列表的服务地址，没有时，在本页查找list</summary>\n                /// <param  name=\"value\" value=\"event\"></param>\n                (!!value) && (value !== '') && (($wrap.attr('fetchVideoListUrl', value)));\n                (!!value) && (value === '') && (($wrap.removeAttr('fetchVideoListUrl')));\n                return $wrap.attr('fetchVideoListUrl');\n            };\n            RxmDisplayVideoImpl.prototype.init = function () {\n                this.initEvent();\n            };\n            return RxmDisplayVideoImpl;\n        }());\n        var ret = new RxmDisplayVideoImpl();\n        var rqr = window;\n        rqr.require('RxmPageBase').bindPageReady({ callback: $.proxy(ret.init, ret), one: true });\n        return ret;\n    };\n    return clsFactory;\n});\n","define(\"RxmTopCmdQueue\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    ///<amd-module name='RxmTopCmdQueue'/>\n    var rqr = window;\n    /**@type  {Object.<string,Object.<string,string>} */\n    var cmdEvts = {};\n    var ismbl = function () { typeof rxm_page != \"undefined\"; };\n    /**\n     * 接收其他窗口的消息\n     */\n    var listenFrom = function () {\n        /**@type {rxm.Page} */\n        var page = rqr.require('RxmPageBase');\n        page.bindPageNotify();\n    };\n    var cmdTopQueue = /** @class */ (function () {\n        function cmdTopQueue() {\n        }\n        /**\n          * 根据rxmcmdid 绑定消息\n          * @param {rxm.cmd.bindArgs |{bindWinId:'',triggerWinId:''}} args\n          */\n        cmdTopQueue.prototype.bindCmd = function (args, triggerFun) {\n            /**@type {Object.<string,string>} */\n            var tmp = cmdEvts[args.msgType];\n            !tmp && (cmdEvts[args.msgType] = {});\n            cmdEvts[args.msgType][args.bindWinId] = triggerFun;\n        };\n        cmdTopQueue.prototype.unbindCmd = function () { };\n        /**\n      * @param {Object} data\n      * @param {Event|{data:{}}} e  可选 由domelement （页面标签） 发起trigger e =页面标签事件 ，\n      * @param {rxm.cmd.bindArgs|{bindWinId:'',triggerWinId:''}}  args  可选\n      */\n        cmdTopQueue.prototype.triggerCmd = function (args) {\n            /**@type {Array.<rxm.cmd.bindArgs |{bindWinId:'',triggerWinId:''}>} */\n            var tmp = cmdEvts[args.msgType];\n            /**@type {rxm.cmd.bindArgs |{iframeid:String} }*/\n            var it;\n            if (tmp) {\n                for (it in tmp) {\n                    if (it == args.triggerWinId) {\n                        continue;\n                    }\n                    //\n                    tmp[it](args);\n                }\n            }\n        };\n        return cmdTopQueue;\n    }());\n    var ret = (function () {\n        //自己就是消息队列的拥有者\n        var istop = false;\n        var widget = window;\n        for (var i = 0; i < 10; i++) // 最多嵌套5层\n         {\n            if (widget.cssOrm && widget.cssOrm.obj && widget.cssOrm.obj.__rxmdispather) {\n                return widget.cssOrm.obj.__rxmdispather;\n            }\n            else {\n                if (window.top == widget.self) {\n                    rqr.cssOrm.obj.__rxmdispather = new cmdTopQueue();\n                    return rqr.cssOrm.obj.__rxmdispather;\n                }\n                widget = widget.parent;\n            }\n        }\n    }());\n    return ret;\n});\n","define('RxmLoginJs', [\"RxmModuleLoginDir\", require.rxm.Util], (function (lgn, util) {\n    ///<param name=\"lgn\" value=\"objLoginBase\"></param>\n    lgn._oldSuccess = lgn.onPostCheckPwdSuccess;\n    lgn.onPostCheckPwdSuccess = function (data) {\n        ///<summary>重载登录成功函数</summary>\n        if (!data.success) {\n            util.alert(cssOrm.default.prompt.userError); //你们自己 写一下，密码错误的提示\n            //this.onRefreshCaptcha();\n            $(this.btnSubmitSelector).html(\"登录\").removeClass(\"disabled\");\n            this._enterSubmit = true;\n        }\n        else {\n            lgn._oldSuccess(data);\n        }\n    };\n    lgn.init();\n}));\n","define(\"RxmMd5Bulid\", [], function () {\n    var cls = function () {\n    };\n    /* bits per input character. 8 - ASCII; 16 - Unicode  */\n    var chrsz = 8;\n    /* hex output format. 0 - lowercase; 1 - uppercase  */\n    var hexcase = 0;\n    cls.prototype.buildMd5 = function (s) {\n        return binl2hex(core_md5(str2binl(s), s.length * chrsz));\n    };\n    function core_md5(x, len) {\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n        var a = 1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d = 271733878;\n        for (var i = 0; i < x.length; i += 16) {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n            a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n            d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n            b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n            d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n            c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n            d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n            a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n            d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n            c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n            b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n            d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n            d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n            c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n            a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n            d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n            c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n            a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n            d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n            d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n            c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n            d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n            a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n            b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n            a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n            d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n            d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n            a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n            b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return Array(a, b, c, d);\n    }\n    /*\n     *  * Bitwise rotate a 32-bit number to the left.\n     */\n    function bit_rol(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    }\n    /*\n     *  * Add integers, wrapping at 2^32. This uses 16-bit operations internally  *\n     * to work around bugs in some JS interpreters.\n     */\n    function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n    /*\n     *  * These functions implement the four basic operations the algorithm uses.\n     */\n    function md5_ff(a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n    function md5_cmn(q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n    }\n    function md5_gg(a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n    function md5_hh(a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n    function md5_ii(a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n    /*\n     *  * Convert an array of little-endian words to a hex string.\n     */\n    function binl2hex(binarray) {\n        var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n        var str = \"\";\n        for (var i = 0; i < binarray.length * 4; i++) {\n            str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF)\n                + hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF);\n        }\n        return str;\n    }\n    function str2binl(str) {\n        var bin = Array();\n        var mask = (1 << chrsz) - 1;\n        for (var i = 0; i < str.length * chrsz; i += chrsz)\n            bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (i % 32);\n        return bin;\n    }\n    return new cls();\n});\n","define('RxmDefaultv', [], function (a) {\n    // 对应页面的主入口 初始化对象定义\n    !cssOrm.default && (cssOrm.default = {});\n    !cssOrm.default.homePages && (cssOrm.default.homePages = ['RxmModuleDir/core/login/login',\n        'RxmModuleDir/core/home/home',\n        'RxmModuleDir/core/jump/jumpPage']);\n    /**\n     *  配置对象定义\n     *  可以通过重写/www/config/ormdefault.js文件，对以下定义对象中的参数进行重写设置\n     */\n    // 1、home首页顶部标题栏默认参数值设置\n    !cssOrm.default.homePageArgs && (cssOrm.default.homePageArgs = {});\n    // 2、home首页底部tabbar默认参数值设置\n    !cssOrm.default.homePageDefault && (cssOrm.default.homePageDefault = {});\n    // 3、jumpPage跳转页默认参数值设置\n    !cssOrm.default.loadPageDefault && (cssOrm.default.loadPageDefault = {});\n    // 4、ios设备禁止webview滑动回弹效果默认参数值设置\n    !cssOrm.default.forbidWebViewAttDefault && (cssOrm.default.forbidWebViewAttDefault = {});\n    // 5、gridMobile默认参数值设置\n    !cssOrm.default.clsGridMobile && (cssOrm.default.clsGridMobile = {});\n    !cssOrm.default.clsGridMobile.param && (cssOrm.default.clsGridMobile.param = {});\n    !cssOrm.default.clsGridMobile.refreshTip && (cssOrm.default.clsGridMobile.refreshTip = {});\n    // 6、原生appUploader默认参数值设置\n    !cssOrm.default.clsAppUploader && (cssOrm.default.clsAppUploader = {});\n    !cssOrm.default.clsAppUploader.appUploader && (cssOrm.default.clsAppUploader.appUploader = {});\n    // 7、wifi设置默认参数值设置\n    !cssOrm.default.wifi && (cssOrm.default.wifi = {});\n    // 8、录像功能默认参数值设置\n    !cssOrm.default.video && (cssOrm.default.video = {});\n    // 9、录音功能默认参数值设置\n    !cssOrm.default.voice && (cssOrm.default.voice = {});\n    // 10、图片默认参数值设置\n    !cssOrm.default.image && (cssOrm.default.image = {});\n    // 11、数据库默认参数值设置\n    !cssOrm.default.dbParam && (cssOrm.default.dbParam = {});\n    // 12、页面加载模式默认参数值设置  \n    !cssOrm.default.loadTarget && (cssOrm.default.loadTarget = {});\n    // 13、日期选择器默认参数值设置 \n    !cssOrm.default.openDatePicker && (cssOrm.default.openDatePicker = {});\n    // 14、提示对话框默认参数值设置 \n    !cssOrm.default.alert && (cssOrm.default.alert = {});\n    // 15、确认对话框默认参数值设置 \n    !cssOrm.default.confirm && (cssOrm.default.confirm = {});\n    // 16、提示框默认参数值设置\n    !cssOrm.default.utilPrompt && (cssOrm.default.utilPrompt = {});\n    // 17、滑动窗格默认参数值设置\n    !cssOrm.default.clsSliderIconView && (cssOrm.default.clsSliderIconView = {});\n    // 18、提示信息默认参数值设置\n    !cssOrm.default.prompt && (cssOrm.default.prompt = {});\n    // 19、文件上传默认参数值设置\n    !cssOrm.default.clsFileUploader && (cssOrm.default.clsFileUploader = {});\n    // 20、form表单默认参数值设置\n    !cssOrm.default.clsOrmForm && (cssOrm.default.clsOrmForm = {});\n    // 21、图片处理默认参数设置\n    !cssOrm.default.clsOrmImage && (cssOrm.default.clsOrmImage = {});\n    /**\n     * 1、home首页顶部标题栏默认参数值设置(9个参数)\n     */\n    //打开方式\n    cssOrm.default.homePageArgs.target = '_self';\n    //是否隐藏标题栏 0：显示；1：隐藏 默认为1\n    cssOrm.default.homePageArgs.hiddenTitleBar = 1;\n    //隐藏标题栏返回按钮 0：显示；1：隐藏 默认为1\n    cssOrm.default.homePageArgs.hiddenBackBtn = 1;\n    //打开窗口时候的共有数据 object 类型\n    cssOrm.default.homePageArgs.data = {};\n    //默认的标题     \n    cssOrm.default.homePageArgs.title = \"\";\n    //默认的标题字体颜色\n    cssOrm.default.homePageArgs.titleColor = \"#ffffff\";\n    //默认的标题栏背景\n    cssOrm.default.homePageArgs.titleBarBg = \"#0088cc\";\n    //多个菜单项之间用逗号分隔 例如\"完成,设置\"\n    cssOrm.default.homePageArgs.menu = \"\";\n    //菜单项文字颜色值 \n    cssOrm.default.homePageArgs.menuTextColor = \"#ffffff\";\n    /**\n     * 2、home首页底部tabbar默认参数值设置(5个参数)\n     */\n    //tab文字\n    cssOrm.default.homePageDefault.tabTxt = \"\";\n    //是否显示消息未读数 0：不显示；1：显示数字 2：显示小红点，默认0\n    cssOrm.default.homePageDefault.showbadged = \"0\";\n    //tab默认背景颜色\n    cssOrm.default.homePageDefault.tabBackGroundColor = \"#ffffff\";\n    //tab选中文字颜色\n    cssOrm.default.homePageDefault.tabTxtSelectColor = \"\";\n    //tab未选中文字颜色\n    cssOrm.default.homePageDefault.tabTxtUnSelectColor = \"\";\n    /**\n     * 3、jumpPage跳转页默认参数值定义(9个参数)\n     */\n    //可选，打开新窗口时传入参数\n    cssOrm.default.loadPageDefault.data = {},\n        //可选，标题，默认空\n        cssOrm.default.loadPageDefault.title = \"\",\n        //可选，title颜色\t#ffffff，title参数为空时无效\n        cssOrm.default.loadPageDefault.titleColor = \"\",\n        //可选，是否隐藏导航栏  默认值 false\n        cssOrm.default.loadPageDefault.hiddenTitleBar = \"\",\n        //可选，是否隐藏导航栏返回按钮,hiddenTitleBar参数为true时无效\n        cssOrm.default.loadPageDefault.hiddenBackBtn = \"\",\n        //可选，标题栏背景，支持图片和颜色值（#0088cc）,hiddenTitleBar参数为true时无效\n        cssOrm.default.loadPageDefault.titleBarBg = \"\",\n        //可选，多个菜单项之间用逗号分隔\"完成,设置\",hiddenTitleBar参数为true时无效\n        cssOrm.default.loadPageDefault.menu = \"\",\n        //可选，菜单项文字颜色值 ,hiddenTitleBar参数为true时无效 \t#ffffff\n        cssOrm.default.loadPageDefault.menuTextColor = \"\",\n        //可选，窗口关闭叫回函数 形如 function(arg)\n        cssOrm.default.loadPageDefault.afterClose = function (e, arg) { };\n    /**\n     * 4、ios设备禁止webview滑动回弹效果(2个参数)\n     */\n    // webview滑动  1表示禁用，0表示不禁用，默认为0\n    cssOrm.default.forbidWebViewAttDefault.scroll = 0;\n    // webview回弹  1表示禁用，0表示不禁用，默认为0\n    cssOrm.default.forbidWebViewAttDefault.bounce = 0;\n    /**\n     * 5、gridMobile默认参数值定义(13个参数)\n     */\n    // 每页数据条目数  默认30\n    cssOrm.default.clsGridMobile.pageSize = 30;\n    // 数据选中 单选[radio]还是多选[checkbox],默认checkbox 默认改为不显示 桌面端不显示  移动端为checkbox\n    // cssOrm.default.clsGridMobile.multi = true\n    // 数据是否换行，还是隐藏多余字符(true 省略多余字符,其他字符用三个点代替  false 换行显示所有内容 ) 默认省略多余字符\n    cssOrm.default.clsGridMobile.textEllipsis = true;\n    // 数据缓存参数设置  最大显示页数 默认10页\n    cssOrm.default.clsGridMobile.param.viweMaxLen = 10;\n    // 最大缓存页数 默认30页\n    cssOrm.default.clsGridMobile.param.cacheMaxLen = 30;\n    // 提示语默认值设置 下拉到顶开始提示语设置\n    cssOrm.default.clsGridMobile.refreshTip.topTipBegin = '下拉刷新...';\n    // 下拉到顶开始提示语设置\n    cssOrm.default.clsGridMobile.refreshTip.topTipRefresh = '松开即可刷新...';\n    // 加载中提示语\n    cssOrm.default.clsGridMobile.refreshTip.topTipLoading = '加载中...';\n    // 数据刷新提示语\n    cssOrm.default.clsGridMobile.refreshTip.topTipSuccess = '数据刷新成功';\n    // 数据刷新失败提示语\n    cssOrm.default.clsGridMobile.refreshTip.topTipError = '数据刷新失败';\n    // 上拉到底加载中提示语\n    cssOrm.default.clsGridMobile.refreshTip.bottomTipLoading = '数据加载中...';\n    // 上拉到底加载失败提示语\n    cssOrm.default.clsGridMobile.refreshTip.bottomTipError = '数据加载失败';\n    // 数据没有更多提示语\n    cssOrm.default.clsGridMobile.refreshTip.bottomTipEnd = '没有更多了';\n    // 暂无数据提示语\n    cssOrm.default.clsGridMobile.refreshTip.nodataTip = \"暂无数据！\";\n    /**\n     * 6、原生appUploader默认参数值定义(8个参数)\n     */\n    // String类型\t必选\t文件上传接口地址\n    cssOrm.default.clsAppUploader.appUploader.serverURL = /*cssOrm.obj.clsAppArgs().getUpdateUrl()+*/ '/resoft/x/file/add';\n    // Number类型\t可选\t默认0，文件传送开始的位置\n    cssOrm.default.clsAppUploader.appUploader.startOffset = 0;\n    // Number类型\t可选\t默认-1，传送startOffset开始的全部文件\n    cssOrm.default.clsAppUploader.appUploader.Length = -1;\n    // Number类型\t可选\t是否分段上传，1：分段，0：不分段，默认为0\n    cssOrm.default.clsAppUploader.appUploader.chunked = 1;\n    // Number类型\t可选\t默认值：5。大于1的整数. 单位Mb\n    cssOrm.default.clsAppUploader.appUploader.chunkSize = 1024 * 512;\n    // Number类型\t可选\t分段上传失败时重试次数，默认2次\n    cssOrm.default.clsAppUploader.appUploader.chunkRetry = 2;\n    // Json字符串类型\t可选\t传递给服务器的其他参数\n    cssOrm.default.clsAppUploader.appUploader.formData = {};\n    // Number类型\t可选\t线程池内的线程数，暂不支持\n    cssOrm.default.clsAppUploader.appUploader.threads = 0;\n    /**\n     * 7、wifi设置默认参数值定义(1个参数)\n     */\n    //wifi开启状态监听 1 开启，0 未开启\n    cssOrm.default.wifi.status = '1';\n    /**\n     * 8、录像功能默认参数值定义(5个参数)\n     */\n    //视频录制最大时间,单位s(秒) \n    cssOrm.default.video.maxDuration = '3600';\n    //视频分辨率类型,取值为0,1,2,默认为0。0:1920x1080, 1:1280x720, 2:640x480\n    cssOrm.default.video.qualityType = '1';\n    //视频录制时采样率类型,取值为0, 1, 2, 默认为0, 0: 高采样率, 1: 中采样率, 2: 低采样率\n    cssOrm.default.video.bitRateType = '1';\n    //输出的视频文件格式,默认为mp4。\n    cssOrm.default.video.fileType = 'mp4';\n    //是否需要视频截图 1： 是，0 否，默认 0\n    cssOrm.default.video.needThumb = '0';\n    /**\n     * 9、录音功能默认参数值设置(1个参数)\n     */\n    // 音频格式定义 0:AMR格式,1:CAF格式,2:MP3格式\n    cssOrm.default.voice.mode = '2';\n    /**\n     * 10、图片默认参数值设置(4个参数)\n     */\n    //图片是否压缩,1表示压缩,0或者不传表示不压缩。\n    cssOrm.default.image.comtextareass = '1';\n    //图片压缩质量,comtextareass为1时有效,取值范围[0,100]\n    cssOrm.default.image.quality = '1';\n    //图片宽度\n    cssOrm.default.image.imgWidth = '100';\n    //图片高度\n    cssOrm.default.image.imgHeight = '200';\n    /**\n     * 11、数据库默认参数值设置(2个参数)\n     */\n    // 数据库名称\n    cssOrm.default.dbParam.ormDbName = 'originaldb',\n        // 数据库id\n        cssOrm.default.dbParam.ormDbId = 'originaldbID';\n    /**\n     * 12、页面加载模式默认参数值设置(1个参数)\n     */\n    //_blank:新页面打开;_self:本页面打开\n    cssOrm.default.loadTarget = '_blank';\n    /**\n     * 13、日期选择器默认参数值设置(6个参数)\n     */\n    // 样式类型，默认1；1 显示年月日，0：显示年月\n    cssOrm.default.openDatePicker.withDay = 1;\n    //年   \n    cssOrm.default.openDatePicker.year = '';\n    //月\n    cssOrm.default.openDatePicker.month = '';\n    //日\n    cssOrm.default.openDatePicker.day = '';\n    //开始年\n    cssOrm.default.openDatePicker.startyear = 1900;\n    //结束年，开始年必须小于结束年，否则无效\n    cssOrm.default.openDatePicker.endyear = 2100;\n    /**\n     * 14、提示对话框默认参数值设置(5个参数)\n     */\n    // 0：app系统提示框，1：dialog提示框\n    cssOrm.default.alert.modal = 0;\n    // 提示框标题        \n    cssOrm.default.alert.title = '提示';\n    // 提示框内容     \n    cssOrm.default.alert.content = '提示内容';\n    // 按钮标题\n    cssOrm.default.alert.btnTitle = '确定';\n    // 回调函数\n    cssOrm.default.alert.callback = function () { };\n    /**\n     * 15、确认对话框默认参数值设置(7个参数)\n     */\n    // 0：app系统提示框，1：dialog提示框\n    cssOrm.default.confirm.modal = 0;\n    // 确认框标题       \n    cssOrm.default.confirm.title = '提示';\n    // 确认框内容    \n    cssOrm.default.confirm.content = '提示内容';\n    // 确定按钮标题\n    cssOrm.default.confirm.okBT = '确定';\n    // 取消按钮标题\n    cssOrm.default.confirm.cancelBT = '取消';\n    // 确定回调函数  \n    cssOrm.default.confirm.okCb = function () { };\n    // 取消回调函数\n    cssOrm.default.confirm.cancelCb = function () { };\n    /**\n     * 16、提示框默认参数值设置(6个参数)\n     */\n    // 要在 window 上弹出的对话框中显示的纯文本（而非 HTML 文本）\n    cssOrm.default.utilPrompt.message = '';\n    // 默认的输入文本  \n    cssOrm.default.utilPrompt.text = '请输入内容';\n    // 默认的输入文本placeholder  \n    cssOrm.default.utilPrompt.placeholder = '';\n    // 确认框标题  \n    cssOrm.default.utilPrompt.title = '提示';\n    // 弹出框标题，默认值“确定”      \n    cssOrm.default.utilPrompt.btnok = '确定';\n    // 弹出框标题，默认值“取消”     \n    cssOrm.default.utilPrompt.btncancel = '取消';\n    /**\n     * 17、滑动窗格默认参数值设置(6个参数)\n     */\n    // 滑动窗格数据\n    cssOrm.default.clsSliderIconView.data = [];\n    // dock数据\n    cssOrm.default.clsSliderIconView.dockData = [];\n    // 每项的宽度\t\n    cssOrm.default.clsSliderIconView.itemWidth = 50;\n    // 每项的高度\t\t\t\t\n    cssOrm.default.clsSliderIconView.itemHeight = 50;\n    // 图标宽度\t\t\t\t\n    cssOrm.default.clsSliderIconView.iconWidth = 48;\n    // 图标高度\t\t\t\t\n    cssOrm.default.clsSliderIconView.iconHeight = 48;\n    // 文字高度\t\t\t\n    cssOrm.default.clsSliderIconView.textHeight = 14;\n    // 文字行高\t\t\t\n    cssOrm.default.clsSliderIconView.textLineHeight = 14;\n    // 分页控件高度\t\t\t\t\n    cssOrm.default.clsSliderIconView.pageControlH = 10;\n    // 图标的间距 与column 两选一\n    cssOrm.default.clsSliderIconView.itemGap = 30;\n    // 服务器路径                 \n    cssOrm.default.clsSliderIconView.serverPath = '';\n    // 每项上边距\t\t\t\t\t\n    cssOrm.default.clsSliderIconView.itemMarginTop = 20;\n    // 每项下边距               \n    cssOrm.default.clsSliderIconView.itemMarginBottom = 0;\n    // 惯性系数\t\n    cssOrm.default.clsSliderIconView.inertia = 100;\n    // 滚动时长\t\t\t\t\t\n    cssOrm.default.clsSliderIconView.duration = 500;\n    // 显示分页\t   \n    cssOrm.default.clsSliderIconView.showPage = true;\n    // 是否分组，默认不分组\t\t\t\t\n    cssOrm.default.clsSliderIconView.group = false;\n    /**\n     * 18、提示信息默认参数值设置(9个参数)\n     */\n    //网络失败提示语\n    cssOrm.default.prompt.noNetwork = '网络连接失败!';\n    //用户名密码错误提示语\n    cssOrm.default.prompt.userError = '用户名或密码错误!';\n    //登录过期提示语\n    cssOrm.default.prompt.sessionOutFlag = '登录过期，请重新登录';\n    //请求异常提示语\n    cssOrm.default.prompt.appError = '请求异常!';\n    //请求资源未授权提示语\n    cssOrm.default.prompt.unauthorised = '请求的资源未授权！';\n    //重新登录提示胡\n    cssOrm.default.prompt.reLogin = '权限更新，请重新登录';\n    //重新启动提示语\n    cssOrm.default.prompt.restart = '版本升级，请重新启动';\n    //服务异常提示语\n    cssOrm.default.prompt.serverError = '服务器端异常,请联系管理员';\n    //登录失败提示语\n    cssOrm.default.prompt.loginError = '网络请求异常,请检查网络设置!';\n    /**\n     * 19、文件上传默认参数值设置(1个参数)\n     */\n    // false 调用百度上传 true 调用本地上传\n    cssOrm.default.clsFileUploader.isLocalLoad = true;\n    /**\n     * 20、form表单默认参数值设置(1个参数)\n     */\n    //config对象默认值\n    cssOrm.default.clsOrmForm.cfg = {};\n    cssOrm.default.rxmscrll = {};\n    cssOrm.default.rxmscrll.theme = \"minimal-dark\",\n        cssOrm.default.rxmscrll.scrollButtons = { enable: true };\n    /**\n     * 21、图片处理默认参数设置(1个参数)\n     */\n    //ontap事件\n    cssOrm.default.clsOrmImage.ontap = function () { };\n    /**\n     * 22、默认 a.css-orm-tap  标签tap事件  可以扩展\n     */\n    if (!cssOrm.default.onTapDefault) {\n        cssOrm.default.onTapDefault = function (e) {\n            var o = this;\n            var args = new cssOrm.default.loadPageDefault.constructor();\n            var arg = $(o).data('ormload-args');\n            arg = $.extend(true, args, arg, { target: $(o).attr('target') });\n            var hrf = $(o).attr('href');\n            if (hrf.length > 1 && hrf.indexOf('#') == 0) {\n                hrf = hrf.substr(1);\n            }\n            ;\n            var auth = cssOrm.obj.clsOrmPageAuth();\n            auth.load(hrf, args);\n            return false;\n        };\n        $(document.body).on('tap', 'a.css-orm-tap', cssOrm.default.onTapDefault);\n        $(document.body).on('click', 'a.css-orm-tap', function () { event.preventDefault(); event.stopPropagation(); return false; });\n    }\n    // 加载项目组自己定义的默认值ormdefault文件 文件目录/www/config/ormdefault.js\n    require(['RxmConfigDir/ormdefault'], function () { });\n    return cssOrm.default;\n});\n","/*\n * RSA, a suite of routines for performing RSA public-key computations in JavaScript.\n * Copyright 1998-2005 David Shapiro.\n * Dave Shapiro\n * dave@ohdave.com\n * changed by wang_yong, 2015-04-13\n * wang_yong@css.com.cn\n */\ndefine(\"RxmRsa\", function () {\n    var $w = this;\n    if (typeof $w.RSAUtils === 'undefined')\n        var RSAUtils = $w.RSAUtils = {};\n    var biRadixBase = 2;\n    var biRadixBits = 16;\n    var bitsPerDigit = biRadixBits;\n    var biRadix = 1 << 16; // = 2^16 = 65536\n    var biHalfRadix = biRadix >>> 1;\n    var biRadixSquared = biRadix * biRadix;\n    var maxDigitVal = biRadix - 1;\n    var maxInteger = 9999999999999998;\n    //maxDigits:\n    //Change this to accommodate your largest number size. Use setMaxDigits()\n    //to change it!\n    //\n    //In general, if you're working with numbers of size N bits, you'll need 2*N\n    //bits of storage. Each digit holds 16 bits. So, a 1024-bit key will need\n    //\n    //1024 * 2 / 16 = 128 digits of storage.\n    //\n    var maxDigits;\n    var ZERO_ARRAY;\n    var bigZero, bigOne;\n    var BigInt = $w.BigInt = function (flag) {\n        if (typeof flag == \"boolean\" && flag == true) {\n            this.digits = null;\n        }\n        else {\n            this.digits = ZERO_ARRAY.slice(0);\n        }\n        this.isNeg = false;\n    };\n    RSAUtils.setMaxDigits = function (value) {\n        maxDigits = value;\n        ZERO_ARRAY = new Array(maxDigits);\n        for (var iza = 0; iza < ZERO_ARRAY.length; iza++)\n            ZERO_ARRAY[iza] = 0;\n        bigZero = new BigInt();\n        bigOne = new BigInt();\n        bigOne.digits[0] = 1;\n    };\n    RSAUtils.setMaxDigits(20);\n    //The maximum number of digits in base 10 you can convert to an\n    //integer without JavaScript throwing up on you.\n    var dpl10 = 15;\n    RSAUtils.biFromNumber = function (i) {\n        var result = new BigInt();\n        result.isNeg = i < 0;\n        i = Math.abs(i);\n        var j = 0;\n        while (i > 0) {\n            result.digits[j++] = i & maxDigitVal;\n            i = Math.floor(i / biRadix);\n        }\n        return result;\n    };\n    //lr10 = 10 ^ dpl10\n    var lr10 = RSAUtils.biFromNumber(1000000000000000);\n    RSAUtils.biFromDecimal = function (s) {\n        var isNeg = s.charAt(0) == '-';\n        var i = isNeg ? 1 : 0;\n        var result;\n        // Skip leading zeros.\n        while (i < s.length && s.charAt(i) == '0')\n            ++i;\n        if (i == s.length) {\n            result = new BigInt();\n        }\n        else {\n            var digitCount = s.length - i;\n            var fgl = digitCount % dpl10;\n            if (fgl == 0)\n                fgl = dpl10;\n            result = RSAUtils.biFromNumber(Number(s.substr(i, fgl)));\n            i += fgl;\n            while (i < s.length) {\n                result = RSAUtils.biAdd(RSAUtils.biMultiply(result, lr10), RSAUtils.biFromNumber(Number(s.substr(i, dpl10))));\n                i += dpl10;\n            }\n            result.isNeg = isNeg;\n        }\n        return result;\n    };\n    RSAUtils.biCopy = function (bi) {\n        var result = new BigInt(true);\n        result.digits = bi.digits.slice(0);\n        result.isNeg = bi.isNeg;\n        return result;\n    };\n    RSAUtils.reverseStr = function (s) {\n        var result = \"\";\n        for (var i = s.length - 1; i > -1; --i) {\n            result += s.charAt(i);\n        }\n        return result;\n    };\n    var hexatrigesimalToChar = [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\n        'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n        'u', 'v', 'w', 'x', 'y', 'z'\n    ];\n    RSAUtils.biToString = function (x, radix) {\n        var b = new BigInt();\n        b.digits[0] = radix;\n        var qr = RSAUtils.biDivideModulo(x, b);\n        var result = hexatrigesimalToChar[qr[1].digits[0]];\n        while (RSAUtils.biCompare(qr[0], bigZero) == 1) {\n            qr = RSAUtils.biDivideModulo(qr[0], b);\n            digit = qr[1].digits[0];\n            result += hexatrigesimalToChar[qr[1].digits[0]];\n        }\n        return (x.isNeg ? \"-\" : \"\") + RSAUtils.reverseStr(result);\n    };\n    RSAUtils.biToDecimal = function (x) {\n        var b = new BigInt();\n        b.digits[0] = 10;\n        var qr = RSAUtils.biDivideModulo(x, b);\n        var result = String(qr[1].digits[0]);\n        while (RSAUtils.biCompare(qr[0], bigZero) == 1) {\n            qr = RSAUtils.biDivideModulo(qr[0], b);\n            result += String(qr[1].digits[0]);\n        }\n        return (x.isNeg ? \"-\" : \"\") + RSAUtils.reverseStr(result);\n    };\n    var hexToChar = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n        'a', 'b', 'c', 'd', 'e', 'f'];\n    RSAUtils.digitToHex = function (n) {\n        var mask = 0xf;\n        var result = \"\";\n        for (i = 0; i < 4; ++i) {\n            result += hexToChar[n & mask];\n            n >>>= 4;\n        }\n        return RSAUtils.reverseStr(result);\n    };\n    RSAUtils.biToHex = function (x) {\n        var result = \"\";\n        var n = RSAUtils.biHighIndex(x);\n        for (var i = RSAUtils.biHighIndex(x); i > -1; --i) {\n            result += RSAUtils.digitToHex(x.digits[i]);\n        }\n        return result;\n    };\n    RSAUtils.charToHex = function (c) {\n        var ZERO = 48;\n        var NINE = ZERO + 9;\n        var littleA = 97;\n        var littleZ = littleA + 25;\n        var bigA = 65;\n        var bigZ = 65 + 25;\n        var result;\n        if (c >= ZERO && c <= NINE) {\n            result = c - ZERO;\n        }\n        else if (c >= bigA && c <= bigZ) {\n            result = 10 + c - bigA;\n        }\n        else if (c >= littleA && c <= littleZ) {\n            result = 10 + c - littleA;\n        }\n        else {\n            result = 0;\n        }\n        return result;\n    };\n    RSAUtils.hexToDigit = function (s) {\n        var result = 0;\n        var sl = Math.min(s.length, 4);\n        for (var i = 0; i < sl; ++i) {\n            result <<= 4;\n            result |= RSAUtils.charToHex(s.charCodeAt(i));\n        }\n        return result;\n    };\n    RSAUtils.biFromHex = function (s) {\n        var result = new BigInt();\n        var sl = s.length;\n        for (var i = sl, j = 0; i > 0; i -= 4, ++j) {\n            result.digits[j] = RSAUtils.hexToDigit(s.substr(Math.max(i - 4, 0), Math.min(i, 4)));\n        }\n        return result;\n    };\n    RSAUtils.biFromString = function (s, radix) {\n        var isNeg = s.charAt(0) == '-';\n        var istop = isNeg ? 1 : 0;\n        var result = new BigInt();\n        var place = new BigInt();\n        place.digits[0] = 1; // radix^0\n        for (var i = s.length - 1; i >= istop; i--) {\n            var c = s.charCodeAt(i);\n            var digit = RSAUtils.charToHex(c);\n            var biDigit = RSAUtils.biMultiplyDigit(place, digit);\n            result = RSAUtils.biAdd(result, biDigit);\n            place = RSAUtils.biMultiplyDigit(place, radix);\n        }\n        result.isNeg = isNeg;\n        return result;\n    };\n    RSAUtils.biDump = function (b) {\n        return (b.isNeg ? \"-\" : \"\") + b.digits.join(\" \");\n    };\n    RSAUtils.biAdd = function (x, y) {\n        var result;\n        if (x.isNeg != y.isNeg) {\n            y.isNeg = !y.isNeg;\n            result = RSAUtils.biSubtract(x, y);\n            y.isNeg = !y.isNeg;\n        }\n        else {\n            result = new BigInt();\n            var c = 0;\n            var n;\n            for (var i = 0; i < x.digits.length; ++i) {\n                n = x.digits[i] + y.digits[i] + c;\n                result.digits[i] = n % biRadix;\n                c = Number(n >= biRadix);\n            }\n            result.isNeg = x.isNeg;\n        }\n        return result;\n    };\n    RSAUtils.biSubtract = function (x, y) {\n        var result;\n        if (x.isNeg != y.isNeg) {\n            y.isNeg = !y.isNeg;\n            result = RSAUtils.biAdd(x, y);\n            y.isNeg = !y.isNeg;\n        }\n        else {\n            result = new BigInt();\n            var n, c;\n            c = 0;\n            for (var i = 0; i < x.digits.length; ++i) {\n                n = x.digits[i] - y.digits[i] + c;\n                result.digits[i] = n % biRadix;\n                // Stupid non-conforming modulus operation.\n                if (result.digits[i] < 0)\n                    result.digits[i] += biRadix;\n                c = 0 - Number(n < 0);\n            }\n            // Fix up the negative sign, if any.\n            if (c == -1) {\n                c = 0;\n                for (var i = 0; i < x.digits.length; ++i) {\n                    n = 0 - result.digits[i] + c;\n                    result.digits[i] = n % biRadix;\n                    // Stupid non-conforming modulus operation.\n                    if (result.digits[i] < 0)\n                        result.digits[i] += biRadix;\n                    c = 0 - Number(n < 0);\n                }\n                // Result is opposite sign of arguments.\n                result.isNeg = !x.isNeg;\n            }\n            else {\n                // Result is same sign.\n                result.isNeg = x.isNeg;\n            }\n        }\n        return result;\n    };\n    RSAUtils.biHighIndex = function (x) {\n        var result = x.digits.length - 1;\n        while (result > 0 && x.digits[result] == 0)\n            --result;\n        return result;\n    };\n    RSAUtils.biNumBits = function (x) {\n        var n = RSAUtils.biHighIndex(x);\n        var d = x.digits[n];\n        var m = (n + 1) * bitsPerDigit;\n        var result;\n        for (result = m; result > m - bitsPerDigit; --result) {\n            if ((d & 0x8000) != 0)\n                break;\n            d <<= 1;\n        }\n        return result;\n    };\n    RSAUtils.biMultiply = function (x, y) {\n        var result = new BigInt();\n        var c;\n        var n = RSAUtils.biHighIndex(x);\n        var t = RSAUtils.biHighIndex(y);\n        var u, uv, k;\n        for (var i = 0; i <= t; ++i) {\n            c = 0;\n            k = i;\n            for (j = 0; j <= n; ++j, ++k) {\n                uv = result.digits[k] + x.digits[j] * y.digits[i] + c;\n                result.digits[k] = uv & maxDigitVal;\n                c = uv >>> biRadixBits;\n                //c = Math.floor(uv / biRadix);\n            }\n            result.digits[i + n + 1] = c;\n        }\n        // Someone give me a logical xor, please.\n        result.isNeg = x.isNeg != y.isNeg;\n        return result;\n    };\n    RSAUtils.biMultiplyDigit = function (x, y) {\n        var n, c, uv;\n        result = new BigInt();\n        n = RSAUtils.biHighIndex(x);\n        c = 0;\n        for (var j = 0; j <= n; ++j) {\n            uv = result.digits[j] + x.digits[j] * y + c;\n            result.digits[j] = uv & maxDigitVal;\n            c = uv >>> biRadixBits;\n            //c = Math.floor(uv / biRadix);\n        }\n        result.digits[1 + n] = c;\n        return result;\n    };\n    RSAUtils.arrayCopy = function (src, srcStart, dest, destStart, n) {\n        var m = Math.min(srcStart + n, src.length);\n        for (var i = srcStart, j = destStart; i < m; ++i, ++j) {\n            dest[j] = src[i];\n        }\n    };\n    var highBitMasks = [0x0000, 0x8000, 0xC000, 0xE000, 0xF000, 0xF800,\n        0xFC00, 0xFE00, 0xFF00, 0xFF80, 0xFFC0, 0xFFE0,\n        0xFFF0, 0xFFF8, 0xFFFC, 0xFFFE, 0xFFFF];\n    RSAUtils.biShiftLeft = function (x, n) {\n        var digitCount = Math.floor(n / bitsPerDigit);\n        var result = new BigInt();\n        RSAUtils.arrayCopy(x.digits, 0, result.digits, digitCount, result.digits.length - digitCount);\n        var bits = n % bitsPerDigit;\n        var rightBits = bitsPerDigit - bits;\n        for (var i = result.digits.length - 1, i1 = i - 1; i > 0; --i, --i1) {\n            result.digits[i] = ((result.digits[i] << bits) & maxDigitVal) |\n                ((result.digits[i1] & highBitMasks[bits]) >>>\n                    (rightBits));\n        }\n        result.digits[0] = ((result.digits[i] << bits) & maxDigitVal);\n        result.isNeg = x.isNeg;\n        return result;\n    };\n    var lowBitMasks = [0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,\n        0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,\n        0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF];\n    RSAUtils.biShiftRight = function (x, n) {\n        var digitCount = Math.floor(n / bitsPerDigit);\n        var result = new BigInt();\n        RSAUtils.arrayCopy(x.digits, digitCount, result.digits, 0, x.digits.length - digitCount);\n        var bits = n % bitsPerDigit;\n        var leftBits = bitsPerDigit - bits;\n        for (var i = 0, i1 = i + 1; i < result.digits.length - 1; ++i, ++i1) {\n            result.digits[i] = (result.digits[i] >>> bits) |\n                ((result.digits[i1] & lowBitMasks[bits]) << leftBits);\n        }\n        result.digits[result.digits.length - 1] >>>= bits;\n        result.isNeg = x.isNeg;\n        return result;\n    };\n    RSAUtils.biMultiplyByRadixPower = function (x, n) {\n        var result = new BigInt();\n        RSAUtils.arrayCopy(x.digits, 0, result.digits, n, result.digits.length - n);\n        return result;\n    };\n    RSAUtils.biDivideByRadixPower = function (x, n) {\n        var result = new BigInt();\n        RSAUtils.arrayCopy(x.digits, n, result.digits, 0, result.digits.length - n);\n        return result;\n    };\n    RSAUtils.biModuloByRadixPower = function (x, n) {\n        var result = new BigInt();\n        RSAUtils.arrayCopy(x.digits, 0, result.digits, 0, n);\n        return result;\n    };\n    RSAUtils.biCompare = function (x, y) {\n        if (x.isNeg != y.isNeg) {\n            return 1 - 2 * Number(x.isNeg);\n        }\n        for (var i = x.digits.length - 1; i >= 0; --i) {\n            if (x.digits[i] != y.digits[i]) {\n                if (x.isNeg) {\n                    return 1 - 2 * Number(x.digits[i] > y.digits[i]);\n                }\n                else {\n                    return 1 - 2 * Number(x.digits[i] < y.digits[i]);\n                }\n            }\n        }\n        return 0;\n    };\n    RSAUtils.biDivideModulo = function (x, y) {\n        var nb = RSAUtils.biNumBits(x);\n        var tb = RSAUtils.biNumBits(y);\n        var origYIsNeg = y.isNeg;\n        var q, r;\n        if (nb < tb) {\n            // |x| < |y|\n            if (x.isNeg) {\n                q = RSAUtils.biCopy(bigOne);\n                q.isNeg = !y.isNeg;\n                x.isNeg = false;\n                y.isNeg = false;\n                r = biSubtract(y, x);\n                // Restore signs, 'cause they're references.\n                x.isNeg = true;\n                y.isNeg = origYIsNeg;\n            }\n            else {\n                q = new BigInt();\n                r = RSAUtils.biCopy(x);\n            }\n            return [q, r];\n        }\n        q = new BigInt();\n        r = x;\n        // Normalize Y.\n        var t = Math.ceil(tb / bitsPerDigit) - 1;\n        var lambda = 0;\n        while (y.digits[t] < biHalfRadix) {\n            y = RSAUtils.biShiftLeft(y, 1);\n            ++lambda;\n            ++tb;\n            t = Math.ceil(tb / bitsPerDigit) - 1;\n        }\n        // Shift r over to keep the quotient constant. We'll shift the\n        // remainder back at the end.\n        r = RSAUtils.biShiftLeft(r, lambda);\n        nb += lambda; // Update the bit count for x.\n        var n = Math.ceil(nb / bitsPerDigit) - 1;\n        var b = RSAUtils.biMultiplyByRadixPower(y, n - t);\n        while (RSAUtils.biCompare(r, b) != -1) {\n            ++q.digits[n - t];\n            r = RSAUtils.biSubtract(r, b);\n        }\n        for (var i = n; i > t; --i) {\n            var ri = (i >= r.digits.length) ? 0 : r.digits[i];\n            var ri1 = (i - 1 >= r.digits.length) ? 0 : r.digits[i - 1];\n            var ri2 = (i - 2 >= r.digits.length) ? 0 : r.digits[i - 2];\n            var yt = (t >= y.digits.length) ? 0 : y.digits[t];\n            var yt1 = (t - 1 >= y.digits.length) ? 0 : y.digits[t - 1];\n            if (ri == yt) {\n                q.digits[i - t - 1] = maxDigitVal;\n            }\n            else {\n                q.digits[i - t - 1] = Math.floor((ri * biRadix + ri1) / yt);\n            }\n            var c1 = q.digits[i - t - 1] * ((yt * biRadix) + yt1);\n            var c2 = (ri * biRadixSquared) + ((ri1 * biRadix) + ri2);\n            while (c1 > c2) {\n                --q.digits[i - t - 1];\n                c1 = q.digits[i - t - 1] * ((yt * biRadix) | yt1);\n                c2 = (ri * biRadix * biRadix) + ((ri1 * biRadix) + ri2);\n            }\n            b = RSAUtils.biMultiplyByRadixPower(y, i - t - 1);\n            r = RSAUtils.biSubtract(r, RSAUtils.biMultiplyDigit(b, q.digits[i - t - 1]));\n            if (r.isNeg) {\n                r = RSAUtils.biAdd(r, b);\n                --q.digits[i - t - 1];\n            }\n        }\n        r = RSAUtils.biShiftRight(r, lambda);\n        // Fiddle with the signs and stuff to make sure that 0 <= r < y.\n        q.isNeg = x.isNeg != origYIsNeg;\n        if (x.isNeg) {\n            if (origYIsNeg) {\n                q = RSAUtils.biAdd(q, bigOne);\n            }\n            else {\n                q = RSAUtils.biSubtract(q, bigOne);\n            }\n            y = RSAUtils.biShiftRight(y, lambda);\n            r = RSAUtils.biSubtract(y, r);\n        }\n        // Check for the unbelievably stupid degenerate case of r == -0.\n        if (r.digits[0] == 0 && RSAUtils.biHighIndex(r) == 0)\n            r.isNeg = false;\n        return [q, r];\n    };\n    RSAUtils.biDivide = function (x, y) {\n        return RSAUtils.biDivideModulo(x, y)[0];\n    };\n    RSAUtils.biModulo = function (x, y) {\n        return RSAUtils.biDivideModulo(x, y)[1];\n    };\n    RSAUtils.biMultiplyMod = function (x, y, m) {\n        return RSAUtils.biModulo(RSAUtils.biMultiply(x, y), m);\n    };\n    RSAUtils.biPow = function (x, y) {\n        var result = bigOne;\n        var a = x;\n        while (true) {\n            if ((y & 1) != 0)\n                result = RSAUtils.biMultiply(result, a);\n            y >>= 1;\n            if (y == 0)\n                break;\n            a = RSAUtils.biMultiply(a, a);\n        }\n        return result;\n    };\n    RSAUtils.biPowMod = function (x, y, m) {\n        var result = bigOne;\n        var a = x;\n        var k = y;\n        while (true) {\n            if ((k.digits[0] & 1) != 0)\n                result = RSAUtils.biMultiplyMod(result, a, m);\n            k = RSAUtils.biShiftRight(k, 1);\n            if (k.digits[0] == 0 && RSAUtils.biHighIndex(k) == 0)\n                break;\n            a = RSAUtils.biMultiplyMod(a, a, m);\n        }\n        return result;\n    };\n    $w.BarrettMu = function (m) {\n        this.modulus = RSAUtils.biCopy(m);\n        this.k = RSAUtils.biHighIndex(this.modulus) + 1;\n        var b2k = new BigInt();\n        b2k.digits[2 * this.k] = 1; // b2k = b^(2k)\n        this.mu = RSAUtils.biDivide(b2k, this.modulus);\n        this.bkplus1 = new BigInt();\n        this.bkplus1.digits[this.k + 1] = 1; // bkplus1 = b^(k+1)\n        this.modulo = BarrettMu_modulo;\n        this.multiplyMod = BarrettMu_multiplyMod;\n        this.powMod = BarrettMu_powMod;\n    };\n    function BarrettMu_modulo(x) {\n        var $dmath = RSAUtils;\n        var q1 = $dmath.biDivideByRadixPower(x, this.k - 1);\n        var q2 = $dmath.biMultiply(q1, this.mu);\n        var q3 = $dmath.biDivideByRadixPower(q2, this.k + 1);\n        var r1 = $dmath.biModuloByRadixPower(x, this.k + 1);\n        var r2term = $dmath.biMultiply(q3, this.modulus);\n        var r2 = $dmath.biModuloByRadixPower(r2term, this.k + 1);\n        var r = $dmath.biSubtract(r1, r2);\n        if (r.isNeg) {\n            r = $dmath.biAdd(r, this.bkplus1);\n        }\n        var rgtem = $dmath.biCompare(r, this.modulus) >= 0;\n        while (rgtem) {\n            r = $dmath.biSubtract(r, this.modulus);\n            rgtem = $dmath.biCompare(r, this.modulus) >= 0;\n        }\n        return r;\n    }\n    function BarrettMu_multiplyMod(x, y) {\n        /*\n        x = this.modulo(x);\n        y = this.modulo(y);\n        */\n        var xy = RSAUtils.biMultiply(x, y);\n        return this.modulo(xy);\n    }\n    function BarrettMu_powMod(x, y) {\n        var result = new BigInt();\n        result.digits[0] = 1;\n        var a = x;\n        var k = y;\n        while (true) {\n            if ((k.digits[0] & 1) != 0)\n                result = this.multiplyMod(result, a);\n            k = RSAUtils.biShiftRight(k, 1);\n            if (k.digits[0] == 0 && RSAUtils.biHighIndex(k) == 0)\n                break;\n            a = this.multiplyMod(a, a);\n        }\n        return result;\n    }\n    var RSAKeyPair = function (encryptionExponent, decryptionExponent, modulus) {\n        var $dmath = RSAUtils;\n        this.e = $dmath.biFromHex(encryptionExponent);\n        this.d = $dmath.biFromHex(decryptionExponent);\n        this.m = $dmath.biFromHex(modulus);\n        // We can do two bytes per digit, so\n        // chunkSize = 2 * (number of digits in modulus - 1).\n        // Since biHighIndex returns the high index, not the number of digits, 1 has\n        // already been subtracted.\n        this.chunkSize = 2 * $dmath.biHighIndex(this.m);\n        this.radix = 16;\n        this.barrett = new $w.BarrettMu(this.m);\n    };\n    RSAUtils.getKeyPair = function (encryptionExponent, decryptionExponent, modulus) {\n        return new RSAKeyPair(encryptionExponent, decryptionExponent, modulus);\n    };\n    if (typeof $w.twoDigit === 'undefined') {\n        $w.twoDigit = function (n) {\n            return (n < 10 ? \"0\" : \"\") + String(n);\n        };\n    }\n    // Altered by Rob Saunders (rob@robsaunders.net). New routine pads the\n    // string after it has been converted to an array. This fixes an\n    // incompatibility with Flash MX's ActionScript.\n    RSAUtils.encryptedString = function (key, s) {\n        var a = [];\n        var sl = s.length;\n        var i = 0;\n        while (i < sl) {\n            a[i] = s.charCodeAt(i);\n            i++;\n        }\n        while (a.length % key.chunkSize != 0) {\n            a[i++] = 0;\n        }\n        var al = a.length;\n        var result = \"\";\n        var j, k, block;\n        for (i = 0; i < al; i += key.chunkSize) {\n            block = new BigInt();\n            j = 0;\n            for (k = i; k < i + key.chunkSize; ++j) {\n                block.digits[j] = a[k++];\n                block.digits[j] += a[k++] << 8;\n            }\n            var crypt = key.barrett.powMod(block, key.e);\n            var text = key.radix == 16 ? RSAUtils.biToHex(crypt) : RSAUtils.biToString(crypt, key.radix);\n            result += text + \" \";\n        }\n        return result.substring(0, result.length - 1); // Remove last space.\n    };\n    RSAUtils.decryptedString = function (key, s) {\n        var blocks = s.split(\" \");\n        var result = \"\";\n        var i, j, block;\n        for (i = 0; i < blocks.length; ++i) {\n            var bi;\n            if (key.radix == 16) {\n                bi = RSAUtils.biFromHex(blocks[i]);\n            }\n            else {\n                bi = RSAUtils.biFromString(blocks[i], key.radix);\n            }\n            block = key.barrett.powMod(bi, key.d);\n            for (j = 0; j <= RSAUtils.biHighIndex(block); ++j) {\n                result += String.fromCharCode(block.digits[j] & 255, block.digits[j] >> 8);\n            }\n        }\n        // Remove trailing null, if any.\n        if (result.charCodeAt(result.length - 1) == 0) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    };\n    RSAUtils.setMaxDigits(130);\n    return RSAUtils;\n});\n","define('rxmgsturd', [], function () {\n    var g = {};\n    //单击最大时长\n    g.duration = 280;\n    //长按的时长\n    g.pressDuration = 320;\n    //  判断swipe 在收到几个 move 时候开始\n    g.swipeStartPos = 2;\n    // 几个 touchmove 发出一次swipe\n    g.swipeInterval = 1;\n    //移动敏感度\n    g.thresholdmove = 0.05;\n    g.xyMulti = 2;\n    return g;\n});\n","//// <reference path=\"../../../../../../orm/jslib/rxm/ormImport.js\" />\ndefine('rxmGstr', ['RxmGstrtmr', 'RxmGstrEsy', 'rxmgsturd'], function (pressTimer, esy, defval) {\n    var the;\n    var gdefautl = {};\n    $.extend(gdefautl, {\n        //\n        //单击\n        tap: 'tap',\n        //单击开始\n        touchStart: \"touchStart\",\n        //单击移动\n        touchMove: \"touchMove\",\n        //单击结束\n        touchEnd: \"touchEnd\",\n        //滑动开始\n        swipeStart: 'swipeStart',\n        //正在滑动\n        swipeMove: 'swipeMove',\n        //滑动结束\n        swipeEnd: 'swipeEnd',\n        //开始向上滑动\n        swipeUpStart: 'swipeUpStart',\n        //开始向下滑动\n        swipeDownStart: 'swipeDownStart',\n        //开始向左滑动\n        swipeLeftStart: 'swipeLeftStart',\n        //开始向右滑动\n        swipeRightStart: 'swipeRightStart',\n        //正在向上滑动\n        swipeUpMove: 'swipeUpMove',\n        //正在向下滑动\n        swipeDownMove: 'swipeDownMove',\n        //正在向左滑动\n        swipeLeftMove: 'swipeLeftMove',\n        //正在向右滑动\n        swipeRightMove: 'swipeRightMove',\n        //向左滑动结束\n        swipeLeftEnd: 'swipeLeftEnd',\n        //向右滑动结束\n        swipeRightEnd: 'swipeRightEnd',\n        //向上滑动结束\n        swipeUpEnd: 'swipeUpEnd',\n        //向下滑动结束\n        swipeDownEnd: 'swipeDownEnd',\n        //长按\n        press: 'press'\n    });\n    var cls = function (startTouch, movePath, endTouch, position) {\n        ///<param name=\"startTouch\"  type=\"ormGestureArg.touch\"></param>\n        ///<param name=\"movePath\"  type=\"Array\"  elementType=\"ormGestureArg.touch\"></param>\n        ///<param name=\"endTouch\"  type=\"ormGestureArg.touch\"></param>\n        ///<param name=\"position\"  value=\"ormGestureArg.calResult\"></param>\n        this.data = {\n            startTouch: startTouch,\n            movePath: movePath,\n            endTouch: endTouch,\n            //isSwipe: false,\n            position: position,\n            curSwipe: \"\",\n            moveCount: 0,\n            hasMove: false\n        };\n        this.defval = defval;\n        var capableDevicesInUserAgentString = ['iPad', 'iPhone', 'iPod', 'Mobile Safari', 'Android']; // basic functionality such as swipe, pinch, rotate, tap should work on every mobile safari, e.g. GalaxyTab\n        this.hasGestures = (function () { var _i; for (_i = 0; _i < capableDevicesInUserAgentString.length; _i++) {\n            if (window.navigator.userAgent.indexOf(capableDevicesInUserAgentString[_i]) !== -1) {\n                return true;\n            }\n        } return false; })();\n    };\n    cls.prototype.start = function (evt, touch) {\n        //event.preventDefault();\n        ///<param name=\"evt\"  value=\"ormGestureArg.touchEvent\"></param>\n        ///<param name=\"touch\"  type=\"ormGestureArg.touch\"></param>\n        var msgGesture = gdefautl;\n        this.data.startTouch = $.extend(true, {}, touch);\n        this.data.moveCount = 0;\n        this.data.position = undefined;\n        this.data.curSwipe = \"\";\n        this.data.movePath = [];\n        this.data.initSwipe = \"\";\n        this.data.hasMove = false;\n        if (jQuery.event.global[msgGesture.touchStart]) {\n            $(touch.target).trigger(msgGesture.touchStart, this.data.startTouch);\n        }\n        ;\n        return false;\n    };\n    cls.prototype._clone = function (args) {\n        var ret = args ? $.extend(true, {}, args) : $.extend(true, {}, {\n            startTouch: this.data.startTouch,\n            moveCount: this.data.moveCount,\n            position: this.data.position,\n            curSwipe: this.data.curSwipe,\n            movePath: this.data.movePath,\n        });\n        return ret;\n    };\n    cls.prototype._swipeDirection = function (a) {\n        ///<param  name=\"a\"  value=\"this._clone()\"></param>\n        var defVal = defval;\n        var dx = this.data.position.delta[0].startX || 0;\n        var dy = this.data.position.delta[0].startY || 0;\n        if (Math.abs(dx) > defVal.xyMulti * Math.abs(dy)) {\n            this.data.curSwipe = dx < 0 ? \"Left\" : \"Right\";\n        }\n        else if (Math.abs(dy) > defVal.xyMulti * Math.abs(dx)) {\n            this.data.curSwipe = dy < 0 ? \"Up\" : \"Down\";\n        }\n        else {\n            this.data.curSwipe = \"none\";\n        }\n        ;\n    };\n    cls.prototype.move = function (evt, touch) {\n        this.data.hasMove = true;\n        var msgGesture = gdefautl;\n        ///<param name=\"evt\"  value=\"ormGestureArg.touchEvent\"></param>\n        ///<param name=\"touch\"  type=\"ormGestureArg.touch\"></param>\n        var defValue = defval;\n        var tmp = this.data.moveCount - defValue.swipeStartPos;\n        this.data.movePath.push(touch);\n        this.data.moveCount++;\n        var tmp = this.data.moveCount - defValue.swipeStartPos;\n        this.calPosition(evt, touch);\n        //console.info(Math.ceil((tmp = this.data.moveCount - defValue.swipeStartPos) / (defValue.swipeInterval * 1.0)), parseInt(tmp / (defValue.swipeInterval * 1.0)), tmp);\n        var r = this._clone();\n        var $target = $(touch.target);\n        if ($.event.global[msgGesture.touchMove]) {\n            r = this._clone(r);\n            r.type = msgGesture.touchMove;\n            $target.trigger(msgGesture.touchMove, r);\n        }\n        ;\n        if (this.data.moveCount == defValue.swipeStartPos) {\n            //swipe  direction  \n            this._swipeDirection(r);\n            r.curSwipe = this.data.curSwipe;\n            if ($.event.global[msgGesture.swipeStart]) {\n                r = this._clone(r);\n                r.type = msgGesture.swipeStart;\n                $target.trigger(msgGesture.swipeStart, r);\n            }\n            ;\n            if (this.data.curSwipe != \"none\") {\n                this.data.initSwipe = this.data.curSwipe;\n                var arr = [\"swipe\"];\n                arr.push(this.data.curSwipe);\n                arr.push(\"Start\");\n                var s = arr.join(\"\");\n                if ($.event.global[s])\n                    ;\n                r = this._clone(r);\n                r.type = s;\n                $target.trigger(s, r);\n            }\n            if ($.event.global[msgGesture.swipeStart]) {\n                r = this._clone(r);\n                r.type = msgGesture.swipeStart;\n                $target.trigger(msgGesture.swipeStart, r);\n            }\n        }\n        else if ((tmp > 0) && Math.ceil(tmp / (defValue.swipeInterval * 1.0)) == parseInt(tmp / (defValue.swipeInterval * 1.0))) {\n            if ($.event.global[msgGesture.swipeMove]) {\n                r = this._clone(r);\n                r.type = msgGesture.swipeMove;\n                $target.trigger(msgGesture.swipeMove);\n            }\n            ;\n            if ((r.curSwipe.length > 0) && (r.curSwipe == this.data.initSwipe) && (r.curSwipe !== \"none\")) {\n                var arr = [\"swipe\"];\n                arr.push(r.curSwipe);\n                if (r.curSwipe == this.data.curSwipe) {\n                    arr.push(\"Move\");\n                    var s = arr.join(\"\");\n                    r = this._clone(r);\n                    r.type = s;\n                    $target.trigger(s, r);\n                }\n                else {\n                    //this.data.curSwipe = \"none\";\n                    //arr.push(\"End\");\n                }\n                ;\n            }\n            ;\n            this.data.movePath = [];\n        }\n    };\n    cls.prototype.stop = function (evt, pressCall, touch) {\n        ///<param name=\"evt\"  value=\"ormGestureArg.touchEvent\"></param>\n        ///<param name=\"touch\"  type=\"ormGestureArg.touch\"></param>\n        var msgGesture = gdefautl;\n        var $target = $(touch.target);\n        if ($.event.global[msgGesture.touchEnd]) {\n            var r = this._clone();\n            r.type = msgGesture.touchEnd;\n            ;\n            $target.trigger(msgGesture.touchEnd, r);\n        }\n        ;\n        var isMove = this.data.hasMove;\n        if ((!isMove) && $.event.global[msgGesture.tap] && (touch.timestamp - this.data.startTouch.timestamp < this.defval.duration)) {\n            $(touch.target).trigger(msgGesture.tap, touch);\n        }\n        else if (this.data.curSwipe.length > 0) {\n            this.data.movePath.push(touch);\n            var r = this._clone();\n            if ($.event.global[msgGesture.swipeEnd]) {\n                r.type = msgGesture.swipeEnd;\n                $target.trigger(msgGesture.swipeEnd, touch);\n            }\n            ;\n            if (this.data.curSwipe !== \"none\") {\n                var arr = ['swipe'];\n                arr.push(this.data.initSwipe);\n                arr.push(\"End\");\n                var s = arr.join(\"\");\n                var r = this._clone();\n                if ($.event.global[s]) {\n                    $target.trigger(s, r);\n                }\n            }\n        }\n    };\n    cls.prototype.calPosition = function (evt, touch) {\n        ///<param name=\"evt\"  value=\"ormGestureArg.touchEvent\"></param>\n        ///<param name=\"touch\"  value=\"ormGestureArg.touch\"></param>\n        var startPos = this.data.startTouch;\n        var timeNow = new Date().getTime();\n        var lastPos = this.data.position;\n        var direction;\n        var delta;\n        // calculate touch differences\n        if (touch) {\n            // store delta values\n            delta = [\n                {\n                    lastX: $.isExist(lastPos) && lastPos.delta[0] ? lastPos.delta[0].startX : 0,\n                    lastY: $.isExist(lastPos) && lastPos.delta[0] ? lastPos.delta[0].startY : 0,\n                    moved: null,\n                    startX: touch.screenX - startPos.screenX,\n                    startY: touch.screenY - startPos.screenY\n                }\n            ];\n            direction = {\n                vector: null,\n                orientation: window.orientation || null,\n                lastX: ((delta[0].lastX > 0) ? +1 : ((delta[0].lastX < 0) ? -1 : 0)),\n                lastY: ((delta[0].lastY > 0) ? +1 : ((delta[0].lastY < 0) ? -1 : 0)),\n                startX: ((delta[0].startX > 0) ? +1 : ((delta[0].startX < 0) ? -1 : 0)),\n                startY: ((delta[0].startY > 0) ? +1 : ((delta[0].startY < 0) ? -1 : 0))\n            };\n            // calculate distance traveled using the pythagorean theorem\n            delta[0].moved = Math.sqrt(Math.pow(Math.abs(delta[0].startX), 2) + Math.pow(Math.abs(delta[0].startY), 2));\n        }\n        var r = {\n            type: touch.type,\n            originalEvent: \"ormGesture\" || null,\n            delta: delta || null,\n            direction: direction || { orientation: window.orientation || null, vector: null },\n            duration: timeNow - this.data.startTouch.timestamp,\n            rotation: null,\n            scale: null\n        };\n        this.data.position = r;\n        return r;\n    };\n    cls.prototype._onTouchstart = function (evt) {\n        var msgGesture = gdefautl;\n        if (the.hasGestures) {\n            document.body.addEventListener('touchmove', cls.prototype._onTouchmove, false);\n            document.body.addEventListener('touchend', cls.prototype._onTouchend, false);\n        }\n        // event substitution\n        else {\n            //\t\t\tevt.currentTarget.addEventListener('mousemove', _onTouchmove, false);\n            //\t\t\tevt.currentTarget.addEventListener('mouseup', _onTouchend, false);\n            $(document.body).on('mousemove', cls.prototype._onTouchmove);\n            $(document.body).on('mouseup', cls.prototype._onTouchend);\n        }\n        if (jQuery.event.global[msgGesture.press]) {\n            pressTimer.start(evt);\n        }\n        var touch = evt.touches;\n        touch = touch ? touch[0] : evt;\n        touch.timestamp = new Date().getTime();\n        the.start(evt, touch);\n        //console.info(\"_onTouchstart end\");\n        return false;\n    };\n    cls.prototype._onTouchmove = function (evt) {\n        var msgGesture = gdefautl;\n        if (jQuery.event.global[msgGesture.press]) {\n            pressTimer.stop();\n        }\n        var touch = evt.changedTouches[0];\n        touch.timestamp = new Date().getTime();\n        ;\n        the.move(evt, touch);\n    };\n    cls.prototype._onTouchend = function (evt, pressCall) {\n        //console.info(\"_onTouchend\");\n        document.body.removeEventListener('touchmove', cls.prototype._onTouchmove, false);\n        document.body.removeEventListener('touchend', cls.prototype._onTouchend, false);\n        if (pressTimer.alreadyPress()) {\n            event.preventDefault();\n            event.stopPropagation();\n            var msgGesture = gdefautl;\n            var $target = $(evt.changedTouches[0].target);\n            if ($.event.global[msgGesture.touchEnd]) {\n                var r = this._clone();\n                r.type = msgGesture.touchEnd;\n                ;\n                $target.trigger(msgGesture.touchEnd, r);\n            }\n            ;\n            return false;\n        }\n        else {\n            pressTimer.stop();\n            var touch = evt.changedTouches[0];\n            //var touch = evt.touches;\n            //touch = touch ? touch[0] : evt;\n            touch.timestamp = new Date().getTime();\n            the.stop(evt, pressCall, touch);\n            //console.info(\"_onTouchend\", \"end\");\n            //return false;\n        }\n    };\n    if (document.body.addEventListener) {\n        document.body.addEventListener('touchstart', cls.prototype._onTouchstart, false);\n    }\n    else if (_$element.get(0).attachEvent) {\n        ///micsoft\n        document.body.attachEvent('touchstart', cls.prototype._onTouchstart, false);\n    }\n    ;\n    the = new cls();\n    return the;\n});\n","define('RxmGstrEsy', ['RxmAppTool'], function (t) {\n    if (typeof $.isExit === \"undefined\") {\n        $.extend({\n            isString: function (it) {\n                return (typeof it == \"string\" || it instanceof String); // Boolean\n            }\n        });\n        $.extend({\n            isDom: (typeof HTMLElement === 'object') ?\n                function (obj) {\n                    return obj instanceof HTMLElement;\n                } :\n                function (obj) {\n                    return obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n                }\n        });\n        $.extend({\n            isExist: function (obj) {\n                return (typeof obj !== \"undefinded\") && (obj != null);\n            },\n            isJquery: function (obj) {\n                return (obj instanceof jQuery);\n            }\n        });\n    }\n    ;\n    var rxmEv = function () {\n    };\n    if (!$.prototype.tap) {\n        /**\n         * 轻按手势\n         * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n         * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n         * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n         * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n         */\n        $.prototype.tap = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on(\"tap\", selector, data, fn, one);\n            }\n            else {\n                this.on(\"click\", selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 长按手势\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.press = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on(\"press\", selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * touchStart，相当于touchstart\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.touchStart = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on(\"touchStart\", selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * touchMove，相当于touchmove\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.touchMove = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on(\"touchMove\", selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * touch事件结束，相当于touchend<\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.touchEnd = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on(\"touchEnd\", selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 滑动开始，不区分方向\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeStart = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeStart', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 正在滑动，不区分方向\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeMove = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeMove', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 滑动结束，不区分方向\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeEnd = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeEnd', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向上滑动开始\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeUpStart = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeUpStart', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向下滑动开始\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeDownStart = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeDownStart', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向左滑动开始\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeLeftStart = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeLeftStart', selector, data, fn, one);\n            }\n            ;\n            return this;\n        };\n        /**\n        * 向右滑动开始\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeRightStart = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeRightStart', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向上滑动\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeUpMove = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeUpMove', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向下滑动\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeDownMove = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeDownMove', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向左滑动\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeLeftMove = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeLeftMove', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向右滑动\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeRightMove = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeRightMove', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向左滑动结束\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeLeftEnd = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeLeftEnd', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向右滑动结束\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeRightEnd = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeRightEnd', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向上滑动结束\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeUpEnd = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeUpEnd', selector, data, fn, one);\n            }\n            return this;\n        };\n        /**\n        * 向下滑动结束\n        * @param  {String} selector 子代选择器 参考 http://api.jquery.com/on/\n        * @param  {Object} data 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Function} fn 事件激活时需要传递的数据 参考 http://api.jquery.com/on/\n        * @param  {Boolean} one 事件是否只是执行一次 参考 http://api.jquery.com/on/\n        */\n        $.prototype.swipeDownEnd = function (selector, data, fn, one) {\n            if (t.isAndriod() || t.isIOS()) {\n                this.on('swipeDownEnd', selector, data, fn, one);\n            }\n            return this;\n        };\n    }\n    return rxmEv;\n});\n","define('RxmGstrtmr', ['rxmgsturd'], function (defVal) {\n    var the;\n    $.extend({\n        isString: function (it) {\n            return (typeof it == \"string\" || it instanceof String); // Boolean\n        }\n    });\n    $.extend({\n        isDom: (typeof HTMLElement === 'object') ?\n            function (obj) {\n                return obj instanceof HTMLElement;\n            } :\n            function (obj) {\n                return obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n            }\n    });\n    $.extend({\n        isExist: function (obj) {\n            ///<summary>判断对象不是 undefined 和 null</summary>\n            ///<param name=\"obj\" type=\"Object\">对象</param>\n            return (typeof obj !== \"undefinded\") && (obj != null);\n        }\n    });\n    function cls() {\n        this.evtArr = [];\n        this.intervalID;\n        this._alreadyPress = false;\n    }\n    ;\n    cls.prototype.alreadyPress = function (isPress) {\n        if ($.isExist(isPress)) {\n            this._alreadyPress = isPress;\n        }\n        return this._alreadyPress;\n    };\n    cls.prototype.start = function (evt) {\n        this._alreadyPress = false;\n        var pressTimer = the;\n        if (this.evtArr.length == 0) {\n            if ($.isExist(this.intervalID)) {\n                clearInterval(this.intervalID);\n                this.intervalID = undefined;\n            }\n            this.intervalID = setInterval($.proxy(pressTimer.fire, pressTimer), defVal.pressDuration);\n        }\n        evt.d = evt.currentTarget;\n        this.evtArr.push(evt);\n    };\n    cls.prototype.stop = function () {\n        this._alreadyPress = false;\n        if ($.isExist(this.intervalID)) {\n            clearInterval(this.intervalID);\n            this.intervalID = undefined;\n            this.evtArr = [];\n        }\n        // console.info(\"stop\" + this.intervalID)\n    };\n    cls.prototype.fire = function () {\n        this._alreadyPress = true;\n        if ($.isExist(this.intervalID)) {\n            clearInterval(this.intervalID);\n            this.intervalID = undefined;\n            var eArr = this.evtArr;\n            this.evtArr = [];\n            $.each(eArr, function (index, evt) {\n                evt.currentTarget = evt.d;\n                the._fire(evt);\n            });\n        }\n    };\n    cls.prototype._fire = function (evt) {\n        ///<param name=\"evt\"  value=\"ormGestureArg.touchEvent\"></param>\n        ///<param name=\"touch\"  type=\"ormGestureArg.touch\"></param>\n        var touch = $.extend(true, {}, evt.changedTouches[0] || evt.touches[0]);\n        touch.timestamp = new Date().getTime();\n        $target = $(touch.target);\n        if ($.event.global[\"press\"]) {\n            $target.trigger(\"press\", touch);\n        }\n    };\n    the = new cls();\n    return the;\n});\n","define('RxmBufferGrid', [require.rxm.Util, 'RxmAppTool'], function (Util, appTool) {\n    var clsdef = {\n        rxmPath: require.rxm.BufferGrid,\n        clsName: 'rxm-buffer-grid',\n        juryFn: 'rxmBufferGrid'\n    };\n    /**\n     * @param  {{cId:String,id:String}} cfg\n     */\n    var ClsFactory = function (cfg) {\n        var id;\n        var thisObj;\n        (cfg) && (cfg.id) && (id = cfg.id);\n        if (id) {\n            /** @type {Cls} */\n            thisObj = $('#' + id).data(clsdef.rxmPath);\n            if (thisObj) {\n                if ($.isArray(cfg.override)) {\n                    for (var f in cfg.override) {\n                        thisObj[f] = override[f];\n                    }\n                }\n                return thisObj;\n            }\n        }\n        var arrObj;\n        $.isArray(cfg) && (arrObj = cfg);\n        var RxmBufferGrid = function () {\n            /**\n            * 表格初始化配置对象\n            */\n            this._config = {\n                //gridWrap 唯一id\n                id: appTool.unid() + \"\",\n                //数据选中 单选[radio]还是多选[checkbox],默认checkbox\n                multi: true,\n                //数据表显示模式  custom:定制表格高度（包裹器，表格高度） auto:包裹器与表格根据数据自动填充高度\n                viewMode: \"custom\",\n                //数据是否换行，还是隐藏多余字符(true 省略多余字符,其他字符用三个点代替  false 换行显示所有内容 ) 默认省略多余字符\n                textEllipsis: true,\n                //行（列）头信息\n                layout: [],\n                //工具栏\n                toolbar: [],\n                //行点击事件\n                rowevent: [],\n                refreshTip: {\n                    nodataTip: \"暂无数据！\"\n                },\n                leftSlideParam: {\n                    btnWidth: 60,\n                    viewWidth: 60,\n                    traDuration: \"200\",\n                    traFunction: \"ease-out\" //开始到结束的过渡效果 默认以慢速结束的过渡效果\n                },\n                trRowParam: {\n                    iconWidth: 55,\n                    parHeight: 21,\n                    dataMargin: 16,\n                    trMargin: 20 //tr距离屏幕左右边距\n                },\n                //表格数据对象，数组类型，数组元素为json对象\n                data: []\n            };\n            //获取html定义属性生成表格config对象\n            var htmlCfg = getHtmlAttr(cfg.id);\n            this._config = $.extend(true, this._config, htmlCfg, cfg);\n            this._arrowImg = getServer() + \"/www/modules/utils/img/arrow-right.png\";\n            //包裹器高度\n            this.wrapHeight = document.body.scrollHeight;\n            //全选状态标志  默认为true\n            this._allChecked = true;\n            //长按状态标志  默认为false\n            this._pressFlag = false;\n            //点击、长按事件返回数据参数\n            this._pageInfo = {\n                curPage: 1,\n                pageData: [],\n                dataCount: 0,\n                pageCount: 1 //总页数\n            };\n            this.$gridWrap = $(\"#\" + this._config.id);\n            if (this.$gridWrap.length == 0) {\n                console.error(\"id=\" + this._config.id + \"表格不存在\");\n            }\n            this.$titlebar = $(\"\");\n            this.$toolbar = $(\"\");\n            this.$searchbar = $(\"\");\n            this.$gridContent = $(\"\");\n            this.$tableBody = $(\"\");\n            this.$tBody = $(\"\");\n            this._isRender = false;\n            //滑动菜单全局变量定义\n            this.slideCurSwipeTr; //当前左滑的对象\n            this.slideLastSwipeTr; //上一个左滑的对象 \n            this.btnAreaWidth;\n            this.dataParNum = this._config.layout.length;\n            this.scrollDivWidth;\n            this.dataDivWidth;\n            this.iconMargin;\n            //行数据中具有icon列\n            this._hasIcon = false;\n        };\n        /**\n        * 获取html表格属性 重组config对象\n        * @param {String} wrapId  - 表格包裹器ID\n        * @returns {Object} gridCfg - config对象\n        */\n        function getHtmlAttr(wrapId) {\n            //表格config对象定义\n            var gridCfg = {};\n            //表格layout\n            var layout = [];\n            //桌面端是否显示行索引值\n            var idx = false;\n            //表格包裹器对象\n            var $gridWrap = $(\"#\" + wrapId);\n            //获取表格每列属性值与名称  \n            //移动端端 获取具有mview的列\n            var tabth = $(\"#\" + wrapId + \" .rxm-table-head th[mview]\").not(\"[hidden]\");\n            if (isDesktop(wrapId)) {\n                //桌面端 排除具有hidden属性的列\n                tabth = $(\"#\" + wrapId + \" .rxm-table-head th\").not(\"[hidden]\");\n            }\n            //迭代表格列属性\n            for (var i = 0; i < tabth.length; i++) {\n                //判断列表是否显示索引号列\n                if ($(tabth[i]).is(\".index\")) {\n                    idx = true;\n                }\n                //判断列表是否显示多行框列\n                if ($(tabth[i]).is(\".ormmulti\")) {\n                    if ($(tabth[i]).children(\"input\").attr(\"type\") == \"checkbox\") {\n                        gridCfg.multi = true;\n                    }\n                    if ($(tabth[i]).children(\"input\").attr(\"type\") == \"radio\") {\n                        gridCfg.multi = false;\n                    }\n                }\n                //layout属性设定\n                if (typeof ($(tabth[i]).attr(\"fieldvalue\")) != \"undefined\") {\n                    var lo = {};\n                    lo.name = $(tabth[i]).text();\n                    lo.field = $(tabth[i]).attr(\"fieldvalue\");\n                    layout.push(lo);\n                }\n            }\n            //设置行索引值\n            gridCfg.index = idx;\n            //设置layout\n            gridCfg.layout = layout;\n            //单选[radio]还是多选[checkbox],默认checkbox\n            if (typeof ($gridWrap.attr(\"rxmmulti\")) != \"undefined\") {\n                if ($gridWrap.attr(\"rxmmulti\") == 'true') {\n                    gridCfg.multi = true;\n                }\n                else {\n                    gridCfg.multi = false;\n                }\n            }\n            //数据表显示模式 custom:定制表格高度（包裹器，表格高度） auto:包裹器与表格根据数据自动填充高度\n            if (typeof ($gridWrap.attr(\"rxmviewmode\")) != \"undefined\") {\n                gridCfg.viewMode = $gridWrap.attr(\"rxmviewmode\");\n            }\n            //数据行图标区域宽度\n            if (typeof ($gridWrap.attr(\"rxmrowiconwidth\")) != \"undefined\") {\n                gridCfg.trRowParam.iconWidth = $gridWrap.attr(\"rxmrowiconwidth\");\n            }\n            //数据行数据字段单个高度\n            if (typeof ($gridWrap.attr(\"rxmrowparheight\")) != \"undefined\") {\n                gridCfg.trRowParam.parHeight = $gridWrap.attr(\"rxmrowparheight\");\n            }\n            //数据行数据显示div距离上下边距\n            if (typeof ($gridWrap.attr(\"rxmrowdatamargin\")) != \"undefined\") {\n                gridCfg.trRowParam.dataMargin = $gridWrap.attr(\"rxmrowdatamargin\");\n            }\n            //数据行距离屏幕左右边距\n            if (typeof ($gridWrap.attr(\"rxmrowtrmargin\")) != \"undefined\") {\n                gridCfg.trRowParam.trMargin = $gridWrap.attr(\"rxmrowtrmargin\");\n            }\n            //左滑菜单每个选项默认宽度\n            if (typeof ($gridWrap.attr(\"rxmleftbtnwidth\")) != \"undefined\") {\n                gridCfg.leftSlideParam.btnWidth = $gridWrap.attr(\"rxmleftbtnwidth\");\n            }\n            //左滑出现菜单区域的最小距离值，小于此值则隐藏 \n            if (typeof ($gridWrap.attr(\"rxmviwemaxlen\")) != \"undefined\") {\n                gridCfg.leftSlideParam.viewWidth = $gridWrap.attr(\"rxmviwemaxlen\");\n            }\n            //左滑菜单滑动隐藏时间设定 \n            if (typeof ($gridWrap.attr(\"rxmleftaduration\")) != \"undefined\") {\n                gridCfg.leftSlideParam.traDuration = $gridWrap.attr(\"rxmleftaduration\");\n            }\n            return gridCfg;\n        }\n        ///所有的自定义消息 \n        RxmBufferGrid.msgEnum = {\n            appendRow: \"append\",\n            insertRow: \"insert\",\n            deleteRow: \"delete\",\n            updateRow: \"update\",\n            ormRereshGridView: \"ormRereshGridView\",\n            tapInLine: \"tapInLine\",\n            pressInLine: \"pressInLine\"\n        };\n        RxmBufferGrid.prototype.getRowViewIndex = function (domElement) {\n            ///<summary>根据domelement信息获取所在的视图行索引</summary>\n            ///<param>tr dom对象</param>\n            var $tr = $(domElement).closest(\"tr\");\n            index = this.$tBody.find(\"tr\").index($tr);\n            return index;\n        };\n        RxmBufferGrid.prototype.getAllData = function () {\n            ///<summary> 获取当前表格所有数据</summary>\n            var cf = this._config;\n            return cf.data;\n        };\n        RxmBufferGrid.prototype.getSelectedRow = function () {\n            ///<summary> 获取当前选择行索引 </summary>\n            ///<return type=\"Array\"  elementType=\"Number\">索引数组</param>\n            var selectedIdxArr = [];\n            var $tableBody = this.$gridWrap.find(\".rxm-s-grid-table tbody\");\n            //获取表格所有tr对象\n            var $gridTr = $tableBody.find(\"tr\");\n            $tableBody.find(\"input:checked\").each(function () {\n                var index = $gridTr.index($(this).closest(\"tr\"));\n                selectedIdxArr.push(index);\n            });\n            return selectedIdxArr;\n        };\n        RxmBufferGrid.prototype.getSelectedData = function (bClone) {\n            ///<summary> 获取选中数据</summary>\n            var rows = this.getSelectedRow();\n            var rd = this.getRowDataByViewIndexs(rows, bClone);\n            return rd;\n        };\n        /**\n        * 获取滑动行数据\n        * @param {String} domElement - dom选择器\n        * @returns {Object} rd - 当前滑动行数据对象\n        */\n        RxmBufferGrid.prototype.getSlideRowData = function (domElement, bClone) {\n            var rows = this.getRowViewIndex(domElement);\n            var rd = this.getRowDataByViewIndexs(rows, bClone);\n            return rd;\n        };\n        RxmBufferGrid.prototype.checkRow = function (viewIndexs) {\n            ///<summary> 通过index选中一行、多行或者全选 </summary>\n            ///<param  name =\"viewIndexs\"  type=\"Number\">行索引 此参数可为数字、数组、空<param>\n            //获取表格中所有checkbox  jquery对象\n            var $checkTr = this.$gridWrap.find(\"input[name='s_gird_multi_\" + this._config.id + \"']\");\n            //参数为数字,选中单行\n            if ($.isNumeric(viewIndexs)) {\n                $($checkTr[viewIndexs]).prop(\"checked\", true);\n            }\n            else if ($.isArray(viewIndexs)) {\n                //参数为数组,选中多行\n                $.each(viewIndexs, function (index, it) {\n                    $($checkTr[it]).prop(\"checked\", true);\n                });\n            }\n            else {\n                //参数为为空,全选\n                $checkTr.prop(\"checked\", true);\n            }\n        };\n        RxmBufferGrid.prototype.uncheckRow = function (viewIndexs) {\n            ///<summary> 通过index取消选中一行、多行或者全部 </summary>\n            ///<param  name =\"viewIndexs\"  type=\"Number\">行索引 此参数可为数字、数组、空<param>\n            //获取表格中所有checkbox  jquery对象\n            var $checkTr = this.$gridWrap.find(\"input[name='s_gird_multi_\" + this._config.id + \"']\");\n            //参数为数字,选中单行\n            if ($.isNumeric(viewIndexs)) {\n                $($checkTr[viewIndexs]).prop(\"checked\", false);\n            }\n            else if ($.isArray(viewIndexs)) {\n                //参数为数组,选中多行\n                $.each(viewIndexs, function (index, it) {\n                    $($checkTr[it]).prop(\"checked\", false);\n                });\n            }\n            else {\n                //参数为为空,全选\n                $checkTr.prop(\"checked\", false);\n            }\n        };\n        RxmBufferGrid.prototype.appendRow = function (rows) {\n            ///<summary> 追加数据 </summary>\n            ///<param name=\"rows\" type=\"Array\">当前页数据</param>\n            ///<param name=\"beginPageNum\" type=\"number\">起始页面码数</param>\n        };\n        RxmBufferGrid.prototype.insertRow = function (arg) {\n            ///<summary> 插入数据 </summary>\n            ///<param name=\"arg\" type=\"Array\">插入数据数组</param>\n            var dArr = this._config.data;\n            var cf = this._config;\n            var viewIndexs = [];\n            for (var item in arg) {\n                var n = parseInt(item);\n                viewIndexs.push(n);\n            }\n            viewIndexs.sort(function (a, b) {\n                return b - a;\n            });\n            $.each(viewIndexs, function (index, it) {\n                it = arg[it];\n                var its = [];\n                if (!$.isArray(it))\n                    its.push(it);\n                else\n                    its = it;\n                for (var i = 0; i < its.length; i++) {\n                    dArr.splice(index, 0, its[i]);\n                    ///\n                }\n            });\n        };\n        RxmBufferGrid.prototype.deleteRow = function (viewIndexs) {\n            ///<summary> 删除数据 </summary>\n            ///<param  name =\"viewIndexs\"  type=\"Array\">删除数据的行索引数组<param>\n            var dArr = this._config.data;\n            var cf = this._config;\n            if ($.isNumeric(viewIndexs)) {\n                var t = viewIndexs;\n                viewIndexs = [];\n                viewIndexs.push(t);\n            }\n            viewIndexs.sort(function (a, b) {\n                return b - a;\n            });\n            var trs = this.$gridWrap.find(\"tr\");\n            $.each(viewIndexs, function (index, it) {\n                var cache = it;\n                dArr.splice(cache, 1);\n                $(trs[it]).remove();\n            });\n        };\n        RxmBufferGrid.prototype.updateRow = function (arg) {\n            ///<summary> 更新行数据 </summary>\n            ///<param  name =\"arg\"  type=\"Array\">更新数据的行索<param>\n            var the = this;\n            var dArr = this._config.data;\n            var cf = this._config;\n            var viewIndexs = [];\n            for (var item in arg) {\n                var n = parseInt(item);\n                viewIndexs.push(n);\n            }\n            viewIndexs.sort(function (a, b) {\n                return b - a;\n            });\n            $.each(viewIndexs, function (index, it) {\n                // index = the.chgIndexViewToCache(index);\n                var item = $.extend(dArr[i], arg[it]);\n                dArr.splice(it, 1, item);\n            });\n        };\n        RxmBufferGrid.prototype.getPageInfo = function () {\n            ///<summary> 获取page信息</summary>\n            return this._pageInfo;\n        };\n        RxmBufferGrid.prototype.reload = function (arg) {\n            ///<summary> 重新加载表格(数据更新) </summary>\n            ///<param  name =\"arg\"  type=\"Array\">数组数据,数组元素为json对象<param>\n            if (!this._isRender) {\n                //判断是否为桌面版\n                if (isDesktop(this._config.id)) {\n                    this._renderPc();\n                }\n                else {\n                    this._render();\n                }\n                this._isRender = true;\n            }\n            if (arg && arg.data) {\n                this._config.data = arg.data;\n                //表格追加原数据  the._pageInfo  \n                this._pageInfo.pageData = arg.data;\n                this._pageInfo.dataCount = arg.data.length;\n            }\n            this.refresh();\n        };\n        RxmBufferGrid.prototype.refresh = function () {\n            ///<summary> 刷新表格（视图更新） </summary>\n            var cf = this._config;\n            //清空表格中所有数据\n            this.$tBody.empty();\n            var begin = 0;\n            var end = cf.data.length;\n            if (cf.data) {\n                //表格追加原数据  the._pageInfo  \n                this._pageInfo.pageData = cf.data;\n                this._pageInfo.dataCount = cf.data.length;\n            }\n            //循环迭代数据创建表格行\n            //console.info(\"begin:\"+begin+\" end:\"+end)\n            var i = 0;\n            if (end > 0) {\n                for (var j = begin; j < end; j++) {\n                    var item = this._config.data[j];\n                    this.$tBody.append(this._createRow(this, item, i + 1, j));\n                }\n            }\n            else {\n                //桌面版表格,无数据时需要设置colspan\n                if (isDesktop) {\n                    var thLen = this.$gridWrap.find(\".rxm-table-body th\").length;\n                    this.$tBody.append($(\"<tr class='rxm-nodata-tip-tr'><td class='rxm-nodata-tip' colspan = '\" + thLen + \"'>\" + this._config.refreshTip.nodataTip + \"</td></tr>\"));\n                }\n                else {\n                    this.$tBody.append($(\"<tr class='rxm-nodata-tip-tr'><td class='rxm-nodata-tip'>\" + this._config.refreshTip.nodataTip + \"</td></tr>\"));\n                }\n            }\n            //点击checkbox防止触发行事件\n            if (this._config.slidemenu) {\n                //左滑行 checkbox的input框放在div中\n                this.$gridWrap.find(\".rxm-multi-check\").closest(\"div\").tap(function () {\n                    return false;\n                });\n            }\n            else {\n                //普通行 checkbox的input框放在td中\n                this.$gridWrap.find(\".rxm-multi-check\").closest(\"td\").tap(function () {\n                    return false;\n                });\n            }\n            //设置表格tableBody高度\n            if (this._config.viewMode == \"auto\") {\n                this.$tableBody.css(\"height\", \"auto\");\n            }\n            else {\n                //计算表格tableBody高度\n                if (!!this._config.height) {\n                    //处理_config.height配置参数中包含px，将px替换为空\n                    if (this._config.height.toString().indexOf(\"px\") > 0) {\n                        this._config.height = this._config.height.replace('px', '');\n                    }\n                }\n                else {\n                    this._config.height = this.wrapHeight;\n                    if (this.$titlebar.html() != \"\" && this.$titlebar.css(\"display\") != 'none') {\n                        this._config.height = this._config.height - 50;\n                    }\n                    if (this.$toolbar.html() != \"\" && this.$toolbar.css(\"display\") != 'none') {\n                        this._config.height = this._config.height - 50;\n                    }\n                    if (this.$searchbar.html() != \"\" && this.$searchbar.css(\"display\") != 'none') {\n                        this._config.height = this._config.height - 50;\n                    }\n                }\n                //设置表格tableBody高度\n                this.$tableBody.css(\"height\", this._config.height + \"px\");\n            }\n        };\n        RxmBufferGrid.prototype._render = function () {\n            ///<summary> 加载视图内所有属性（表格、标题栏、工具栏、搜索栏) </summary>\n            //首先检查根据ID判断表容器$gridWrap是否存在，若存在即设置容器\n            // if(!this._isHtmlAttrCfg()){//false\n            //     this.$gridWrap.addClass(\"s_grid\").empty();\n            // }\n            this._config.textEllipsis && this.$gridWrap.addClass(\"rxm-s-grid-ellipsis\");\n            //设置包裹器高度\n            if (this._config.viewMode == \"auto\") {\n                this.$gridWrap.css(\"height\", \"auto\");\n            }\n            else {\n                if (this.$gridWrap.height() !== 0) {\n                    this.wrapHeight = this.$gridWrap.height();\n                }\n                else {\n                    var otherHeight = 0;\n                    var siblings = this.$gridWrap.siblings();\n                    //迭代表格包裹器同级div\n                    for (var i = 0; i < siblings.length; i++) {\n                        if ($(siblings[i]).css(\"display\") != \"none\") {\n                            //计算表格包裹器所有同级div的高度和\n                            otherHeight += $(siblings[i]).height();\n                        }\n                    }\n                    //计算表格包裹器的高度\n                    this.wrapHeight = document.body.scrollHeight - otherHeight;\n                }\n                //设置表格包裹器的高度\n                this.$gridWrap.css(\"height\", this.wrapHeight);\n            }\n            //判断html文件中是否存在定制titlebar\n            if (this.$gridWrap.find(\".rxm-s-grid-titlebar\").length == 0) {\n                this.$gridWrap.append($('<div class=\"rxm-s-grid-titlebar\"></div>'));\n                this.$gridWrap.find(\".rxm-s-grid-titlebar\").css(\"display\", \"none\");\n            }\n            ;\n            //判断html文件中是否存在定制searchbar\n            if (this.$gridWrap.find(\".rxm-s-grid-searchbar\").length == 0) {\n                this.$gridWrap.append($('<div class=\"rxm-s-grid-searchbar\"></div>'));\n                this.$gridWrap.find(\".rxm-s-grid-searchbar\").css(\"display\", \"none\");\n            }\n            ;\n            //判断html文件中是否存在定制toolbar\n            if (this.$gridWrap.find(\".rxm-s-grid-toolbar\").length == 0) {\n                this.$gridWrap.append($('<div class=\"rxm-s-grid-toolbar\"></div>'));\n                this.$gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n            }\n            ;\n            //判断html文件中是否存在定制表格\n            if (this.$gridWrap.find(\".rxm-s-grid-content\").length == 0) {\n                this.$gridWrap.append($('<div class=\"rxm-s-grid-content\"><div class=\"rxm-s-grid-table\"></div></div>'));\n            }\n            ;\n            this.$titlebar = $(\"#\" + this._config.id + \" .rxm-s-grid-titlebar\");\n            this.$searchbar = $(\"#\" + this._config.id + \" .rxm-s-grid-searchbar\");\n            this.$toolbar = $(\"#\" + this._config.id + \" .rxm-s-grid-toolbar\");\n            this.$gridContent = $(\"#\" + this._config.id + \" .rxm-s-grid-content\");\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.ormRereshGridView, $.proxy(this._onRefreshView, this));\n            //加载表格    标题栏、工具栏、搜索栏、表格数据\n            this.renderTitleBar();\n            this.renderToolbar();\n            this.renderSearchBar();\n            this._renderTable();\n        };\n        RxmBufferGrid.prototype._renderTable = function () {\n            ///<summary> 渲染表格 </summary>\n            var $table = this.$gridWrap.find(\".rxm-s-grid-table\").empty();\n            //表格滚动条样式设置\n            var $tableBody = $('<div class=\"rxm-table-body\"><table class=\"table rxm-table-hover\"><tbody></tbody></table></div>');\n            $table.append($tableBody);\n            this.$tableBody = this.$gridWrap.find(\".rxm-table-body\");\n            this.$tBody = this.$gridWrap.find(\"tbody\");\n            //点击事件绑定\n            this.$tableBody.tap(\"tr\", $.proxy(this._onTapLine, this));\n            //长按事件绑定\n            this.$tableBody.press(\"tr\", $.proxy(this._onPressLine, this));\n            var clkFun;\n            var preFun;\n            for (var i = 0; i < this._config.rowevent.length; i++) {\n                if (!!this._config.rowevent[i].click) {\n                    clkFun = this._config.rowevent[i].click;\n                }\n                if (!!this._config.rowevent[i].press) {\n                    preFun = this._config.rowevent[i].press;\n                }\n            }\n            //绑定数据列表配置的所有事件\n            if (!!clkFun) {\n                this.bindTapLineElement({ fn: clkFun }, this);\n            }\n            if (!!preFun) {\n                this.bindPressLineElement({ fn: preFun }, this);\n            }\n        };\n        RxmBufferGrid.prototype._createRow = function (grid, row, rowIndex, baseIndex) {\n            ///<summary> 向表格中追加一行数据 </summary>\n            ///<param name=\"grid\" type=\"Object\">表格对象</param>\n            ///<param name=\"row\" type=\"Array\">行数据</param>\n            //渲染表格行前触发\n            if (typeof (this._config.onBeforeRenderRow) == \"function\") {\n                //可对行数据进行处理\n                row = this._config.onBeforeRenderRow.apply(this, [row]) || row;\n            }\n            //配置tr rowevent\n            var $tr = $(\"<tr></tr>\");\n            if (!!this._config.rowevent && this._config.rowevent.length > 0) {\n                for (var i = 0, length = this._config.rowevent.length; i < 1; i++) {\n                    var item = this._config.rowevent[i];\n                    $tr = $(\"<tr class='\" + item.field + \"'></tr>\");\n                }\n            }\n            if (isDesktop(this._config.id)) {\n                $tr = this.createRowInPc(row, $tr, rowIndex, baseIndex);\n            }\n            else {\n                if (!!this._config.slidemenu && this._config.slidemenu.length > 0) {\n                    $tr = this.createSlideRow(this, row, $tr);\n                }\n                else {\n                    $tr = this.createRow(this, row, $tr);\n                }\n            }\n            return $tr;\n        };\n        RxmBufferGrid.prototype.createRow = function (grid, row, $tr) {\n            ///<summary> 渲染表格行数据(可重写) </summary>\n            ///<param name=\"grid\" type=\"Object\">表格对象</param>\n            ///<param name=\"row\" type=\"Array\">行数据</param>\n            ///<param name=\"$tr\" type=\"Object\">表格行对象</param>\n            //创建表格行数据   共4列  icon 数据内容 (标题+内容)  右向箭头   复选框(默认隐藏)  \n            var $tdIcon = $('<td class=\"rxm-td-icon\"></td>');\n            var $tdInfo = $('<td></td>');\n            var $tdArrow = $('<td class=\"rxm-td-arrow\" ></td>');\n            var $tdCheckbox = $('<td class=\"rxm-td-checkbox fix\" style=\"display:none;\"></td>');\n            var firstField = '1';\n            //循环创建icon与数据列\n            for (var j = 0, item; item = this._config.layout[j++]; j < item.length) {\n                var tdName = item.name;\n                var tdValue = item.format ? item.format({ \"row\": row }) : row[item.field];\n                if (item.field == \"icon\") {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    $tdIcon.append(tdValue);\n                    $tr.append($tdIcon);\n                }\n                else {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    if (firstField === '1') {\n                        if (tdName !== \"\" && tdName !== null) {\n                            $tdInfo.append(\"<span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                        else {\n                            $tdInfo.append(\"<span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                    }\n                    else {\n                        if (tdName !== \"\" && tdName !== null) {\n                            //其他字段换行\n                            $tdInfo.append(\"</br><span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                        else {\n                            //其他字段换行\n                            $tdInfo.append(\"</br><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                    }\n                }\n                $tr.append($tdInfo);\n            }\n            //创建checkbox列   multi属性配置为true：多选框      false：单选按钮\n            if (typeof this._config.multi != \"undefined\") {\n                $tdCheckbox.append('<input class=\"rxm-multi-check\" type=\"' + (this._config.multi ? 'checkbox' : 'radio') + '\" name=\"s_gird_multi_' + (this._config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '>');\n                $tr.append($tdCheckbox);\n            }\n            //创建箭头列 \n            $tdArrow.append($('<img src=\"' + this._arrowImg + '\"/>'));\n            $tr.append($tdArrow);\n            //渲染表格行后触发\n            if (typeof (this._config.onAfterRenderRow) == \"function\") {\n                this._config.onAfterRenderRow.apply($tr, [row]);\n            }\n            return $tr;\n        };\n        /**\n          * 创建左滑菜单行\n          * @param {Object} grid - 表格对象\n          * @param {Object} row - 行数据\n          * @param {Object} $tr - 表格行对象\n          * @returns {Object} $tr - 表格行对象 jquery对象\n          */\n        RxmBufferGrid.prototype.createSlideRow = function (grid, row, $tr) {\n            //创建表格行数据   共4列  icon 数据内容 (标题+内容)   复选框(默认隐藏)  \n            var the = this;\n            var $td = $('<td width=\"100%\" style=\"padding:0px\"></td>');\n            var $wrapperDiv = $('<div class=\"rxm-slide-wrapper clearfix\"></div>');\n            var $scrollDiv = $('<div class=\"rxm-slide-scroll-wrapper clearfix\"></div>');\n            var $iconDiv = $('<div class=\"rxm-icon-div clearfix\"></div>');\n            var $dataDiv = $('<div class=\"rxm-data-div clearfix\"></div>');\n            var $slideBtnDiv = $('<div class=\"rxm-slide-btn-div clearfix\"></div>');\n            var $checkboxDiv = $('<div class=\"rxm-td-checkbox fix\" style=\"display:none;float:left\" ></div>');\n            //数据字段个数\n            var parNum = this._config.layout.length;\n            var firstField = '1';\n            //循环创建icon与数据列\n            for (var j = 0, item; item = this._config.layout[j++]; j < item.length) {\n                var tdName = item.name;\n                var tdValue = item.format ? item.format({ \"row\": row }) : row[item.field];\n                if (item.field == \"icon\") {\n                    the._hasIcon = true;\n                    parNum = parNum - 1;\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    $iconDiv.append(tdValue);\n                    $scrollDiv.append($iconDiv);\n                }\n                else {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    if (firstField === '1') {\n                        if (tdName !== \"\" && tdName !== null) {\n                            $dataDiv.append(\"<span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                        else {\n                            $dataDiv.append(\"<span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                    }\n                    else {\n                        if (tdName !== \"\" && tdName !== null) {\n                            //其他字段换行\n                            $dataDiv.append(\"</br><span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                        else {\n                            //其他字段换行\n                            $dataDiv.append(\"</br><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                    }\n                }\n                $scrollDiv.append($dataDiv);\n            }\n            //创建checkbox列   multi属性配置为true：多选框      false：单选按钮\n            if (typeof this._config.multi != \"undefined\") {\n                $checkboxDiv.append('<input class=\"rxm-multi-check\" type=\"' + (this._config.multi ? 'checkbox' : 'radio') + '\" name=\"s_gird_multi_' + (this._config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '>');\n                $scrollDiv.append($checkboxDiv);\n            }\n            //渲染表格行后触发\n            if (typeof (this._config.onAfterRenderRow) == \"function\") {\n                this._config.onAfterRenderRow.apply($tr, [row]);\n            }\n            $scrollDiv.append($slideBtnDiv);\n            $wrapperDiv.append($scrollDiv);\n            $td.append($wrapperDiv);\n            $tr.append($td);\n            //设置tr中各个部分的div高度值、宽度值\n            this._attrSlideRowStyle($slideBtnDiv, $dataDiv, $scrollDiv, $iconDiv, parNum);\n            //数据行绑定touchStart触屏开始事件\n            this._bindTrSlideEvent($scrollDiv);\n            return $tr;\n        };\n        /**\n         * 设置左滑行内div高度与宽度\n         * @param {Number} parNum - 单个字段高度值\n         */\n        RxmBufferGrid.prototype._attrSlideRowStyle = function ($slideBtnDiv, $dataDiv, $scrollDiv, $iconDiv, parNum) {\n            //数据div高度\n            var dataDivHeight = parNum * this._config.trRowParam.parHeight;\n            //滑动菜单div设置高度\n            //$slideBtnDiv.height(dataDivHeight + this._config.trRowParam.dataMargin);\n            $slideBtnDiv.height(dataDivHeight + this._config.trRowParam.dataMargin / 2);\n            if (this._hasIcon) {\n                this.iconMargin = dataDivHeight / 2 + this._config.trRowParam.dataMargin / 2 - 20;\n                $iconDiv.css(\"margin-top\", this.iconMargin);\n            }\n            //tr宽度\n            var screenWidth = $(window).width() - this._config.trRowParam.trMargin;\n            //数据显示div宽度 tr宽度 减去 icon宽度\n            var dataWidth = screenWidth;\n            //判断是否具有icon列,若有即减去icon列宽度\n            if (this._hasIcon) {\n                dataWidth = screenWidth - this._config.trRowParam.iconWidth;\n            }\n            //数据显示div设置宽度\n            $dataDiv.width(dataWidth);\n            //获取左滑按钮的数量，计算左滑按钮区域面积\n            var itemWidth = 0;\n            for (var i = 0, length = this._config.slidemenu.length; i < length; i++) {\n                var item = this._config.slidemenu[i];\n                var $btnWrap = $('<div class=\"rxm-slide-btn\"></div>');\n                $btnWrap.tap(this, item.callback);\n                var $btn = $('<button>' + item.name + '</button>');\n                $btn.attr(\"style\", item.style);\n                $btn.attr(\"class\", item.icon);\n                $btn.addClass(item.class);\n                if (!!item.width) {\n                    $btn.width(item.width);\n                }\n                $btnWrap.append($btn);\n                $slideBtnDiv.append($btnWrap);\n                itemWidth += item.width ? parseInt(item.width) : this._config.leftSlideParam.btnWidth;\n                console.info(this.btnAreaWidth);\n            }\n            //滑动菜单区域div宽度 每个按钮宽度之和\n            this.btnAreaWidth = itemWidth;\n            //滑动按钮div设置宽度  默认宽度每个60  可配置\n            $slideBtnDiv.width(this.btnAreaWidth);\n            //具有滚动条div宽度 tr宽度 加上 隐藏按钮宽度\n            var scrollWidth = screenWidth + this.btnAreaWidth;\n            //滚动条div设置宽度  \n            $scrollDiv.width(scrollWidth);\n            this.scrollDivWidth = scrollWidth;\n            this.dataDivWidth = dataWidth;\n        };\n        /**\n         * 绑定表格行左滑事件\n         * @param {Object} $slideTr - 表格行对象\n         */\n        RxmBufferGrid.prototype._bindTrSlideEvent = function ($slideTr) {\n            var the = this;\n            //数据行绑定touchStart触屏开始事件\n            $slideTr.touchStart(function (e, data) {\n                if (!the._pressFlag) {\n                    // 记录当前触屏的行对象 \n                    the.slideCurSwipeTr = this;\n                    // 当前滑动数据行设定过渡效果设置  1、过渡效果的 CSS 属性的名称   2、完成过渡效果需要多少秒或毫秒  3、速度效果的速度曲线（过渡效果）\n                    the._setTransition($(the.slideCurSwipeTr));\n                    // 点击除当前左滑对象之外的任意其他位置\n                    if (the.slideLastSwipeTr && the.slideCurSwipeTr != the.slideLastSwipeTr) {\n                        $(the.slideCurSwipeTr).removeData(\"position\");\n                        $(the.slideLastSwipeTr).removeData(\"position\");\n                        // 上一个左滑对象设定过渡效果设置  1、过渡效果的 CSS 属性的名称   2、完成过渡效果需要多少秒或毫秒  3、速度效果的速度曲线（过渡效果）\n                        the._setTransition($(the.slideLastSwipeTr));\n                        // 隐藏上一个左滑对象按钮\n                        the._resetStatus($(the.slideLastSwipeTr));\n                        // 清空上一个左滑的对象\n                        the.slideLastSwipeTr = null;\n                    }\n                }\n            });\n            //数据行绑定touchMove触屏移动事件\n            $slideTr.touchMove(function (e, data) {\n                if (!the._pressFlag) {\n                    //滑动距离  当前滑动横向坐标减去起始横向坐标\n                    var moveDis = data.position.delta[0].moved;\n                    //滑动方向\n                    var curSwipe = data.curSwipe;\n                    //console.info('moveDis==='+moveDis);\n                    //左滑，距离在75之内，按钮区域随着左滑距离逐渐显示，大于75后按钮区域不变\n                    console.info('btnAreaWidth===' + the.btnAreaWidth);\n                    if (moveDis <= the.btnAreaWidth && curSwipe == \"Left\" && $(the.slideCurSwipeTr).data(\"position\") != \"view\") {\n                        $(the.slideCurSwipeTr).css('-webkit-transform', 'translate3d(' + -moveDis + 'px, 0px, 0px)');\n                    }\n                    //左滑完全显示按钮区域，标识词条数据位置为显示\n                    if (moveDis > the.btnAreaWidth && curSwipe == \"Left\") {\n                        $(the.slideCurSwipeTr).data(\"position\", \"view\");\n                        console.info('position===' + the.slideCurSwipeTr);\n                    }\n                    //右滑，按钮区域直接隐藏\n                    if (curSwipe == \"Right\") {\n                        the._resetStatus($(the.slideCurSwipeTr));\n                    }\n                }\n            });\n            //数据行绑定touchEnd触屏结束事件\n            $slideTr.touchEnd(function (e, data) {\n                if (!the._pressFlag) {\n                    // 点击除当前左滑对象之外的任意其他位置\n                    if (the.slideLastSwipeTr && the.slideCurSwipeTr != the.slideLastSwipeTr) {\n                        // 右滑隐藏按钮\n                        the._resetStatus($(the.slideLastSwipeTr));\n                        // 清空上一个左滑的对象\n                        the.slideLastSwipeTr = null;\n                    }\n                    //滑动方向\n                    var curSwipe = data.curSwipe;\n                    if (curSwipe != \"\") {\n                        //移动距离  结束时横向坐标减去起始横向坐标\n                        var moveDis = data.position.delta[0].moved;\n                        console.info('moveDis===' + moveDis);\n                        //当滑动结束时，左滑距离大于设置距离数值，显示按钮区域\n                        if (moveDis > the._config.leftSlideParam.viewWidth && curSwipe == \"Left\") {\n                            //显示按钮区域\n                            $(the.slideCurSwipeTr).css('-webkit-transform', 'translate3d(' + (-the.btnAreaWidth) + 'px, 0px, 0px)');\n                            $(the.slideCurSwipeTr).data(\"position\", \"view\");\n                            the.slideLastSwipeTr && the.slideLastSwipeTr != the.slideCurSwipeTr &&\n                                $(the.slideLastSwipeTr).css('-webkit-transform', 'translate3d(0px, 0px, 0px)'); // 已经左滑状态的按钮右滑\n                            the.slideLastSwipeTr = the.slideCurSwipeTr; // 记录上一个左滑的对象\n                        }\n                        else if (moveDis < the._config.leftSlideParam.viewWidth && curSwipe == \"Left\") {\n                            the._resetStatus($(the.slideCurSwipeTr));\n                            if (the.slideCurSwipeTr == the.slideLastSwipeTr) {\n                                // 右滑\n                                the._resetStatus($(the.slideCurSwipeTr));\n                                // 清空上一个左滑的对象\n                                the.slideLastSwipeTr = null;\n                            }\n                        }\n                    }\n                }\n            });\n        };\n        RxmBufferGrid.prototype.renderTitleBar = function () {\n            ///<summary> 渲染表格标题栏(可重写) </summary>\n            if (this._config.title) {\n                this.$titlebar.css(\"display\", \"\");\n                this.$titlebar.empty().append(this._config.title);\n            }\n        };\n        RxmBufferGrid.prototype.renderToolbar = function () {\n            ///<summary> 渲染表格工具栏(可重写) </summary>\n            //html页面中已经定义工具栏，并且将默认按钮绑定默认事件\n            var liBtn = this.$toolbar.find(\"ul li\");\n            for (var i = 0; i < liBtn.length; i++) {\n                if ($(liBtn[i]).is(\".rxm-default-delete\")) {\n                    $(liBtn[i]).tap($.proxy(this.bindDeleteBtn, this));\n                }\n                if ($(liBtn[i]).is(\".rxm-default-all-select\")) {\n                    $(liBtn[i]).tap($.proxy(this.bindSelectAllBtn, this));\n                }\n                if ($(liBtn[i]).is(\".rxm-default-cancel\")) {\n                    $(liBtn[i]).tap($.proxy(this.bindCancelBtn, this));\n                }\n            }\n            if (!!this._config.toolbar && this._config.toolbar.length > 0) {\n                var $ul = $(\"<ul style='width:330px;'></ul>\");\n                for (var i = 0, length = this._config.toolbar.length; i < length; i++) {\n                    var item = this._config.toolbar[i];\n                    var $li = $('<li></li>');\n                    $li.tap(this, item.callback);\n                    $li.attr(\"style\", item.style);\n                    var $a = $('<a></a>');\n                    var $i = $('<i></i>');\n                    $i.attr(\"class\", item.icon);\n                    $i.appendTo($a);\n                    $a.append(item.name);\n                    $a.appendTo($li);\n                    $li.appendTo($ul);\n                }\n                this.$toolbar.empty().append($ul);\n            }\n        };\n        RxmBufferGrid.prototype.renderSearchBar = function () {\n            ///<summary> 渲染表格搜索栏(可重写) </summary>\n            if (!!this._config.searchbar) {\n                this.$searchbar.css(\"display\", \"\");\n            }\n        };\n        RxmBufferGrid.prototype.initPress = function () {\n            ///<summary> 触发长按状态函数 </summary>\n            this._pressFlag = true;\n            if (!!this._config.slidemenu) {\n                this.$gridWrap.find(\".rxm-data-div\").css(\"width\", this.dataDivWidth - 30);\n                this.$gridWrap.find(\".rxm-slide-scroll-wrapper\").css(\"width\", this.scrollDivWidth + 40);\n                this.$gridWrap.find(\".rxm-td-checkbox\").css(\"margin-top\", this.iconMargin);\n                if (!!this._config.toolbar || this.$gridWrap.find(\".rxm-s-grid-toolbar\").length > 0) {\n                    //显示toolbar\n                    this.$gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"\");\n                    this._config.height = this._config.height - 50;\n                    this.$tableBody.css(\"height\", this._config.heigh + \"px\");\n                }\n                //显示行数据右侧复选框\n                this.$gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"\");\n            }\n            else {\n                //隐藏行数据右侧箭头\n                this.$gridWrap.find(\".rxm-td-arrow\").css(\"display\", \"none\");\n                if (this.$toolbar.html() != \"\" && this.$toolbar.css(\"display\") == 'none') {\n                    //显示toolbar\n                    this.$gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"\");\n                    //设置tableBody高度\n                    this._config.height = this._config.height - 50;\n                    this.$tableBody.css(\"height\", this._config.height + \"px\");\n                }\n                //显示行数据右侧复选框\n                this.$gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"\");\n            }\n        };\n        RxmBufferGrid.prototype.cancelPress = function () {\n            ///<summary> 取消长按状态 </summary>\n            this.$gridWrap.find(\".rxm-multi-check\").prop(\"checked\", false);\n            this._pressFlag = false;\n            this._allChecked = true;\n            //隐藏行数据右侧复选框\n            this.$gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"none\");\n            if (!!this._config.slidemenu) {\n                this.$gridWrap.find(\".rxm-data-div\").css(\"width\", this.dataDivWidth);\n                this.$gridWrap.find(\".rxm-slide-scroll-wrapper\").css(\"width\", this.scrollDivWidth);\n            }\n            //显示行数据右侧箭头\n            this.$gridWrap.find(\".rxm-td-arrow\").css(\"display\", \"\");\n            if (this.$toolbar.html() != \"\" && this.$toolbar.css(\"display\") != 'none') {\n                //隐藏toolbar\n                this.$gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n                //设置tableBody高度\n                this._config.height = this._config.height + 50;\n                this.$tableBody.css(\"height\", this._config.height + \"px\");\n            }\n        };\n        RxmBufferGrid.prototype.allSelect = function () {\n            ///<summary> 全选/取消全选函数 </summary>\n            //获取表格中所有checkbox  jquery对象\n            var $checkTr = this.$gridWrap.find(\"input[name='s_gird_multi_\" + this._config.id + \"']\");\n            if (this._allChecked) {\n                $checkTr.prop(\"checked\", true);\n                this._allChecked = false;\n            }\n            else {\n                $checkTr.prop(\"checked\", false);\n                this._allChecked = true;\n            }\n        };\n        RxmBufferGrid.prototype.bindTapLineElement = function (arg, scope) {\n            ///<summary> 表格行绑定tap事件 </summary>\n            ///<param name=\"\"  value=\"\"></param>\n            if (!arg.selector) {\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr)\";\n            }\n            else if (arg.selector.indexOf(\"tr\") !== 0) {\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr) \" + arg.selector;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            //this.$gridWrap.on(\"append\", arg.data, $.proxy(arg.fn, the), arg.one)\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.tapInLine, arg.selector, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格行绑定tap事件(兼容工作流)\n        */\n        RxmBufferGrid.prototype.callbackTapLineElement = RxmBufferGrid.prototype.bindTapLineElement;\n        RxmBufferGrid.prototype.bindPressLineElement = function (arg, scope) {\n            ///<summary> 表格行绑定长按事件 </summary>\n            ///<param name=\"\"  value=\"\"></param>\n            if (!arg.selector) {\n                //暂无数据不绑定点击事件\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr)\";\n            }\n            else if (arg.selector.indexOf(\"tr\") !== 0) {\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr) \" + arg.selector;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            //this.$gridWrap.press(\"tr\", arg.data, $.proxy(arg.fn, the), arg.one);\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.pressInLine, arg.selector, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格行绑定长按事件(兼容工作流)\n        */\n        RxmBufferGrid.prototype.callbackPressLineElement = RxmBufferGrid.prototype.bindPressLineElement;\n        /**\n        * 表格绑定删除按钮默认事件 删除选中的数据行\n        */\n        RxmBufferGrid.prototype.bindDeleteBtn = function () {\n            var the = this;\n            //获取选中行的index数据\n            var selIdx = the.getSelectedRow();\n            if (!selIdx || selIdx.length < 1) {\n                Util.alert(\"您好，请选择一条数据\");\n                return;\n            }\n            Util.confirm(\"您是否要删除选中的数据？\", function () {\n                //获取选中行数据\n                var selData = the.getSelectedData();\n                the.deleteRow(selIdx);\n            }, function () {\n                return;\n            });\n        };\n        /**\n        * 表格绑定全选按钮默认事件 选中当前页面所有数据\n        */\n        RxmBufferGrid.prototype.bindSelectAllBtn = function () {\n            this.allSelect();\n        };\n        /**\n        * 表格绑定取消按钮默认事件 长按事件取消\n        */\n        RxmBufferGrid.prototype.bindCancelBtn = function () {\n            this.cancelPress();\n        };\n        RxmBufferGrid.prototype.formatDataAfterAjaxSuccess = function (args) {\n            ///<summary> </summary>\n            ///<param name=\"\"  value=\"\"></param>\n            return args;\n        };\n        RxmBufferGrid.prototype.formatDataBeforeAjax = function (args) {\n            ///<summary> </summary>\n            ///<param name=\"\"  value=\"\"></param>\n            return args;\n        };\n        RxmBufferGrid.prototype.callbackDataAppend = function (arg, scope) {\n            ///<summary> 追加</summary>\n            if (typeof arg == \"boolean\") {\n                arg = {\n                    fn: this._onAppend,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.appendRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        RxmBufferGrid.prototype.callbackDataInsert = function (arg, scope) {\n            if (typeof arg == \"boolean\") {\n                arg = {\n                    fn: this._onInsert,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.insertRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        RxmBufferGrid.prototype.callbackDataDelete = function (arg, scope) {\n            if (typeof arg == \"boolean\") {\n                arg = {\n                    fn: this._onDelete,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.deleteRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        RxmBufferGrid.prototype.callbackDataUpdate = function (arg, scope) {\n            if (typeof arg == \"boolean\") {\n                arg = {\n                    fn: this._onUpdate,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.updateRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        RxmBufferGrid.prototype._onAppend = function (e, data) {\n            this.refresh();\n        };\n        RxmBufferGrid.prototype._onInsert = function (e, data) {\n            this.refresh();\n        };\n        RxmBufferGrid.prototype._onDelete = function (e, data) {\n            this.refresh();\n        };\n        RxmBufferGrid.prototype._onUpdate = function (e, data) {\n            this.refresh();\n        };\n        RxmBufferGrid.prototype._onRefreshView = function (e, arg) {\n            ///<summary>响应 ormRereshGridView消息</summary>\n            ///<param  name=\"arg\"  value=\"cssArgs.clsGridMobile.refresh\"></param>\n            this.refresh(arg);\n        };\n        RxmBufferGrid.prototype._onPressLine = function (e, data) {\n            ///<summary> 默认长按事件  </summary>\n            var $tr = e.currentTarget;\n            var index = this.$tBody.find(\"tr\").index($tr);\n            var data = {\n                \"index\": index,\n                \"row\": this.getRowDataByViewIndexs(index),\n                \"pageInfo\": this._pageInfo\n            };\n            e.data = data;\n            $(e.target).trigger(RxmBufferGrid.msgEnum.pressInLine, data);\n            return false;\n        };\n        /**\n         * 默认点击事件\n         * @param {Event} e - jquery Event对象\n         */\n        RxmBufferGrid.prototype._onTapLine = function (e, data) {\n            if (isDesktop(this._config.id) && $(e.target)[0].tagName === \"INPUT\") {\n            }\n            else {\n                var $tr = e.currentTarget;\n                var index = this.$tBody.find(\"tr\").index($tr);\n                var data = {\n                    \"index\": index,\n                    \"row\": this.getRowDataByViewIndexs(index),\n                    \"pageInfo\": this._pageInfo\n                };\n                e.data = data;\n                $(e.target).trigger(RxmBufferGrid.msgEnum.tapInLine, data);\n                return false;\n            }\n        };\n        RxmBufferGrid.prototype.getRowDataByViewIndexs = function (viewIndexs, bClone) {\n            ///<summary>根据grid 视图索引返回行数据</summary>\n            ///<param  name=\"viewIndexs\" type=\"Array\"> 视图索引，number 或者 数组 </param>\n            ///<return type=\"Array\"  elementype=\"\"></return>\n            ///<summary> 根据索引查询行数据  </summary>\n            ///<param name=\"viewIndexs\" type=\"Array\">viewIndexs为数组</param>\n            var isOne = false;\n            var cf = this._config;\n            bClone = bClone || false;\n            var ret;\n            if ($.isNumeric(viewIndexs)) {\n                var t = viewIndexs;\n                if (t >= 0 && t < cf.data.length)\n                    ;\n                {\n                    ret = cf.data[t];\n                }\n                return ret;\n            }\n            var the = this;\n            var rowData;\n            ret = {};\n            if ($.isArray(viewIndexs)) {\n                $.each(viewIndexs, function (index, it) {\n                    var t = it;\n                    if (t >= 0 && t < cf.data.length)\n                        ;\n                    {\n                        rowData = cf.data[t];\n                        if (bClone) {\n                            rowData = $.extend(true, {}, rowData);\n                        }\n                        ret[it] = rowData;\n                    }\n                });\n                return ret;\n            }\n            return ret;\n        };\n        /**\n        * 判断是否通过html属性配置生成表格\n        * @returns {Boolean} - 状态值\n        */\n        RxmBufferGrid.prototype._isHtmlAttrCfg = function () {\n            if (this.$gridWrap.find(\"rxm-table-head\").length != 0) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        //重置按钮区域处于隐藏状态\n        RxmBufferGrid.prototype._resetStatus = function ($obj) {\n            $obj.css('-webkit-transform', 'translate3d(0px, 0px, 0px)');\n        };\n        //设定过渡效果参数\n        RxmBufferGrid.prototype._setTransition = function ($obj) {\n            var the = this;\n            $obj.css({\n                '-webkit-transition-property': '-webkit-transform',\n                '-webkit-transition-duration': the._config.leftSlideParam.traDuration + 'ms',\n                '-webkit-transition-timing-function': the._config.leftSlideParam.traFunction\n            });\n        };\n        /**\n         * 判断是否为桌面版\n         * @param {String} wrapId - 表格包裹器ID\n         * @returns {Boolean} - 桌面版状态值\n         */\n        function isDesktop(wrapId) {\n            var $gw = $(\"#\" + wrapId);\n            if ($gw.is(\".rxm-grid-desktop\")) {\n                return true;\n            }\n            if ($gw.is(\".rxm-grid-mobile\")) {\n                return false;\n            }\n            if ($gw.is(\".rxm-grid-mobile-desktop\")) {\n                if ($(document.body).is(\".rxm-desktop\")) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n        /***************************************************** 桌面版表格函数 ********************************************************/\n        /**\n         * 渲染PC端表格行数据(可重写)\n         * @param {Object} row - 行数据\n         * @param {Object} $tr - 行数据\n         * @param {Number} rowIndex - 行索引\n         * @param {Number} baseIndex - true克隆数据，undefined，false 返回 view 数据此为默认\n         * @returns {Object} $tr - 表格行对象 jquery对象\n         */\n        RxmBufferGrid.prototype.createRowInPc = function (row, $tr, rowIndex, baseIndex) {\n            var _index = rowIndex || (function guid() {\n                function s4() {\n                    return Math.floor((1 + Math.random()) * 0x10000)\n                        .toString(16)\n                        .substring(1);\n                }\n                return s4() + s4() + '' + s4() + '' + s4() + '' +\n                    s4() + '' + s4() + s4() + s4();\n            })();\n            //console.log(_index);\n            $tr.data(\"index\", _index);\n            row[\"_index\"] = _index;\n            if (!!this._config.index) {\n                $tr.append('<td align=\"center\" class=\"index\" width=\"35px\">' + (rowIndex + baseIndex) + '</td>');\n            }\n            if (typeof this._config.multi != \"undefined\") {\n                $tr.append('<td align=\"center\" class=\"fix\" width=\"24px\"><input type=\"' + (this._config.multi ? 'checkbox' : 'radio') + '\" name=\"rxm-s-gird-multi-' + (this._config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '></td>');\n            }\n            for (var j = 0, item, $td; item = this._config.layout[j++];) {\n                tdValue = row[item.field];\n                //format重写函数名称定义\n                var formatFun = \"format\" + item.field;\n                //表格config对象中layout中数据format处理\n                if (item.format) {\n                    tdValue = item.format({ \"row\": row });\n                }\n                //重写format函数\n                if ($.isFunction(this[formatFun])) {\n                    tdValue = this[formatFun](row);\n                }\n                tdValue = (tdValue || tdValue == 0) ? tdValue : \"\";\n                $td = $('<td class=\"' + this._config.id + '-' + item.field + '\"' + (item.align ? ' align=\"' + item.align + '\"' : '') + '></td>');\n                //td添加点击效果样式\n                if (item.clickstyle) {\n                    $td.addClass(\"rxm-click-style\");\n                }\n                item.click ? function () {\n                    $td.append('<a' + (item.field ? ' class=\"' + item.field + '\"' : '') + '></a>');\n                    $td.children(\"a\").append(tdValue);\n                }() : $td.append(tdValue);\n                $tr.append($td);\n            }\n            $tr.children(\"td\").each(function () {\n                $(this).attr(\"title\", $(this).text());\n            });\n            return $tr;\n        };\n        /**\n        * 桌面端 加载视图内所有属性（表格、标题栏、工具栏、搜索栏、分页栏)\n        */\n        RxmBufferGrid.prototype._renderPc = function () {\n            //行高\n            var trHeight = 40;\n            //清空表格包裹器\n            this.$gridWrap.addClass(\"rxm-s-grid\");\n            //添加隐藏多余字符样式\n            this._config.textEllipsis && this.$gridWrap.addClass(\"rxm-s-grid-ellipsis\");\n            //判断html文件中是否存在定制titlebar\n            if (this.$gridWrap.find(\".rxm-s-grid-titlebar\").length == 0) {\n                this._renderTitleBarPc();\n            }\n            //判断html文件中是否存在定制searchbar\n            if (this.$gridWrap.find(\".rxm-s-grid-searchbar\").length == 0) {\n                this._renderSearchBarPc();\n            }\n            //判断html文件中是否存在定制toolbar\n            if (this.$gridWrap.find(\".rxm-s-grid-toolbar\").length == 0) {\n                this._renderToolbarPc();\n            }\n            else {\n                //工具栏默认按钮事件绑定\n                this._setDefalToolbarEvent();\n            }\n            //判断html文件中是否存在定制表格\n            if (this.$gridWrap.find(\".rxm-s-grid-content\").length == 0) {\n                this._renderContentPc();\n            }\n            else {\n                //行事件绑定\n                this._setTableRowEvent();\n                //表头全选checkbox点击事件绑定\n                this._setTableHeadEvent();\n            }\n            //隐藏分页栏 buffer表格没有分页功能\n            this.$gridWrap.find(\".rxm-s-grid-pagination\").css('display', 'none');\n            //设置表格高度 如果设置表格高速则直接使用设置高度 \n            /**\n            * 设置表格rxm-table-body高度\n            * 1、如果直接配置高度则直接使用设置高度\n            * 2、如果没有设置表格高度，但是设置分页，表格高度则是分页行数的高度\n            * 3、如果没有设置高度、也没有分页，则表格根据数据条目数据自动填充\n            */\n            if (!!this._config.height) {\n                _wrapHeight = this._config.height;\n                this.$gridWrap.find(\".rxm-table-body\").css(\"height\", _wrapHeight);\n            }\n            else {\n                this.$gridWrap.find(\".rxm-table-body\").css(\"height\", \"auto\");\n            }\n            //绑定刷新函数  doc中_refresh()函数激发\n            this.$gridWrap.on(RxmBufferGrid.msgEnum.ormRereshGridView, $.proxy(this._onRefreshView, this));\n        };\n        /**\n        * 桌面端 渲染表格\n        */\n        RxmBufferGrid.prototype._renderTablePc = function () {\n            //清空表格中行数据\n            var $table = this.$gridWrap.find(\".rxm-s-grid-table\").empty();\n            $table.append('<div class=\"rxm-table-head\"><table onselectstart=\"return false;\" class=\"rxm-table rxm-table-hover\"><thead></thead></table><div class=\"dragTrigger\"></div></div>');\n            var style = 'style=\"overflow-x:hidden;overflow-y:auto;' + (this._config.height && \"height:\" + this._config.height) + '\"';\n            var $tableBody = $('<div class=\"rxm-table-body\"' + style + '><table class=\"table rxm-table-hover\"><thead></thead><tbody></tbody></table></div>');\n            $table.append($tableBody);\n            this._setTableRowEvent();\n            this._renderTableHeadPc();\n        };\n        /**\n        * 桌面端 渲染表格头部\n        */\n        RxmBufferGrid.prototype._renderTableHeadPc = function () {\n            var $tableHead = this.$gridWrap.find(\".rxm-s-grid-table table thead\").empty();\n            var html = \"\";\n            //渲染索引表头\n            if (!!this._config.index) {\n                html += '<th align=\"center\" class=\"index noDrag\" width=\"35px\"></th>';\n            }\n            //渲染checkbox表头\n            if (typeof this._config.multi != \"undefined\") {\n                html += '<th align=\"center\" class=\"fix noDrag\" width=\"24px\">' + (this._config.multi ? '<input type=\"checkbox\">' : '') + '</th>';\n            }\n            var layout = this._config.layout;\n            for (var i = 0, item; item = layout[i++];) {\n                var width = (item.width ? \"width:\" + item.width + \";\" : \"width:\" + (100 / layout.length + '%') + \";\");\n                var align = (item.align ? \"text-align:\" + item.align + \";\" : \"\");\n                var style = 'style=\"' + align + ' ' + width + '\"';\n                html += '<th ' + style + ' class=\"' + item.field + '\" title=\"' + item.name + '\">' + item.name + (item.sort ? '<i class=\"fa fa-sort\"></i>' : '') + '</th>';\n            }\n            $tableHead.append('<tr>' + html + '</tr>');\n            this.$gridWrap.find(\".rxm-s-grid-table .rxm-table-body thead th\").removeAttr(\"title\").empty();\n            //表头全选checkbox点击事件绑定\n            this._setTableHeadEvent();\n        };\n        /**\n        * 桌面端 表格行事件绑定\n        */\n        RxmBufferGrid.prototype._setTableRowEvent = function () {\n            //点击事件绑定  这个需要认真斟酌\n            this.$tBody = this.$gridWrap.find(\".rxm-s-grid-table .rxm-table-body tbody\");\n            this.$tBody.tap(\"tr\", $.proxy(this._onTapLine, this));\n            var clkFun;\n            var aFun;\n            var aFunClass;\n            for (var i = 0; i < this._config.rowevent.length; i++) {\n                if (!!this._config.rowevent[i].click) {\n                    clkFun = this._config.rowevent[i].click;\n                }\n            }\n            for (var i = 0; i < this._config.layout.length; i++) {\n                if (!!this._config.layout[i].click) {\n                    aFun = this._config.layout[i].click;\n                    aFunClass = \".\" + this._config.layout[i].field;\n                }\n            }\n            //绑定数据列表配置的所有事件\n            if (!!clkFun) {\n                this.bindTapLineElement({ fn: clkFun }, this);\n            }\n            if (!!aFun) {\n                this.bindTapLineElement({ selector: aFunClass, fn: aFun }, this);\n            }\n        };\n        /**\n        * 桌面端 表头全选checkbox点击事件绑定\n        */\n        RxmBufferGrid.prototype._setTableHeadEvent = function () {\n            var $tHead = this.$gridWrap.find(\".rxm-s-grid-table .rxm-table-head thead\"), _$tBody = this.$gridWrap.find(\".rxm-s-grid-table .rxm-table-body tbody\");\n            $tHead.tap(\"th\", function (event) {\n                var nodeName = event.target.nodeName;\n                if (nodeName == \"INPUT\") {\n                    var checked = $(event.target).is(\":checked\");\n                    _$tBody.find(\"input\").each(function () {\n                        if (checked) {\n                            this.checked = true;\n                        }\n                        else {\n                            $(this).removeAttr(\"checked\");\n                        }\n                    });\n                }\n            });\n        };\n        /**\n        * 渲染表格标题栏\n        */\n        RxmBufferGrid.prototype._renderTitleBarPc = function () {\n            this.$gridWrap.append($('<div class=\"rxm-s-grid-titlebar\"></div>'));\n            this.$titlebar = this.$gridWrap.find(\".rxm-s-grid-titlebar\");\n            this.$titlebar.css(\"display\", \"none\");\n            if (this._config.title) {\n                this.$titlebar.css(\"display\", \"\");\n                this.$titlebar.empty().append(this._config.title);\n            }\n        };\n        /**\n        * 渲染表格搜索栏\n        */\n        RxmBufferGrid.prototype._renderSearchBarPc = function () {\n            this.$gridWrap.append($('<div class=\"rxm-s-grid-searchbar\"></div>'));\n            this.$gridWrap.find(\".rxm-s-grid-searchbar\").css(\"display\", \"none\");\n            if (!!this._config.searchbar) {\n                this.$searchbar.css(\"display\", \"\");\n            }\n        };\n        /**\n        * 桌面端 渲染表格工具栏\n        */\n        RxmBufferGrid.prototype._renderToolbarPc = function () {\n            this.$gridWrap.append($('<div class=\"rxm-s-grid-toolbar\"></div>'));\n            this.$toolbar = this.$gridWrap.find(\".rxm-s-grid-toolbar\");\n            this.$gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n            //通过config对象生成工具栏\n            if (!!this._config.toolbar && this._config.toolbar.length > 0) {\n                this.$toolbar.css(\"display\", \"\");\n                var $ul = $(\"<ul style='width:100%'></ul>\");\n                for (var i = 0, length = this._config.toolbar.length; i < length; i++) {\n                    var item = this._config.toolbar[i];\n                    var $li = $('<li></li>');\n                    $li.tap(this, item.callback);\n                    $li.attr(\"style\", item.style);\n                    var $a = $('<a></a>');\n                    var $i = $('<i></i>');\n                    $i.attr(\"class\", item.icon);\n                    $i.appendTo($a);\n                    $a.append(item.name);\n                    $a.appendTo($li);\n                    $li.appendTo($ul);\n                }\n                this.$toolbar.empty().append($ul);\n                //表格工具栏默认按钮事件绑定\n                this._setDefalToolbarEvent();\n            }\n        };\n        /**\n        * 桌面端 表格工具栏默认按钮事件绑定\n        */\n        RxmBufferGrid.prototype._setDefalToolbarEvent = function () {\n            //获取所有按钮，判断是否有默认值定义\n            var liBtn = this.$gridWrap.find(\".rxm-s-grid-toolbar ul li\");\n            //包裹器html中默认定义三个按钮  删除、全选、取消\n            if (liBtn.length > 0) {\n                for (var i = 0; i < liBtn.length; i++) {\n                    if ($(liBtn[i]).is(\".rxm-default-delete\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindDeleteBtn, this));\n                    }\n                    if ($(liBtn[i]).is(\".rxm-default-all-select\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindSelectAllBtn, this));\n                    }\n                    if ($(liBtn[i]).is(\".rxm-default-cancel\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindCancelBtn, this));\n                    }\n                }\n            }\n        };\n        /**\n        * 桌面端 渲染表格数据包裹器\n        */\n        RxmBufferGrid.prototype._renderContentPc = function () {\n            this.$gridWrap.append($('<div class=\"rxm-s-grid-content\"><div class=\"rxm-s-grid-table\"></div></div>'));\n            this._renderTablePc();\n        };\n        thisObj = new RxmBufferGrid(cfg);\n        return thisObj;\n    };\n    if (!$.fn.RxmBufferGrid) {\n        ClsFactory.clsDefine = clsdef;\n    }\n    return ClsFactory;\n});\n","define(\"RxmGridDocument\", [], function () {\n    var cls = function (config, $grid) {\n        ///<param  name=\"config\" value=\"cssArgs.clsGridMobile.clsGridMobile\"></param>\n        ///<param name=\"$grid\"  type=\"jQuery\"></param>\n        this.$gridWrap = $grid;\n        this._config = config;\n        //真分页时，后端返回数据类型结构为此结构即可      \n        //排序参数\n        this._sortParam = {\n            field: \"\",\n            order: \"\"\n        };\n        this.$gridWrap = $(\"#\" + this._config.id);\n        if (this.$gridWrap.length == 0) {\n            console.error(\"id=\" + this._config.id + \"表格不存在\");\n        }\n    };\n    /**\n    * 返回页面缓存的首页索引\n    * @param {Array} dec - 开始索引值\n    * @param {Number} index - 开始索引值\n    * @param {Number} delLen - 开始索引值\n    * @param {Array} src - 开始索引值\n    * @returns {Array} dec - 处理后的数据数组\n    */\n    cls.prototype._spliceEx = function (dec, index, delLen, src) {\n        dec.splice(index, delLen);\n        var rear = dec.splice(index, dec.length);\n        rear = src.concat(rear);\n        var i = 0;\n        for (i = 0; i < rear.length; i++) {\n            dec.splice(dec.length, 0, rear[i]);\n        }\n        return dec;\n    };\n    /**\n    * 返回页面缓存的首页索引\n    * @param {Number} beginIndex - 开始索引值\n    * @returns {Number} - 缓存首页索引\n    */\n    cls.prototype.cacheBegin = function (beginIndex) {\n        var cf = this._config;\n        if (!!beginIndex) {\n            cf.param.cacheBegin = beginIndex;\n            cf.curPage = beginIndex;\n        }\n        else {\n            return cf.param.cacheBegin;\n        }\n        ;\n    };\n    /**\n    * 缓存页参数\n    * @param {Number} totalPage - 总页码数\n    * @returns {Object} ret - 缓存页数据\n    */\n    cls.prototype.cachePageNum = function (totalPage) {\n        var cf = this._config;\n        var ret = {\n            viewPage: 0,\n            cachePage: 1\n        };\n        ret.cacheBegin = cf.param.cacheBegin;\n        ret.viewBegin = cf.param.viewBegin;\n        ret.viweMaxLen = cf.param.viweMaxLen;\n        ret.cacheMaxLen = cf.param.cacheMaxLen;\n        ret.data = cf.param.data;\n        if ($.isExist(totalPage)) {\n            ret.cachePage = totalPage - cf.param.cacheBegin; //从1开始\n            ret.viewPage = totalPage - cf.param.cacheBegin + cf.param.viewBegin;\n        }\n        else {\n            ret.cachePage = undefined;\n            ret.viewPage = undefined;\n        }\n        ;\n        return ret;\n    };\n    /**\n    * 插入分页的一页数据\n    * @param {Number} totalIndex - 总页码数\n    * @returns {invalidMode} ret - 缓存页数据\n    */\n    cls.prototype.insertPageByTotal = function (rows, totalIndex, invalidMode) {\n        var ret = {};\n        var cf = this._config;\n        invalidMode = $.extend(true, {}, cf.invalidMode, invalidMode);\n        var spliceBegin = 0, spliceLen = 0;\n        var cache = this.cachePageNum(totalIndex);\n        var oldLen = cf.param.data.length;\n        var isInsertInHeader = cache.cachePage < 0;\n        //cache.cachePage + 1  预计新的内存长度\n        var isInsertInRear = (cache.cachePage + 1 - Math.ceil(cache.data.length / cf.pageSize)) > 0;\n        if (totalIndex >= cache.cacheBegin - 1 && totalIndex <= cache.cacheBegin + cache.cacheMaxLen) {\n            if (invalidMode.up == 0) {\n                if (invalidMode.down == 0) { //data  in front is invalid  data behind  is invalid\n                    cf.param.data = rows;\n                    cf.param.cacheBegin = totalIndex;\n                    cf.param.viewBegin = 0;\n                    ret.refresh = 0;\n                    //console.info(\"00\");\n                }\n                else {\n                    //console.info(\"01\");\n                    //data in front is invalid   data  behind is valid\n                    spliceBegin = 0; //data  in front is all invalid\n                    spliceLen = cache.cachePage * cf.pageSize;\n                    spliceLen = spliceLen <= cache.data.length ? spliceLen : cache.data.length;\n                    if (cache.cachePage == -1) { // insert  in head;\n                        spliceBegin = 0;\n                        spliceLen = 0;\n                    }\n                    this._spliceEx(cf.param.data, spliceBegin, spliceLen * cf.pageSize, rows);\n                    cf.param.cacheBegin = totalIndex;\n                    cf.param.viewBegin = 0;\n                    ret.refresh = 0;\n                    if (spliceLen == 0 && cache.data.length > cf.param.cacheMaxLen * cf.pageSize) {\n                        //保持长度\n                        this._spliceEx(cf.param.data, cache.cacheMaxLen * cf.pageSize, cache.data.length - cache.cacheMaxLen * cf.pageSize);\n                        cf.param.cacheBegin++;\n                    }\n                }\n            }\n            else {\n                if (invalidMode.down == 0) {\n                    //console.info(\"10\");\n                    spliceBegin = cache.cachePage >= 0 ? (cache.cachePage) * cf.pageSize : 0;\n                    spliceLen = cache.data.length;\n                    //data in front is valid   data  behind is invalid\n                    this._spliceEx(cf.param.data, spliceBegin, spliceLen, rows);\n                    //cf.param.cacheBegin = totalIndex;\n                    //cf.param.viewBegin = 0;\n                    ret.refresh = cache.viewPage;\n                    if (spliceBegin == cf.param.cacheMaxLen * cf.pageSize && cache.data.length > cf.param.cacheMaxLen * cf.pageSize) {\n                        //保持长度 去掉头\n                        cache.data.splice(0, cf.pageSize);\n                        cf.param.cacheBegin++;\n                    }\n                }\n                else {\n                    //data in front is valid  data  behind is valid\n                    //console.info(\"11\");\n                    spliceBegin = cache.cachePage >= 0 ? (cache.cachePage) * cf.pageSize : 0;\n                    spliceLen = rows.length;\n                    this._spliceEx(cf.param.data, spliceBegin, spliceLen, rows);\n                    ret.refresh = cache.viewPage;\n                    //保持内存的长度\n                    if (isInsertInHeader) {\n                        //在头部追加的\n                        cache.data.splice(cache.cacheMaxLen * cf.pageSize, cache.data.length - cache.cacheMaxLen * cf.pageSize);\n                        cf.param.cacheBegin--;\n                        cf.param.viewBegin = 0;\n                    }\n                    else if (isInsertInRear) {\n                        if (cache.cachePage > cache.cacheMaxLen) { //在尾部追加的\n                            cache.data.splice(0, cf.pageSize);\n                            cf.param.cacheBegin++;\n                        }\n                        else {\n                            //移动视图的viewbegin\n                            if (Math.ceil((cf.param.data.length) / cf.pageSize) - cf.param.viewBegin > cf.param.viweMaxLen)\n                                cf.param.viewBegin++;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            cf.param.data = rows;\n            cf.param.cacheBegin = totalIndex;\n            cf.param.viewBegin = 0;\n            ret.refresh = 0;\n        }\n        //console.info(cf.param);\n        this._refresh(ret);\n        return ret;\n    };\n    cls.prototype._appendByTotalIndex = function (rows, totalIndex) {\n        var ret = this.instertPageByTotal(rows, totalIndex);\n        this._refresh(ret);\n    };\n    cls.prototype._refresh = function (arg) {\n        this.$gridWrap.trigger(\"ormRereshGridView\", arg);\n    };\n    cls.prototype.viewInsertHeader = function (rows, forceLoad) {\n        ///<param  name=\"rows\" type=\"Array\"></param>\n        this.insertRow(rows, forceLoad, \"header\");\n    };\n    /**\n    * 在视图尾部追加一行或者多行\n    * @param {Array} rows - 行数据对象\n    * @param {Boolean||Number} forceLoad - 获取数据标识 1、缓存数据获取 2、后台获取\n    */\n    cls.prototype.viewAppendRow = function (rows, forceLoad) {\n        this.viewInsertRow(rows, forceLoad, \"append\");\n    };\n    /**\n    * 向grid表格中插入一行\n    * @param {Object} arg - 行数据对象\n    * @param {Boolean||Number} forceLoad - 获取数据方式 1、缓存数据获取 2、后台远程数据获取\n    */\n    cls.prototype.viewInsertRow = function (arg, forceLoad) {\n        var optype = arguments[2] || 'insert';\n        if (optype == \"append\") {\n        }\n        else if (optype == \"header\") {\n        }\n        else {\n        }\n        ;\n        if (forceLoad) {\n            //获取远程数据，并刷新\n            var reloadarg = 1;\n            if (typeof forceLoad === \"boolean\" && forceLoad) {\n                //计算所在的页面\n                reloadarg = this.chgIndexViewToCache(viewIndexs[viewIndexs.length - 1]);\n            }\n            else if ($.isNumeric(forceLoad)) {\n                reloadarg = forceLoad;\n            }\n            this.reload({ totalPage: reloadarg, added: arg });\n        }\n        else {\n            var the = this;\n            var dArr = this._config.param.data;\n            var cf = this._config;\n            var viewIndexs = [];\n            for (var item in arg) {\n                var n = parseInt(item);\n                viewIndexs.push(n);\n            }\n            viewIndexs.sort(function (a, b) {\n                return b - a;\n            });\n            $.each(viewIndexs, function (index, it) {\n                index = the.chgIndexViewToCache(index);\n                dArr.splice(index, 0, it);\n            });\n            this._refresh({ added: arg });\n            //this.$gridWrap.trigger(optype, { insert: arg })\n        }\n    };\n    /**\n    * 根据页面无效原则，合理化cache 参数\n    * @param {Number} validPage - 操作依据页面total索引\n    */\n    cls.prototype._handleInvalidCache = function (validPage) {\n        if (!!validPage) {\n            validPage = 1;\n        }\n        var cf = this._config;\n        var preLen = (validPage - cf.param.cacheBegin) * cf.pageSize;\n        var spliceStartBehind = (validPage - cf.param.cacheBegin + 1) * cf.pageSize;\n        if (cf.invalidMode.up == 1) {\n            if (cf.invalidMode.down == 1) {\n            }\n            else if (cf.invalidMode.down == 0) {\n            }\n        }\n        else if (cf.invalidMode.up == 0) {\n            if (cf.invalidMode.down == 1) {\n            }\n            else if (cf.invalidMode.down == 0) {\n                //data  in front is invalid  data behind  is invalid\n                cf.param.cacheBegin = validPage;\n                cf.param.viewBegin = 0;\n                cf.param.data.splice(0, preLen);\n                cf.param.data.splice(spliceStartBehind, cf.param.data.length);\n            }\n        }\n    };\n    /**\n    * 通过界面删除行时使用\n    * @param {Array} viewIndexs - 删除数据的行索引数组\n    * @param {Boolean} forceLoad - true 到服务器端\n    */\n    cls.prototype.viewDeleteRow = function (viewIndexs, forceLoad) {\n        //排序\n        var the = this;\n        var dArr = this._config.param.data;\n        var cf = this._config;\n        if ($.isNumeric(viewIndexs)) {\n            var t = viewIndexs;\n            viewIndexs = [];\n            viewIndexs.push(t);\n        }\n        viewIndexs.sort(function (a, b) {\n            return b - a;\n        });\n        var reloadarg = 1;\n        reloadarg = cf.param.cacheBegin + cf.param.viewBegin + Math.floor(viewIndexs[viewIndexs.length - 1] / cf.pageSize);\n        if (forceLoad) {\n            var reloadarg = 1;\n            if (typeof forceLoad === \"boolean\" && forceLoad) {\n                //计算所在的页面\n            }\n            else if ($.isNumeric(forceLoad)) {\n                reloadarg = forceLoad;\n            }\n            this.reload({ totalPage: reloadarg, deleted: viewIndexs });\n        }\n        else {\n            //限定tr范围 表格tbody内的tr才是数据行 modify by xiangcq 20180112\n            var trs = this.$gridWrap.find(\".s_grid_table tbody\").find(\"tr\");\n            var the = this;\n            $.each(viewIndexs, function (index, it) {\n                var cache = the.chgIndexViewToCache(it);\n                dArr.splice(cache, 1);\n                $(trs[it]).remove();\n            });\n            if (this._handleInvalidCache(reloadarg)) {\n                this._refresh();\n            }\n            ;\n            return;\n        }\n    };\n    /**\n    * 更新行\n    * @param {Array} arg - 更新数据的行索引数组\n    * @param {Boolean} forceLoad - true 到服务器端\n    */\n    cls.prototype.viewUpdateRow = function (arg, forceLoad) {\n        if (forceLoad) {\n            //获取远程数据，并刷新\n            var reloadarg = 1;\n            if (typeof forceLoad === \"boolean\" && forceLoad) {\n                //计算所在的页面\n                reloadarg = this.chgIndexViewToCache(viewIndexs[viewIndexs.length - 1]);\n            }\n            else if ($.isNumeric(forceLoad)) {\n                reloadarg = forceLoad;\n            }\n            this.reload({ totalPage: reloadarg, modified: arg });\n        }\n        else {\n            var the = this;\n            var dArr = this._config.param.data;\n            var cf = this._config;\n            var viewIndexs = [];\n            for (var item in arg) {\n                var n = parseInt(item);\n                viewIndexs.push(n);\n            }\n            viewIndexs.sort(function (a, b) {\n                return b - a;\n            });\n            $.each(viewIndexs, function (index, it) {\n                index = the.chgIndexViewToCache(index);\n                dArr[i] = $.extend(dArr[i]);\n                dArr.splice(index, 0, it);\n            });\n            this._refresh({ added: arg });\n        }\n    };\n    cls.prototype._hasUrl = function () {\n        if (this._config.data.type && this._config.data.type.toUpperCase() == \"URL\") {\n            return true;\n        }\n        return false;\n    };\n    cls.prototype.chgIndexViewToCache = function (viewIndex) {\n        var cf = this._config;\n        return cf.param.viewBegin * cf.pageSize + viewIndex;\n    };\n    cls.prototype.addNextPageData = function (rows, totalPage) {\n        ///<param  name=\"rows\" type=\"Array\"></param>\n        ///<param  name=\"beginPageNum\" type=\"Number\"></param>\n        if (!$.isExist(totalPage)) {\n            totalPage = (this._config.param.cacheBegin - 1 < 1) ? 1 : (this._config.param.cacheBegin - 1);\n        }\n        this.insertPageByTotal(rows, totalPage, { up: 1, down: 1 });\n    };\n    cls.prototype.addPrePageData = function (rows, totalPage) {\n        ///<param  name=\"rows\" type=\"Array\"></param>\n        ///<param  name=\"beginPageNum\" type=\"Number\"></param>\n        if (!$.isExist(totalPage)) {\n            totalPage = this._config.param.cacheBegin + Math.floor(this._config.param.data.length / this._config.pageSize);\n        }\n        this.insertPageByTotal(rows, totalPage, { up: 1, down: 1 });\n    };\n    /**\n    * 根据grid视图索引返回行数据\n    * @param {Array} viewIndexs - 视图索引，number或者数组\n    * @param {Boolean} bClone - true 到服务器端取数据\n    * @returns {Array} ret - 行数据 json数组\n    */\n    cls.prototype.getRowDataByViewIndexs = function (viewIndexs, bClone) {\n        var isOne = false;\n        var cf = this._config;\n        bClone = bClone || false;\n        var ret;\n        if ($.isNumeric(viewIndexs)) {\n            var t = this.chgIndexViewToCache(viewIndexs);\n            if (t >= 0 && t < cf.param.data.length)\n                ;\n            {\n                ret = cf.param.data[t];\n            }\n            return ret;\n        }\n        var the = this;\n        var rowData;\n        ret = {};\n        if ($.isArray(viewIndexs)) {\n            $.each(viewIndexs, function (index, it) {\n                var t = the.chgIndexViewToCache(it);\n                if (t >= 0 && t < cf.param.data.length)\n                    ;\n                {\n                    rowData = cf.param.data[t];\n                    if (bClone) {\n                        rowData = $.extend(true, {}, rowData);\n                    }\n                    ret[it] = rowData;\n                }\n            });\n            return ret;\n        }\n        return ret;\n    };\n    /**\n    * 重新加载数据，刷新表格\n    * @param {Array} arg - 获取数据参数\n    */\n    cls.prototype.reload = function (arg) {\n        var cf = this._config;\n        var the = this;\n        if ($.isArray(arg)) {\n            cf.data = arg;\n            return 0;\n        }\n        var curPage = 1;\n        if (!$.isExist(arg)) {\n            arg = {\n                totalPage: 1\n            };\n        }\n        arg.totalPage = arg.totalPage || 1;\n        if (!arg.data) {\n            arg.data = cf.data;\n        }\n        else if ($.isArray(arg.data)) {\n            cf.data = arg.data;\n            cf.invalidMode = { up: 1, down: 1 };\n        }\n        else if (arg.data.type && arg.data.value) {\n            this._config.data.type = arg.data.type;\n            this._config.data.value = arg.data.value;\n        }\n        ;\n        if (arg.totalPage) {\n            if (arg.deskCurPage) {\n                curPage = arg.deskCurPage;\n            }\n            else {\n                switch (arg.totalPage) {\n                    case -1:\n                        {\n                            curPage = (this._config.param.cacheBegin - 1 < 1) ? 1 : (this._config.param.cacheBegin - 1);\n                        }\n                        ;\n                        break;\n                    case -2:\n                        {\n                            curPage = cf.param.cacheBegin + Math.floor(cf.param.data.length / cf.pageSize);\n                        }\n                        ;\n                        break;\n                    case 0:\n                        {\n                            //this._pageInfo.curPage = this._config.param.cacheBegin;\n                            curPage = cf.param.cacheBegin + cf.param.viewBegin;\n                        }\n                        ;\n                        break;\n                    default:\n                        {\n                            if (arg.totalPage > 0) {\n                                curPage = arg.totalPage;\n                            }\n                        }\n                        ;\n                        break;\n                }\n            }\n        }\n        //直接调用reload函数 传入请求ajax地址的参数 modify by xcq 20171226\n        cf.queryParam = arg.queryParam || arg.data.queryParam || cf.queryParam;\n        if (!this._config.data.value || this._config.data.value.length < 24) {\n            console.warn(\"url  is  empty ! ajax stop\");\n            return;\n        }\n        var ajxArg = {\n            type: 'POST',\n            url: this._config.data.value,\n            dataType: \"json\",\n            //async: false,\n            data: $.extend({\n                \"pageSize\": this._config.pageSize,\n                //\"pageNumber\": this._pageInfo.curPage,      //兼容0.9.4之前版本\n                \"curPage\": curPage\n            }, cf.queryParam, this._sortParam),\n        };\n        //ajax请求参数格式化 可以重写\n        ajxArg = this.formatDataBeforeAjax(ajxArg);\n        if (!ajxArg.success)\n            ajxArg.success = function (returnData) {\n                //ajax请求返回数据格式化 可以重写\n                returnData = the.formatDataAfterAjaxSuccess(returnData);\n                //兼容返回数据为null格式的数据  add by xiangcq 20180117\n                if (returnData == null) {\n                    var returnDataObj = {};\n                    returnDataObj.dataCount = 0;\n                    returnDataObj.pageData = [];\n                    returnData = returnDataObj;\n                }\n                //兼容返回jsonArray格式的数据  add by xiangcq 20180103   \n                if ($.isArray(returnData)) {\n                    var returnDataObj = {};\n                    returnDataObj.dataCount = returnData.length;\n                    returnDataObj.pageData = returnData;\n                    returnData = returnDataObj;\n                }\n                //如果model属性存在，则取modle中的内容，兼容使用原始ajax的情况,0.9.8版本新增\n                if (returnData.model) {\n                    returnData = returnData.model;\n                }\n                if (typeof the._config.key != \"undefined\") {\n                    returnData = formatData(returnData, the._config.key);\n                }\n                //表格追加原数据  the._pageInfo  \n                $.extend(the._pageInfo, returnData);\n                //表格缓存数据数组 如果returnData.pageData为undefined rows定义为空数组  modify by xcq 20171226\n                var rows = (typeof (returnData.pageData) != 'undefined') ? returnData.pageData : [];\n                switch (arg.totalPage) {\n                    case -1:\n                        {\n                            the.addPrePageData(rows, curPage);\n                        }\n                        ;\n                        break;\n                    case -2:\n                        {\n                            the.addNextPageData(rows, curPage);\n                        }\n                        ;\n                        break;\n                    case 0:\n                        {\n                            the.insertPageByTotal(rows, curPage);\n                        }\n                        ;\n                        break;\n                    default: {\n                        the.insertPageByTotal(rows, curPage);\n                    }\n                }\n                var data = {\n                    status: \"sucsess\",\n                    type: \"reload\",\n                    pageInfo: the._pageInfo,\n                    loadParam: arg,\n                    grid: the,\n                    ajxArg: ajxArg,\n                };\n                the.$gridWrap.trigger(\"loadSucsess\", data);\n                the.$gridWrap.trigger(\"loadComplete\", data);\n                if (typeof (arg.loadComplete) == \"function\") {\n                    ajxArg.loadComplete = arg.loadComplete;\n                    ajxArg.loadComplete(data);\n                }\n                return true;\n            };\n        if (!ajxArg.error) {\n            ajxArg.error = function (jqXHR, status, errorThrown) {\n                var data = {\n                    status: \"error\",\n                    type: \"reload\",\n                    pageInfo: the._pageInfo,\n                    loadParam: arg,\n                    grid: the,\n                    ajxArg: ajxArg,\n                };\n                the.$gridWrap.trigger(\"loadSucsess\", data);\n                the.$gridWrap.trigger(\"loadComplete\", data);\n                if (typeof (arg.loadComplete) == \"function\") {\n                    ajxArg.loadComplete = arg.loadComplete;\n                    ajxArg.loadComplete(data);\n                }\n                return false;\n            };\n        }\n        ;\n        $.ajax(ajxArg);\n    };\n    /**\n    * 删除行数据\n    * @param {Object} arg - 行数据对象\n    */\n    cls.prototype.ajaxDeleteRow = function (arg) {\n        var the = this;\n        //请求ajax，将选中的数据传递给url\n        var ajxArg = {\n            type: 'POST',\n            url: arg.delUrl,\n            dataType: \"json\",\n            //async: false,\n            data: { 'data': arg.delData }\n        };\n        var page = {};\n        var pageArry = [];\n        for (var i in arg.delData) {\n            pageArry.push(arg.delData[i]);\n        }\n        page.dataCount = pageArry.length;\n        page.pageData = pageArry;\n        ajxArg = this.formatDataBeforeDelAjax(ajxArg);\n        if (!ajxArg.success) {\n            ajxArg.success = function (returnData) {\n                var data = {\n                    status: \"sucsess\",\n                    type: \"delete\",\n                    pageInfo: page,\n                    loadParam: arg,\n                    grid: the,\n                    ajxArg: ajxArg,\n                };\n                the.$gridWrap.trigger(\"loadSucsess\", data);\n                the.$gridWrap.trigger(\"loadComplete\", data);\n                if (typeof (arg.loadComplete) == \"function\") {\n                    ajxArg.loadComplete = arg.loadComplete;\n                    ajxArg.loadComplete(data);\n                }\n                return true;\n            };\n        }\n        if (!ajxArg.error) {\n            ajxArg.error = function (jqXHR, status, errorThrown) {\n                var data = {\n                    status: \"error\",\n                    type: \"delete\",\n                    pageInfo: arg.delData,\n                    loadParam: arg,\n                    grid: the,\n                    ajxArg: ajxArg,\n                };\n                the.$gridWrap.trigger(\"loadSucsess\", data);\n                the.$gridWrap.trigger(\"loadComplete\", data);\n                if (typeof (arg.loadComplete) == \"function\") {\n                    ajxArg.loadComplete = arg.loadComplete;\n                    ajxArg.loadComplete(data);\n                }\n                return false;\n            };\n        }\n        ;\n        $.ajax(ajxArg);\n    };\n    /**\n    * 转换数据格式\n    * @param {Object} data - 行数据对象\n    * @param {Object} format - 行数据对象\n    */\n    function formatData(data, format) {\n        var result = {};\n        //遍历替换列表\n        for (var i in data) {\n            if (data.hasOwnProperty(i)) {\n                if (!!format[i]) {\n                    result[format[i]] = data[i];\n                }\n                else {\n                    result[i] = data[i];\n                }\n            }\n        }\n        return result;\n    }\n    /**\n    * 表格缓存数据条目\n    * @returns {Boolean} ret - 是否超过长度状态值\n    */\n    cls.prototype._isBeyondSize = function () {\n        //this._config.param.data 缓存数组（条目数）\n        if (this._config.param.data.length < this._config.param.cacheMaxLen * this._config.pageSize) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    cls.prototype.callbackSwipeInBottom = function (args) {\n        ///<summary> </summary>\n        ///<param name=\"\"  value=\"\"></param>\n    };\n    cls.prototype.callbackSwipeInTop = function (args) {\n        ///<summary> </summary>\n        ///<param name=\"\"  value=\"\"></param>\n    };\n    /**\n    * reload函数 ajax请求成功函数重写\n    * @param {Object} args - 重写数据\n    * @returns {Object} args - 返回重写数据\n    */\n    cls.prototype.formatDataAfterAjaxSuccess = function (args) {\n        return args;\n    };\n    /**\n    * reload函数 ajax请求前函数重写\n    * @param {Object} args - 重写数据\n    * @returns {Object} args - 返回重写数据\n    */\n    cls.prototype.formatDataBeforeAjax = function (args) {\n        return args;\n    };\n    /**\n    * reload函数 ajax数据删除函数重写\n    * @param {Object} args - 重写数据\n    * @returns {Object} args - 返回重写数据\n    */\n    cls.prototype.formatDataBeforeDelAjax = function (args) {\n        return args;\n    };\n    cls.prototype.callbackDataAppend = function (arg, scope) {\n        if (typeof arg == \"boolean\") {\n            arg = {\n                fn: this._onAppend,\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this.$gridWrap.on(\"append\", arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype.callbackDataInsert = function (arg, scope) {\n        if (typeof arg == \"boolean\") {\n            arg = {\n                fn: this._onInsert,\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this.$gridWrap.on(\"insert\", arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype.callbackDataDelete = function (arg, scope) {\n        if (typeof arg == \"boolean\") {\n            arg = {\n                fn: this._onDelete,\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this.$gridWrap.on(\"delete\", arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype.callbackDataUpdate = function (arg, scope) {\n        if (typeof arg == \"boolean\") {\n            arg = {\n                fn: this._onUpdate,\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this.$gridWrap.on(\"update\", arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cssOrm.declare(\"clsGridDocument\", cls);\n    return cls;\n});\n","define('RxmMobileGrid', [\n    'RxmGridDocument',\n    require.rxm.Util, 'RxmAppTool'\n], function (doc, Util, appTool) {\n    //苹果设备设置避免回弹效果\n    if (appTool.isIOS()) {\n        //调整后调用的接口\n        rxm_page.forbidBounce(0, 1);\n    }\n    var clsdef = {\n        rxmPath: require.rxm.MobileGrid,\n        clsName: 'rxm-mobile-grid',\n        juryFn: 'rxmMobileGrid'\n    };\n    /**\n     * @param  {rxm.mobilegrid.conf} cfg\n     */\n    var ClsFactory = function (cfg) {\n        //原来_config.\n        var _id = cfg.id;\n        var thisObj;\n        (cfg) && (cfg.id) && (id = cfg.id);\n        if (id) {\n            /** @type {Cls} */\n            thisObj = $('#' + id).data(clsdef.rxmPath);\n            if (thisObj) {\n                if ($.isArray(cfg.override)) {\n                    for (var f in cfg.override) {\n                        thisObj[f] = override[f];\n                    }\n                }\n                return thisObj;\n            }\n        }\n        var arrObj;\n        $.isArray(cfg) && (arrObj = cfg);\n        /**全部的私有变量 18-05-22  */\n        var _touchRowInfo = {\n            totalIndex: 1,\n            //x坐标\n            x: 0,\n            //y坐标\n            y: 0,\n            left: 0,\n            top: 0,\n            scrollPos: 0\n        };\n        var _loadingImg = getServer() + \"/www/rxm/utils/img/Loading.gif\";\n        var _arrowImg = getServer() + \"/www/rxm/utils/img/arrow-right.png\";\n        var _upArrowImg = getServer() + \"/www/rxm/utils/img/uparrow.png\";\n        var _downArrowImg = getServer() + \"/www/rxm/utils/img/downarrow.png\";\n        //到顶或者到底后 滑动位置坐标值startYMove（默认为0）\n        var _startYMove = 0;\n        //包裹器高度 设置默认高度为设备屏幕可用高度\n        var _wrapHeight = document.body.scrollHeight;\n        //全选状态标志  默认为true\n        var _allChecked = true;\n        //长按状态标志  默认为false\n        var _pressFlag = false;\n        //第一次初始化表格标志\n        var _firstLoad = true;\n        //手势滑动方向标志位\n        var _swipeDir = \"\";\n        var _footerOffset = 0;\n        //真分页时，后端返回数据类型结构为此结构即可\n        var _pageInfo = {\n            curPage: 1,\n            pageData: [],\n            dataCount: 0,\n            pageCount: 0 //总页数\n        };\n        //排序参数(必须保留,后台取数据必要字段)\n        // var  _sortParam = {\n        //     field: \"\",\n        //     order: \"\"\n        // };\n        //表格包裹器对象定义\n        var $gridWrap = $(\"#\" + _id);\n        if ($gridWrap.length == 0) {\n            console.error(\"id=\" + _id + \"表格不存在\");\n        }\n        var _doc; //new doc(this._config, $gridWrap)\n        //标题栏\n        var $titlebar = $(\"\");\n        //工具栏\n        var $toolbar = $(\"\");\n        //顶部刷新栏\n        var $topRefreshbar = $(\"\");\n        //底部刷新栏\n        var $bottomRefreshbar = $(\"\");\n        //搜索栏\n        var $searchbar = $(\"\");\n        //表格内容数据包裹器\n        var $gridContent = $(\"\");\n        //表格主体\n        var $tableBody = $(\"\");\n        //分页区域（桌面版）\n        var $pagination = $(\"\");\n        var $tBody = $(\"\");\n        var _isRender = false;\n        /**滑动菜单全局变量定义*/\n        /**当前左滑的对象*/\n        var slideCurSwipeTr;\n        /**上一个左滑的对象*/\n        var slideLastSwipeTr;\n        var btnAreaWidth;\n        ///this.dataParNum = this._config.layout.length;\n        var scrollDivWidth;\n        var dataDivWidth;\n        var _iconMargin;\n        /**行数据中具有icon列*/\n        _hasIcon = false;\n        //获取radio值\n        var getRadioValue = function (arg) {\n            var radioValue = false;\n            if (typeof arg == \"boolean\") {\n                radioValue = arg;\n            }\n            else if (typeof arg == \"string\") {\n                radioValue = (arg == \"true\");\n            }\n            return radioValue;\n        };\n        var RxmMobileGrid = function () {\n            /**\n             * 表格初始化配置对象\n             */\n            this._config = {\n                //gridWrap 唯一id\n                id: appTool.unid() + \"\",\n                //是否分页 默认分页\n                pagination: true,\n                //每页数据条目数  默认30\n                pageSize: 30,\n                //数据选中 单选[radio]还是多选[checkbox],默认checkbox\n                multi: true,\n                //数据是否换行，还是隐藏多余字符(true 省略多余字符,其他字符用三个点代替  false 换行显示所有内容 ) 默认省略多余字符\n                textEllipsis: true,\n                //兼容使用原始ajax的情况,0.9.8版本新增     改变返回数据returnData的key值\n                key: {\n                    \"allDataCount\": \"dataCount\",\n                    \"curPageData\": \"pageData\"\n                },\n                //查询参数\n                queryParam: {},\n                //行（列）头信息\n                layout: [],\n                //行点击事件\n                rowevent: [],\n                data: {\n                    type: \"\",\n                    value: \"\",\n                    //-1 上一页  -2 下一页  0 config当前页进行刷新，>0 从pageSize页开始取数据，每次只是取1页\n                    pageSize: 1,\n                    loadComplete: \"\"\n                },\n                //缓存数据参数\n                param: {\n                    //单位为页\n                    data: [],\n                    //缓存首页面\n                    cacheBegin: 1,\n                    //最大缓存页数\n                    cacheMaxLen: 30,\n                    //显示首页面 从0 开始\n                    viewBegin: 0,\n                    //最大显示页数\n                    viweMaxLen: 10\n                },\n                //上拉、下拉刷新提示语参数\n                refreshTip: {\n                    topTipBegin: \"下拉刷新数据...\",\n                    topTipRefresh: \"松开即可刷新...\",\n                    topTipLoading: \"加载中...\",\n                    topTipSuccess: \"数据刷新成功\",\n                    topTipError: \"数据刷新失败\",\n                    bottomTipLoading: \"加载中...\",\n                    bottomTipError: \"数据加载失败\",\n                    bottomTipEnd: \"没有更多了\",\n                    nodataTip: \"暂无数据！\"\n                },\n                invalidMode: {\n                    up: 1,\n                    down: 0\n                },\n                leftSlideParam: {\n                    btnWidth: 60,\n                    viewWidth: 60,\n                    traDuration: \"200\",\n                    traFunction: \"ease-out\" //开始到结束的过渡效果 默认以慢速结束的过渡效果\n                },\n                trRowParam: {\n                    iconWidth: 55,\n                    parHeight: 21,\n                    dataMargin: 16,\n                    trMargin: 20 //tr距离屏幕左右边距\n                }\n            };\n            //获取html定义属性生成表格config对象\n            var htmlCfg = getHtmlAttr(cfg.id);\n            this._config = $.extend(true, this._config, cssOrm.default.clsGridMobile, htmlCfg, cfg);\n            if (isDesktop(cfg.id)) {\n                //如果是桌面版 设置cacheMaxLen与viweMaxLen值均为1 分页显示最新一页\n                this._config.param.cacheMaxLen = 1;\n                this._config.param.viweMaxLen = 1;\n            }\n            _doc = new doc(this._config, $gridWrap);\n            _doc._pageInfo = _pageInfo;\n        };\n        /**\n        * 获取html表格属性 重组config对象\n        * @param {String} wrapId  - 表格包裹器ID\n        * @returns {Object} gridCfg - config对象\n        */\n        function getHtmlAttr(wrapId) {\n            //表格config对象定义\n            var gridCfg = {};\n            //表格layout\n            var layout = [];\n            var idx = false;\n            //表格包裹器对象\n            var $gwAttr = $(\"#\" + wrapId);\n            //获取表格每列属性值与名称  \n            //移动端端 获取具有mview的列(桌面版显示的列数多，从中选取几个字段进行移动端显示)\n            var tabth = $(\"#\" + wrapId + \" .rxm-table-head th[mview]\").not(\"[hidden]\");\n            if (isDesktop(wrapId)) {\n                //桌面端 排除具有hidden属性的列\n                tabth = $(\"#\" + wrapId + \" .rxm-table-head th\").not(\"[hidden]\");\n            }\n            for (var i = 0; i < tabth.length; i++) {\n                //判断列表是否显示索引号列 桌面端\n                if ($(tabth[i]).is(\".index\")) {\n                    idx = true;\n                }\n                //判断列表是否显示多选框列 桌面端\n                if ($(tabth[i]).is(\".ormmulti\")) {\n                    if ($(tabth[i]).children(\"input\").attr(\"type\") == \"checkbox\") {\n                        gridCfg.multi = true;\n                    }\n                    else {\n                        gridCfg.multi = false;\n                    }\n                }\n                //layout属性设定\n                if (typeof ($(tabth[i]).attr(\"fieldvalue\")) != \"undefined\") {\n                    var lo = {};\n                    lo.name = $(tabth[i]).text();\n                    lo.field = $(tabth[i]).attr(\"fieldvalue\");\n                    if (typeof ($(tabth[i]).attr(\"clickstyle\")) != \"undefined\") {\n                        lo.clickstyle = true;\n                    }\n                    layout.push(lo);\n                }\n            }\n            //设置行索引值\n            gridCfg.index = idx;\n            //设置layout\n            gridCfg.layout = layout;\n            // //表格主键字段\n            // if (typeof ($gwAttr.attr(\"fieldkey\")) != \"undefined\") {\n            //     gridCfg.fieldkey = $gwAttr.attr(\"fieldkey\");\n            // }\n            //表格请求数据 ajax请求url dataurl 兼容原有项目\n            if (typeof ($gwAttr.attr(\"dataurl\")) != \"undefined\") {\n                //将字符串中所有所有单引号替换为双引号 不然JSON.parse报错\n                gridCfg.data = JSON.parse($gwAttr.attr(\"dataurl\").replace(/\\'/g, '\"'));\n                //rxmurl处理 判断地址首字符是否添加斜杠 \n                if (gridCfg.data.value.substring(0, 1) != \"/\") {\n                    gridCfg.data.value = \"/\" + gridCfg.data.value;\n                }\n                //modify 20180907 数据服务添加getServer() 解决本地加载模式无法获取表格数据\n                gridCfg.data.value = getServer() + gridCfg.data.value;\n            }\n            //modify 20181108 表格请求数据 ajax请求url dataurl改为rxmurl\n            if (typeof ($gwAttr.attr(\"rxmurl\")) != \"undefined\") {\n                var gridDataUrl = $gwAttr.attr(\"rxmurl\");\n                //rxmurl处理 判断地址首字符是否添加斜杠 \n                if (gridDataUrl.substring(0, 1) != \"/\") {\n                    gridDataUrl = \"/\" + gridDataUrl;\n                }\n                gridCfg.data = {\n                    \"type\": \"URL\",\n                    \"value\": \"\",\n                };\n                //数据服务添加getServer() 解决本地加载模式无法获取表格数据\n                gridCfg.data.value = getServer() + gridDataUrl;\n            }\n            //单选[radio]还是多选[checkbox],默认checkbox\n            if (typeof ($gwAttr.attr(\"rxmmulti\")) != \"undefined\") {\n                if ($gwAttr.attr(\"rxmmulti\") == 'true') {\n                    gridCfg.multi = true;\n                }\n                else {\n                    gridCfg.multi = false;\n                }\n            }\n            //每页数据显示条目数 兼容以前项目\n            if (typeof ($gwAttr.attr(\"pagesize\")) != \"undefined\") {\n                gridCfg.pageSize = $gwAttr.attr(\"pagesize\");\n            }\n            //每页数据显示条目数\n            if (typeof ($gwAttr.attr(\"rxmpagesize\")) != \"undefined\") {\n                gridCfg.pageSize = $gwAttr.attr(\"rxmpagesize\");\n            }\n            //最大缓存页数\n            if (typeof ($gwAttr.attr(\"rxmcachemaxlen\")) != \"undefined\") {\n                gridCfg.param.cacheMaxLen = $gwAttr.attr(\"rxmcachemaxlen\");\n            }\n            //最大显示页数\n            if (typeof ($gwAttr.attr(\"rxmviwemaxlen\")) != \"undefined\") {\n                gridCfg.param.viweMaxLen = $gwAttr.attr(\"rxmviwemaxlen\");\n            }\n            //表格下拉刷新数据提示语\n            if (typeof ($gwAttr.attr(\"rxmtoptipbegin\")) != \"undefined\") {\n                gridCfg.refreshTip.topTipBegin = $gwAttr.attr(\"rxmtoptipbegin\");\n            }\n            //表格下拉松开刷新提示语\n            if (typeof ($gwAttr.attr(\"rxmtoptiprefresh\")) != \"undefined\") {\n                gridCfg.refreshTip.topTipRefresh = $gwAttr.attr(\"rxmtoptiprefresh\");\n            }\n            //表格下拉刷新失败提示语\n            if (typeof ($gwAttr.attr(\"rxmtoptiperror\")) != \"undefined\") {\n                gridCfg.refreshTip.topTipError = $gwAttr.attr(\"rxmtoptiperror\");\n            }\n            //表格上拉分页加载失败提示语\n            if (typeof ($gwAttr.attr(\"rxmbottomtiperror\")) != \"undefined\") {\n                gridCfg.refreshTip.bottomTipError = $gwAttr.attr(\"rxmbottomtiperror\");\n            }\n            //上拉分页没有更多提示语\n            if (typeof ($gwAttr.attr(\"rxmbottomtipend\")) != \"undefined\") {\n                gridCfg.refreshTip.bottomTipEnd = $gwAttr.attr(\"rxmbottomtipend\");\n            }\n            //表格暂无数据提示语\n            if (typeof ($gwAttr.attr(\"rxmnodatatip\")) != \"undefined\") {\n                gridCfg.refreshTip.nodataTip = $gwAttr.attr(\"rxmnodatatip\");\n            }\n            //数据行图标区域宽度\n            if (typeof ($gwAttr.attr(\"rxmrowiconwidth\")) != \"undefined\") {\n                gridCfg.trRowParam.iconWidth = $gwAttr.attr(\"rxmrowiconwidth\");\n            }\n            //数据行数据字段单个高度\n            if (typeof ($gwAttr.attr(\"rxmrowparheight\")) != \"undefined\") {\n                gridCfg.trRowParam.parHeight = $gwAttr.attr(\"rxmrowparheight\");\n            }\n            //数据行数据显示div距离上下边距\n            if (typeof ($gwAttr.attr(\"rxmrowdatamargin\")) != \"undefined\") {\n                gridCfg.trRowParam.dataMargin = $gwAttr.attr(\"rxmrowdatamargin\");\n            }\n            //数据行距离屏幕左右边距\n            if (typeof ($gwAttr.attr(\"rxmrowtrmargin\")) != \"undefined\") {\n                gridCfg.trRowParam.trMargin = $gwAttr.attr(\"rxmrowtrmargin\");\n            }\n            //左滑菜单每个选项默认宽度\n            if (typeof ($gwAttr.attr(\"rxmleftbtnwidth\")) != \"undefined\") {\n                gridCfg.leftSlideParam.btnWidth = $gwAttr.attr(\"rxmleftbtnwidth\");\n            }\n            //左滑出现菜单区域的最小距离值，小于此值则隐藏 \n            if (typeof ($gwAttr.attr(\"rxmviwemaxlen\")) != \"undefined\") {\n                gridCfg.leftSlideParam.viewWidth = $gwAttr.attr(\"rxmviwemaxlen\");\n            }\n            //左滑菜单滑动隐藏时间设定 \n            if (typeof ($gwAttr.attr(\"rxmleftaduration\")) != \"undefined\") {\n                gridCfg.leftSlideParam.traDuration = $gwAttr.attr(\"rxmleftaduration\");\n            }\n            return gridCfg;\n        }\n        ///所有的自定义消息 \n        RxmMobileGrid.msgEnum = {\n            swipeInTopEndAfter: \"swipeInTopEndAfter\",\n            swipeInBottomAfter: \"swipeInBottomAfter\",\n            loadSucsess: \"loadSucsess\",\n            loadComplete: \"loadComplete\",\n            appendRow: \"append\",\n            insertRow: \"insert\",\n            deleteRow: \"delete\",\n            updateRow: \"update\",\n            ormRereshGridView: \"ormRereshGridView\",\n            swipeInTop: \"swipeInTop\",\n            swipeInBottom: \"swipeInBottom\",\n            swipeInTopBegin: \"swipeInTopBegin\",\n            swipeInBottomBegin: \"swipeInBottomBegin\",\n            swipeInTopEnd: \"swipeInTopEnd\",\n            swipeInBottomEnd: \"swipeInBottomEnd\",\n            tapInLine: \"tapInLine\",\n            pressInLine: \"pressInLine\",\n            slideInLine: \"slideInLine\"\n        };\n        /**\n        * 根据domelement信息获取所在的视图行索引\n        * @param {String} domElement - dom选择器\n        * @returns {Number} index - 视图行索引\n        */\n        RxmMobileGrid.prototype.getRowViewIndex = function (domElement) {\n            var $tr = $(domElement).closest(\"tr\");\n            index = $tBody.find(\"tr\").index($tr);\n            return index;\n        };\n        /**\n        * 设置或者获取手指正在触摸的行信息\n        * @param {event|Number} arg - event或者行索引值\n        * @returns {Object} - 触摸行坐标信息对象\n        */\n        RxmMobileGrid.prototype.touchRowInfo = function (arg) {\n            var viewIndex;\n            var cf = this._config;\n            if (arg) {\n                var viewIndex;\n                if (!!arg.target) {\n                    viewIndex = this.getRowViewIndex(arg.target);\n                    _touchRowInfo.domTr = $(arg.target).closest('tr')[0] || _touchRowInfo.domTr || $($tBody.find(\"tr:last\"))[0];\n                }\n                else if ($.isNumeric(arg)) {\n                    _touchRowInfo.domTr = $tBody.find(\"tr\")[arg] || _touchRowInfo.domTr;\n                    viewIndex = arg;\n                }\n                //输入的是视图索引\n                //viewIndex = arg.totalIndex;\n                _touchRowInfo.totalIndex = (cf.param.cacheBegin + cf.param.viewBegin - 1) * cf.pageSize + viewIndex;\n                _touchRowInfo.oldPos = _touchRowInfo.domTr.getBoundingClientRect();\n            }\n            else {\n                //console.info(_touchRowInfo.domTr);\n                var viewIndex = _touchRowInfo.totalIndex - (cf.param.cacheBegin + cf.param.viewBegin - 1) * cf.pageSize;\n                var domTr = $tBody.find(\"tr\")[viewIndex];\n                if (!!domTr && !!_touchRowInfo.oldPos) {\n                    var firstPos = $tBody.find(\"tr\")[0].getBoundingClientRect();\n                    var newPos = domTr.getBoundingClientRect();\n                    var scrolltop = newPos.top - firstPos.top;\n                    _touchRowInfo.scrollPos = scrolltop - _touchRowInfo.oldPos.top + newPos.height;\n                }\n                else {\n                    _touchRowInfo.scrollPos = 0;\n                }\n            }\n            return _touchRowInfo;\n        };\n        /**\n        * 获取当前表格所有数据\n        * @param {Boolean} bClone - true取缓存中的全部，undefined，false 取视图数据，此为默认\n        * @param {Boolean} bCache - true克隆数据，undefined，false 返回 view 数据此为默认\n        * @returns {Object} - 表格所有数据对象\n        */\n        RxmMobileGrid.prototype.getAllData = function (bClone, bCache) {\n            var cf = this._config;\n            bClone = bClone || false;\n            bCache = bCache || false;\n            if (bCache) {\n                if (bClone) {\n                }\n                else {\n                    return cf.param.data;\n                }\n            }\n            else {\n                var ret = [];\n                var dataLen;\n                if ((cf.param.viewBegin + cf.param.viweMaxLen) >= Math.ceil(cf.param.data.length / cf.pageSize)) {\n                    dataLen = cf.param.data.length;\n                }\n                else {\n                    dataLen = cf.param.viweMaxLen * cf.pageSize;\n                }\n                for (var j = cf.param.viewBegin * cf.pageSize; j < dataLen; j++) {\n                    if (bClone) {\n                        ret.push($.extend(true(), {}, cf.param.data[j]));\n                    }\n                    else {\n                        ret.push(cf.param.data[j]);\n                    }\n                }\n                return ret;\n            }\n        };\n        /**\n        * 获取当前选择行索引\n        * @returns {Array} selectedIdxArr - 索引数组\n        */\n        RxmMobileGrid.prototype.getSelectedRow = function () {\n            var selectedIdxArr = [];\n            var $tableBodyRow = $gridWrap.find(\".rxm-s-grid-table tbody\");\n            //获取表格所有tr对象 限定tr范围 表格tbody内的tr才是数据行 modify by xiangcq 20180112\n            var $gridTr = $tBody.find(\"tr\");\n            $tableBodyRow.find(\"input:checked\").each(function () {\n                var index = $gridTr.index($(this).closest(\"tr\"));\n                selectedIdxArr.push(index);\n            });\n            return selectedIdxArr;\n        };\n        /**\n        * 获取选中行数据\n        * @param {Boolean} bClone - true取缓存中的全部，undefined，false 取视图数据，此为默认\n        * @returns {Object} rd - 选中数据对象\n        */\n        RxmMobileGrid.prototype.getSelectedData = function (bClone) {\n            var rows = this.getSelectedRow();\n            var rd = _doc.getRowDataByViewIndexs(rows, bClone);\n            return rd;\n        };\n        /**\n        * 获取滑动行数据\n        * @param {String} domElement - dom选择器\n        * @returns {Object} rd - 当前滑动行数据对象\n        */\n        RxmMobileGrid.prototype.getSlideRowData = function (domElement, bClone) {\n            var rows = this.getRowViewIndex(domElement);\n            var rd = _doc.getRowDataByViewIndexs(rows, bClone);\n            return rd;\n        };\n        /**\n        * 通过index选中一行、多行或者全选\n        * @param {Number|Array} viewIndexs - 行索引 此参数可为数字、数组、空\n        */\n        RxmMobileGrid.prototype.checkRow = function (viewIndexs) {\n            //获取表格中所有checkbox  jquery对象\n            var $checkTr = $gridWrap.find(\"input[name='s_gird_multi_\" + this._config.id + \"']\");\n            //参数为数字,选中单行\n            if ($.isNumeric(viewIndexs)) {\n                $($checkTr[viewIndexs]).prop(\"checked\", true);\n            }\n            else if ($.isArray(viewIndexs)) {\n                //参数为数组,选中多行\n                $.each(viewIndexs, function (index, it) {\n                    $($checkTr[it]).prop(\"checked\", true);\n                });\n            }\n            else {\n                //参数为为空,全选\n                $checkTr.prop(\"checked\", true);\n            }\n        };\n        /**\n        * 通过index取消选中一行、多行或者全部\n        * @param {Number|Array} viewIndexs - 行索引 此参数可为数字、数组、空\n        */\n        RxmMobileGrid.prototype.uncheckRow = function (viewIndexs) {\n            //获取表格中所有checkbox  jquery对象\n            var $checkTr = $gridWrap.find(\"input[name='s_gird_multi_\" + this._config.id + \"']\");\n            //参数为数字,选中单行\n            if ($.isNumeric(viewIndexs)) {\n                $($checkTr[viewIndexs]).prop(\"checked\", false);\n            }\n            else if ($.isArray(viewIndexs)) {\n                //参数为数组,选中多行\n                $.each(viewIndexs, function (index, it) {\n                    $($checkTr[it]).prop(\"checked\", false);\n                });\n            }\n            else {\n                //参数为为空,全选\n                $checkTr.prop(\"checked\", false);\n            }\n        };\n        /**\n        * 追加数据\n        * @param {Array} rows - 当前页数据\n        * @param {Number} beginPageNum - 起始页面码数\n        */\n        RxmMobileGrid.prototype.appendRow = function (rows, forceLoad) {\n            ///<param name=\"beginPageNum\" type=\"number\">起始页面码数</param>\n            _doc.viewAppendRow(rows, beginPageNum);\n        };\n        /**\n        * 插入数据\n        * @param {Array} arg - 插入数据数组\n        * @param {Boolean} forceLoad - true 到服务器端,重新取数据\n        */\n        RxmMobileGrid.prototype.insertRow = function (arg, forceLoad) {\n            _doc.viewInsertRow(arg, forceLoad);\n        };\n        /**\n        * 删除数据\n        * @param {Array} arg - 删除数据的行索引数组\n        * @param {Boolean} forceLoad - true 到服务器端,重新取数据\n        */\n        RxmMobileGrid.prototype.deleteRow = function (viewIndexs, forceLoad) {\n            if ($.isNumeric(viewIndexs)) {\n                var t = viewIndexs;\n                viewIndexs = [];\n                viewIndexs.push(t);\n            }\n            viewIndexs.sort(function (a, b) {\n                return b - a;\n            });\n            this.touchRowInfo(viewIndexs[viewIndexs.length - 1]);\n            _doc.viewDeleteRow(viewIndexs, forceLoad);\n        };\n        /**\n        * 更新行数据\n        * @param {Array} arg - 更新数据的行索\n        * @param {Boolean} forceLoad - true 到服务器端,重新取数据\n        */\n        RxmMobileGrid.prototype.updateRow = function (arg, forceLoad) {\n            _doc.viewUpdateRow(arg, forceLoad);\n        };\n        /**\n        * 获取page信息\n        * @returns {Object}  - page信息对象\n        */\n        RxmMobileGrid.prototype.getPageInfo = function () {\n            return _pageInfo;\n        };\n        /**\n        * 获取page信息\n        * @returns {Object}  - page信息对象\n        */\n        RxmMobileGrid.prototype.pageInfo = function () {\n            return _pageInfo;\n        };\n        /**\n        * 重新加载表格(数据更新)\n        * @param {Object} arg - 共有三个参数：type,value,page\n        */\n        RxmMobileGrid.prototype.reload = function (arg) {\n            if (!_isRender) {\n                //判断是否为桌面版\n                if (isDesktop(this._config.id)) {\n                    this._renderPc();\n                }\n                else {\n                    this._render();\n                }\n                _isRender = true;\n            }\n            _doc.reload(arg);\n        };\n        /**\n        * 刷新表格（视图更新）_doc.reload调用\n        */\n        RxmMobileGrid.prototype.refresh = function (arg) {\n            ///<param  name =\"arg\"  type=\"Array\"><param>\n            var cf = this._config;\n            //清空表格中所有数据\n            $tBody.empty();\n            var trHeight = 40;\n            if (isDesktop(this._config.id)) {\n                //表格包裹器设置高度\n                var $selPageSize = $gridWrap.find(\".rxm-page-size select option:selected\").val();\n                $gridWrap.find(\".rxm-table-body\").css(\"height\", trHeight * $selPageSize + \"px\");\n                //桌面端 设置分页数据以及绑定分页按钮事件\n                this._setPaginationDataEvent();\n            }\n            var baseIndex = (parseInt(_pageInfo.curPage) - 1) * parseInt(this._config.pageSize);\n            var begin = cf.param.viewBegin * cf.pageSize;\n            var cacheD = cf.param.data.length;\n            var viewD = (cf.param.viweMaxLen + cf.param.viewBegin) * cf.pageSize;\n            var end = cacheD < viewD ? cacheD : viewD;\n            //循环迭代数据创建表格行\n            var i = 0;\n            //reload 返回数据即画表格，若无数据则提示\"暂无数据！\"\n            if (end > 0) {\n                for (var j = begin; j < end; j++, i++) {\n                    var item = this._config.param.data[j];\n                    $tBody.append(this._createRow(this, item, i + 1, baseIndex));\n                }\n            }\n            else {\n                //桌面版表格,无数据时需要设置colspan\n                if (isDesktop(cf.id)) {\n                    var thLen = $gridWrap.find(\".rxm-table-body th\").length;\n                    $tBody.append($(\"<tr class='rxm-nodata-tip-tr'><td class='rxm-nodata-tip' colspan = '\" + thLen + \"'>\" + this._config.refreshTip.nodataTip + \"</td></tr>\"));\n                }\n                else {\n                    $tBody.append($(\"<tr class='rxm-nodata-tip-tr'><td class='rxm-nodata-tip'>\" + this._config.refreshTip.nodataTip + \"</td></tr>\"));\n                }\n            }\n            //点击checkbox防止触发行事件\n            if (this._config.slidemenu) {\n                //左滑行 checkbox的input框放在div中\n                $gridWrap.find(\".rxm-multi-check\").closest(\"div\").tap(function () {\n                    return false;\n                });\n            }\n            else {\n                //普通行 checkbox的input框放在td中\n                $gridWrap.find(\".rxm-multi-check\").closest(\"td\").tap(function () {\n                    return false;\n                });\n            }\n            var touchInfo = this.touchRowInfo();\n            $tableBody.scrollTop(touchInfo.scrollPos);\n            if (_pressFlag) {\n                this.initPress();\n            }\n            //add by xiangcq 2017.10.27 判断苹果设备 去除高度  去除scroll样式\n            if (appTool.isIOS()) {\n                $(\"#rxm_content\").css(\"height\", \"auto\").removeClass('content-class');\n            }\n        };\n        /**\n        * 计算表格 包裹器高度\n        * @returns {Number} index - 视图行索引\n        */\n        var _calWrapHeight = function () {\n            var wrapHeight = $gridWrap[0].getBoundingClientRect();\n            var $wParent = $gridWrap.parent();\n            if ($wParent.hasClass(\"rxm-content-panel\") || $wParent.hasClass(\"rxm-left-panel\") || $wParent.hasClass(\"rxm-top-panel\")) {\n                wrapHeight = \"100%\";\n            }\n            else {\n                //如果用户配置高度\n                if (!!thisObj._config.height) { //表格config对象 height设置\n                    wrapHeight = thisObj._config.height;\n                }\n                else if (wrapHeight.height) {\n                    wrapHeight = wrapHeight.height;\n                }\n                else {\n                    wrapHeight = $('html').height() - wrapHeight.top;\n                }\n            }\n            return wrapHeight;\n        };\n        /**\n        * 移动端 加载视图内所有属性（表格、标题栏、工具栏、搜索栏、刷新栏)\n        */\n        RxmMobileGrid.prototype._render = function () {\n            //首先检查根据ID判断表容器$gridWrap是否存在，若存在即设置容器\n            //$gridWrap.attr(\"dataurl\")为undefined 兼容原有表格 只定义包裹器div即可\n            if (!this._isHtmlAttrCfg()) { //false\n                $gridWrap.addClass(\"rxm-s-grid\").empty();\n            }\n            this._config.textEllipsis && $gridWrap.addClass(\"rxm-s-grid-ellipsis\");\n            //获取包裹器高度\n            _wrapHeight = _calWrapHeight();\n            //初始化包裹器表格高度值,表格config对象 height属性设置的高度最优先, 其次为html div包裹器设置的高度,如果都不设置默认取屏幕可用高度\n            //  if(!!this._config.height){//表格config对象 height设置\n            //      _wrapHeight = this._config.height;\n            //  }else if($gridWrap.height() !== 0 && $gridWrap.height() !== 100 && !this._config.height){//html div包裹器高度设置\n            //     var otherHeight = 0;\n            //      for(var i=0;i<$gridWrap.siblings().length;i++){\n            //          if($($gridWrap.siblings()[i]).css(\"display\")!=\"none\"  &&  $($gridWrap.siblings()[i]).css(\"visibility\")!=\"hidden\"){\n            //              otherHeight += $($gridWrap.siblings()[i]).height();\n            //          }\n            //      }\n            //      _wrapHeight = $gridWrap.height() - otherHeight;\n            //      this._config.height = parseInt(_wrapHeight);\n            //  }else if($gridWrap.height()==0 && !this._config.height){//未设置高度，默认取屏幕可用高度\n            //      var otherHeight = 0;\n            //      for(var i=0;i<$gridWrap.siblings().length;i++){\n            //          if($($gridWrap.siblings()[i]).css(\"display\")!=\"none\"  &&  $($gridWrap.siblings()[i]).css(\"visibility\")!=\"hidden\"){\n            //              otherHeight += $($gridWrap.siblings()[i]).height();\n            //          }\n            //      }\n            //      _wrapHeight = _wrapHeight - otherHeight;\n            //      this._config.height = _wrapHeight;\n            //  }\n            //表格包裹器设置高度\n            $gridWrap.css(\"height\", _wrapHeight);\n            //判断htm文件中表格包裹器div是否存在定制titlebar\n            if ($gridWrap.find(\".rxm-s-grid-titlebar\").length == 0) {\n                $gridWrap.append($('<div class=\"rxm-s-grid-titlebar\"></div>'));\n                $gridWrap.find(\".rxm-s-grid-titlebar\").css(\"display\", \"none\");\n            }\n            ;\n            //从整个html页面中选择toolbar\n            $toolbar = $(\".rxm-s-grid-toolbar[ormgrid=\" + this._config.id + \"]\");\n            //判断html文件中是否存在定制toolbar,如果没有添加默认\n            if ($toolbar.length === 0) {\n                //判断html文件中是否存在定制toolbar\n                $gridWrap.find(\".rxm-s-grid-titlebar\").after($('<div class=\"rxm-s-grid-toolbar\" ormgrid=' + this._config.id + '></div>'));\n                $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n                //重新定义toolbar\n                $toolbar = $(\".rxm-s-grid-toolbar[ormgrid=\" + this._config.id + \"]\");\n            }\n            //判断html文件中表格包裹器div是否存在定制searchbar\n            if ($gridWrap.find(\".rxm-s-grid-searchbar\").length == 0) {\n                $gridWrap.append($('<div class=\"rxm-s-grid-searchbar\"></div>'));\n                $gridWrap.find(\".rxm-s-grid-searchbar\").css(\"display\", \"none\");\n            }\n            ;\n            //判断html文件中是否存在定制topRefreshbar\n            if ($gridWrap.find(\".rxm-s-grid-topRefreshbar\").length == 0) {\n                $gridWrap.append($('<div class=\"rxm-s-grid-topRefreshbar\"></div>'));\n                $gridWrap.find(\".rxm-s-grid-topRefreshbar\").css(\"display\", \"none\");\n            }\n            //判断html文件中是否存在定制表格\n            if ($gridWrap.find(\".rxm-s-grid-content\").length == 0) {\n                $gridWrap.append($('<div class=\"rxm-s-grid-content\"><div class=\"rxm-s-grid-table\"></div></div>'));\n            }\n            ;\n            //判断html文件中是否存在定制s_grid_bottomRefreshbar\n            if ($gridWrap.find(\".rxm-s-grid-bottomRefreshbar\").length == 0) {\n                $gridWrap.append($('<div class=\"rxm-s-grid-bottomRefreshbar\"></div>'));\n                $gridWrap.find(\".rxm-s-grid-bottomRefreshbar\").css(\"display\", \"none\");\n            }\n            //判断操作系统为IOS系统，添加s_grid_content样式 padding-top:1px 解决IOS未定制搜索框、操作栏场景下 下拉刷新失效的问题\n            if (appTool.isIOS()) {\n                $gridWrap.find(\".rxm-s-grid-content\").css(\"padding-top\", \"1px\");\n            }\n            $titlebar = $(\"#\" + this._config.id + \" .rxm-s-grid-titlebar\");\n            //$toolbar = $(\"#\" + this._config.id + \" .rxm-s-grid-toolbar\");   \n            $searchbar = $(\"#\" + this._config.id + \" .rxm-s-grid-searchbar\");\n            $topRefreshbar = $(\"#\" + this._config.id + \" .rxm-s-grid-topRefreshbar\");\n            $gridContent = $(\"#\" + this._config.id + \" .rxm-s-grid-content\");\n            $bottomRefreshbar = $(\"#\" + this._config.id + \" .rxm-s-grid-bottomRefreshbar\");\n            $gridWrap.on(RxmMobileGrid.msgEnum.ormRereshGridView, $.proxy(this._onRefreshView, this));\n            //加载表格  标题栏、工具栏、搜索栏、表格数据、顶部刷新栏、底部刷新栏\n            this.renderTitleBar();\n            this.renderToolbar();\n            this.renderSearchBar();\n            this._renderTable();\n            if (!this._isHtmlAttrCfg()) {\n                this.renderTopRefreshbar();\n                this.renderBottomRefreshbar();\n            }\n        };\n        /**\n        * 计算表格table-body高度\n        * @returns {Number} tBodyHeight - 表格table-body高度值\n        */\n        var _calTableBodyHeight = function () {\n            //计算table-body坐标值\n            var tBodyHeight = $gridWrap.find(\".rxm-table-body\")[0].getBoundingClientRect();\n            var $wParent = $gridWrap.parent();\n            if ($wParent.hasClass(\"rxm-content-panel\") || $wParent.hasClass(\"rxm-left-panel\") || $wParent.hasClass(\"rxm-top-panel\")) {\n                tBodyHeight = $gridWrap.height() - tBodyHeight.top;\n            }\n            else {\n                //计算table-body高度 总高度减去div上沿高度\n                tBodyHeight = $('html').height() - tBodyHeight.top - _footerOffset;\n            }\n            return tBodyHeight;\n        };\n        /**\n         * 设置页面底部补偿\n         * @returns {Number} value - 底部补偿值\n         */\n        RxmMobileGrid.prototype.attrFooterOffset = function (value) {\n            if (typeof value != \"undefined\") {\n                _footerOffset = value;\n                $gridWrap.attr(\"footeroffset\", _footerOffset);\n            }\n            else {\n                if ($('body').find(\".rxm-footerOffset\").length > 0) {\n                    _footerOffset = $('body').find(\".rxm-footer\").outerHeight();\n                }\n            }\n            return _footerOffset;\n        };\n        /**\n         * 移动端 渲染表格\n         */\n        RxmMobileGrid.prototype._renderTable = function () {\n            var the = this;\n            var _tBodyHeight;\n            var $table = $gridWrap.find(\".rxm-s-grid-table table tbody\").empty();\n            if (!this._isHtmlAttrCfg()) {\n                $table = $gridWrap.find(\".rxm-s-grid-table\").empty();\n            }\n            //清除id为mCSB_1 div的tabindex属性 消除行点击事件表格出现黄色的边线\n            $gridWrap.find(\"#mCSB_1\").removeAttr(\"tabindex\");\n            //计算总页数\n            _pageInfo.pageCount = Math.ceil(_pageInfo.dataCount / this._config.pageSize);\n            //数据表格高度样式以及滚动条设置 modify by xiangcq 20180109 设置table-body高度\n            //  if (!!this._config.title || $titlebar.css(\"display\")!='none') {   \n            //      this._config.height = this._config.height - 50;\n            //  }\n            //  if (!!this._config.toolbar && $toolbar.css(\"display\")!='none') {\n            //      this._config.height = this._config.height - 50;\n            //  }\n            //  if (!!this._config.searchbar || $searchbar.css(\"display\")!='none') {\n            //      this._config.height = this._config.height - $searchbar.outerHeight();\n            //  }\n            if (!this._isHtmlAttrCfg()) {\n                //表格table-body设置高度  此高度小于等于包裹器高度\n                // var style = 'style=\"overflow-x:hidden;overflow-y:auto;' + (_tBodyHeight && \"height:\" + _tBodyHeight +\"px\") + '\"';\n                var $tableBodyOne = $('<div class=\"rxm-table-body\"><table class=\"table table_hover\"><tbody></tbody></table></div>');\n                $table.append($tableBodyOne);\n                _tBodyHeight = _calTableBodyHeight();\n                $gridWrap.find(\".rxm-table-body\").css(\"height\", _tBodyHeight);\n                $gridWrap.find(\".rxm-table-body\").css(\"overflow-x\", \"hidden\");\n                $gridWrap.find(\".rxm-table-body\").css(\"overflow-y\", \"auto\");\n            }\n            else {\n                _tBodyHeight = _calTableBodyHeight();\n                //表格table-body设置高度  此高度小于等于包裹器高度\n                $gridWrap.find(\".rxm-table-body\").css(\"height\", _tBodyHeight);\n                $gridWrap.find(\".rxm-table-body\").css(\"overflow-x\", \"hidden\");\n                $gridWrap.find(\".rxm-table-body\").css(\"overflow-y\", \"auto\");\n            }\n            $tableBody = $gridWrap.find(\".rxm-table-body\");\n            $tBody = $gridWrap.find(\"tbody\");\n            //上滑手势事件绑定\n            $tableBody.swipeUpMove($.proxy(this._onSwipeUpMove, this));\n            //下滑手势事件绑定\n            $tableBody.swipeDownMove($.proxy(this._onSwipeDownMove, this));\n            //上滑结束手势事件绑定\n            $tableBody.swipeUpEnd($.proxy(this._onSwipeUpEnd, this));\n            //下滑结束手势事件绑定\n            $tableBody.swipeDownEnd($.proxy(this._onSwipeDownEnd, this));\n            //点击事件绑定\n            $tableBody.tap(\"tr\", $.proxy(this._onTapLine, this));\n            //长按事件绑定\n            $tableBody.press(\"tr\", $.proxy(this._onPressLine, this));\n            //上拉到底即激发事件   隐藏底部loading信息\n            this.callbackLoadSucsess({ fn: function (e, data) {\n                    if (data.loadParam.type == \"bottom\") {\n                        if (data.status == \"sucsess\") {\n                            setTimeout(function () {\n                                $bottomRefreshbar.css(\"display\", \"none\");\n                            }, 800);\n                        }\n                        else {\n                            setTimeout(function () {\n                                $bottomRefreshbar.empty();\n                                var $tip = $('<span>' + the._config.refreshTip.bottomTipError + '</span>');\n                                $bottomRefreshbar.append($tip);\n                                setTimeout(function () {\n                                    $bottomRefreshbar.css(\"display\", \"none\");\n                                    //重置数据加载中提示信息\n                                    $bottomRefreshbar.empty();\n                                    //\t\t\t                var $loading = $('<span class=\"rxm-grid-loading\"/>&nbsp;&nbsp;&nbsp;<span>' + the._config.refreshTip.bottomTipLoading + '</span>');\n                                    //\t\t\t                $bottomRefreshbar.append($loading);\n                                    the.renderBottomRefreshbar();\n                                }, 500);\n                            }, 2000);\n                        }\n                    }\n                } });\n            var clkFun;\n            var preFun;\n            for (var i = 0; i < this._config.rowevent.length; i++) {\n                if (!!this._config.rowevent[i].click) {\n                    clkFun = this._config.rowevent[i].click;\n                }\n                if (!!this._config.rowevent[i].press) {\n                    preFun = this._config.rowevent[i].press;\n                }\n            }\n            //绑定数据列表配置的所有事件\n            if (!!clkFun) {\n                this.bindTapLineElement({ fn: clkFun }, this);\n            }\n            if (!!preFun) {\n                this.bindPressLineElement({ fn: preFun }, this);\n            }\n        };\n        /**\n        * 桌面端 渲染表格\n        *\n        */\n        RxmMobileGrid.prototype._plusViewBegin = function () {\n            var cf = this._config;\n            var scrollHight = $tableBody[0].scrollHeight;\n            var scrollTop = $tableBody.scrollTop();\n            //$tableBody高度\n            var tableHight = $tableBody.height();\n            var b = scrollHight - scrollTop - tableHight < 200;\n            // console.info(\"_downViewBegin\" + $tableBody.scrollTop());\n            //if (b) { console.info(\"_plusViewBegin++\" + cf.param.viewBegin); };\n            if (b && (cf.param.viewBegin + cf.param.viweMaxLen) * cf.pageSize < cf.param.data.length) {\n                cf.param.viewBegin++;\n                //console.info(\"_plusViewBegin++\" + cf.param.viewBegin);\n                this.refresh();\n                return true;\n            }\n            return false;\n        };\n        RxmMobileGrid.prototype._minViewBegin = function () {\n            var cf = this._config;\n            var b = $tableBody.scrollTop() < 200;\n            if (b && cf.param.viewBegin > 0) {\n                cf.param.viewBegin--;\n                //console.info(\"_minViewBegin--\" + cf.param.viewBegin);\n                this.refresh();\n                return true;\n            }\n            return false;\n        };\n        /**\n        * 上滑手势监听函数(上拉分页)\n        * @param {event} evt - jquery event对象\n        * @param {Object} data - 滑动位置数据对象\n        */\n        RxmMobileGrid.prototype._onSwipeUpMove = function (evt, data) {\n            //当前移动中tartY值\n            var startYMove = data.position.delta[0].startY;\n            this.touchRowInfo(evt);\n            // if(this._plusViewBegin())return;\n            _swipeDir = \"up\";\n            //判定是否到底 如果处于长按状态不可上拉下拉\n            if (this._isOnBottom() && _pressFlag == false) {\n                if (_startYMove == 0) {\n                    $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottom, 0);\n                    $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottomBegin);\n                    //从到底位置作为起始记录startY值\n                    _startYMove = startYMove;\n                }\n                else {\n                    //滑动距离  滑动中startY与到底位置起始记录startY值做差\n                    var swipeDIF = startYMove - _startYMove;\n                    //判断到底后只激发一次\n                    //$gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottom,swipeDIF);\n                }\n            }\n        };\n        /**\n        * 下滑手势监听函数(下拉刷新)\n        * @param {event} evt - jquery event对象\n        * @param {Boolean} data - 滑动位置数据对象\n        */\n        RxmMobileGrid.prototype._onSwipeDownMove = function (evt, data) {\n            //当前移动中tartY值\n            this.touchRowInfo(evt);\n            if (this._minViewBegin())\n                return;\n            _swipeDir = \"down\";\n            var startYMove = data.position.delta[0].startY;\n            //判断是否到顶 如果处于长按状态不可上拉下拉\n            if (this._isOnTop() && _pressFlag == false) {\n                if (_startYMove == 0) {\n                    $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTop, 0);\n                    $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTopBegin);\n                    _startYMove = startYMove;\n                }\n                else {\n                    var swipeDIF = startYMove - _startYMove;\n                    //判断到顶后持续激发 阻尼下拉效果\t\t\n                    $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTop, swipeDIF);\n                }\n            }\n        };\n        /**\n        * 上滑手势结束监听函数(上拉分页)\n        */\n        RxmMobileGrid.prototype._onSwipeUpEnd = function () {\n            //滚动距离总长(注意不是滚动条的长度)\n            var scrollHight = $tableBody[0].scrollHeight;\n            //滚动到的当前位置\n            var scrollTop = $tableBody.scrollTop();\n            //$tableBody高度\n            var tableHight = $tableBody.height();\n            //判断是否到底，上拉分页\n            if (scrollTop + tableHight >= scrollHight) {\n                $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottomEnd);\n            }\n        };\n        /**\n        * 下滑手势结束监听函数(下拉刷新)\n        */\n        RxmMobileGrid.prototype._onSwipeDownEnd = function () {\n            //判断是否到顶，如果处于长按状态不可上拉下拉\n            if (this._isOnTop() && _pressFlag == false) {\n                $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTopEnd);\n            }\n        };\n        /**\n        * 向表格中追加一行数据\n        * @param {Object} grid - 表格对象\n        * @param {Object} row - 行数据\n        * @param {Number} rowIndex - 行索引\n        * @param {Number} baseIndex - true克隆数据，undefined，false 返回 view 数据此为默认\n        * @returns {Object} $tr - 行对象\n        */\n        RxmMobileGrid.prototype._createRow = function (grid, row, rowIndex, baseIndex) {\n            //渲染表格行前触发\n            if (typeof (this._config.onBeforeRenderRow) == \"function\") {\n                //可对行数据进行处理\n                row = this._config.onBeforeRenderRow.apply(this, [row]) || row;\n            }\n            //配置tr rowevent\n            var $tr = $(\"<tr></tr>\");\n            if (!!this._config.rowevent && this._config.rowevent.length > 0) {\n                for (var i = 0, length = this._config.rowevent.length; i < 1; i++) {\n                    var item = this._config.rowevent[i];\n                    $tr = $(\"<tr class='\" + item.field + \"'></tr>\");\n                }\n            }\n            if (isDesktop(this._config.id)) {\n                $tr = this.createRowInPc(row, $tr, rowIndex, baseIndex);\n            }\n            else {\n                if (!!this._config.slidemenu && this._config.slidemenu.length > 0) {\n                    $tr = this.createSlideRow(this, row, $tr);\n                }\n                else {\n                    $tr = this.createRow(this, row, $tr);\n                }\n            }\n            return $tr;\n        };\n        /**\n        * 创建左滑菜单行\n        * @param {Object} grid - 表格对象\n        * @param {Object} row - 行数据\n        * @param {Object} $tr - 表格行对象\n        * @returns {Object} $tr - 表格行对象 jquery对象\n        */\n        RxmMobileGrid.prototype.createSlideRow = function (grid, row, $tr) {\n            //创建表格行数据   共4列  icon 数据内容 (标题+内容)   复选框(默认隐藏)  \n            var the = this;\n            var $td = $('<td width=\"100%\" style=\"padding:0px\"></td>');\n            var $wrapperDiv = $('<div class=\"rxm-slide-wrapper clearfix\"></div>');\n            var $scrollDiv = $('<div class=\"rxm-slide-scroll-wrapper clearfix\"></div>');\n            var $iconDiv = $('<div class=\"rxm-icon-div clearfix\"></div>');\n            var $dataDiv = $('<div class=\"rxm-data-div clearfix\"></div>');\n            var $slideBtnDiv = $('<div class=\"rxm-slide-btn-div clearfix\"></div>');\n            var $checkboxDiv = $('<div class=\"rxm-td-checkbox fix\" style=\"display:none;float:left\" ></div>');\n            //数据字段个数\n            var parNum = this._config.layout.length;\n            var firstField = '1';\n            //循环创建icon与数据列\n            for (var j = 0, item; item = this._config.layout[j++]; j < item.length) {\n                var tdName = item.name;\n                var tdValue = item.format ? item.format({ \"row\": row }) : row[item.field];\n                if (item.field == \"icon\") {\n                    _hasIcon = true;\n                    parNum = parNum - 1;\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    $iconDiv.append(tdValue);\n                    $scrollDiv.append($iconDiv);\n                }\n                else {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    if (firstField === '1') {\n                        if (tdName !== \"\" && tdName !== null) {\n                            $dataDiv.append(\"<span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                        else {\n                            $dataDiv.append(\"<span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                    }\n                    else {\n                        if (tdName !== \"\" && tdName !== null) {\n                            //其他字段换行\n                            $dataDiv.append(\"</br><span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                        else {\n                            //其他字段换行\n                            $dataDiv.append(\"</br><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                    }\n                }\n                $scrollDiv.append($dataDiv);\n            }\n            //创建checkbox列   multi属性配置为true：多选框      false：单选按钮\n            if (typeof this._config.multi != \"undefined\") {\n                $checkboxDiv.append('<input class=\"rxm-multi-check\" type=\"' + (this._config.multi ? 'checkbox' : 'radio') + '\" name=\"s_gird_multi_' + (this._config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '>');\n                $scrollDiv.append($checkboxDiv);\n            }\n            //渲染表格行后触发\n            if (typeof (this._config.onAfterRenderRow) == \"function\") {\n                this._config.onAfterRenderRow.apply($tr, [row]);\n            }\n            $scrollDiv.append($slideBtnDiv);\n            $wrapperDiv.append($scrollDiv);\n            $td.append($wrapperDiv);\n            $tr.append($td);\n            //设置tr中各个部分的div高度值、宽度值\n            this._attrSlideRowStyle($slideBtnDiv, $dataDiv, $scrollDiv, $iconDiv, parNum);\n            //数据行绑定touchStart触屏开始事件\n            this._bindTrSlideEvent($scrollDiv);\n            return $tr;\n        };\n        /**\n         * 设置左滑行内div高度与宽度\n         * @param {Number} parNum - 单个字段高度值\n         */\n        RxmMobileGrid.prototype._attrSlideRowStyle = function ($slideBtnDiv, $dataDiv, $scrollDiv, $iconDiv, parNum) {\n            //数据div高度\n            var dataDivHeight = parNum * this._config.trRowParam.parHeight;\n            //滑动菜单div设置高度\n            //$slideBtnDiv.height(dataDivHeight + this._config.trRowParam.dataMargin);\n            //滑动按钮区域div高度值\n            var slideBtnDivHeight = dataDivHeight + this._config.trRowParam.dataMargin / 2;\n            //ios处理菜单div高度少4px的问题\n            if (appTool.isIOS()) {\n                slideBtnDivHeight = dataDivHeight + this._config.trRowParam.dataMargin / 2 + 4;\n            }\n            $slideBtnDiv.height(slideBtnDivHeight);\n            if (_hasIcon) {\n                _iconMargin = dataDivHeight / 2 + this._config.trRowParam.dataMargin / 2 - 20;\n                $iconDiv.css(\"margin-top\", _iconMargin);\n            }\n            //tr宽度\n            var screenWidth = $(window).width() - this._config.trRowParam.trMargin;\n            //数据显示div宽度 tr宽度 减去 icon宽度\n            var dataWidth = screenWidth;\n            //判断是否具有icon列,若有即减去icon列宽度\n            if (_hasIcon) {\n                dataWidth = screenWidth - this._config.trRowParam.iconWidth;\n            }\n            //数据显示div设置宽度\n            $dataDiv.width(dataWidth);\n            //获取左滑按钮的数量，计算左滑按钮区域面积\n            var itemWidth = 0;\n            for (var i = 0, length = this._config.slidemenu.length; i < length; i++) {\n                var item = this._config.slidemenu[i];\n                var $btnWrap = $('<div class=\"rxm-slide-btn\"></div>');\n                //滑动菜单绑定事件\n                $btnWrap.tap(this, item.callback);\n                var $btn = $('<div></div>');\n                //滑动菜单内容垂直居中设置\n                $btn.css(\"line-height\", slideBtnDivHeight + \"px\");\n                //按钮图标\n                if (!!item.icon) {\n                    var $btnIcon = $(\"<i></i>\");\n                    $btnIcon.attr(\"class\", item.icon);\n                    $btn.append($btnIcon);\n                }\n                //按钮名称\n                if (!!item.name) {\n                    $btn.append(item.name);\n                }\n                //按钮文字大小\n                if (!!item.fontSize) {\n                    $btn.css(\"font-size\", item.fontSize);\n                }\n                //按钮文字颜色\n                if (!!item.fontSize) {\n                    $btn.css(\"color\", item.fontColor);\n                }\n                //按钮背景色\n                if (!!item.color) {\n                    $btn.css(\"background-color\", item.color);\n                }\n                //按钮样式表\n                $btn.addClass(item.class);\n                //按钮宽度\n                if (!!item.width) {\n                    $btn.width(item.width);\n                }\n                $btnWrap.append($btn);\n                $slideBtnDiv.append($btnWrap);\n                itemWidth += item.width ? parseInt(item.width) : this._config.leftSlideParam.btnWidth;\n                console.info(btnAreaWidth);\n            }\n            //滑动菜单区域div宽度 每个按钮宽度之和\n            btnAreaWidth = itemWidth;\n            //滑动按钮div设置宽度  默认宽度每个60  可配置\n            $slideBtnDiv.width(btnAreaWidth);\n            //具有滚动条div宽度 tr宽度 加上 隐藏按钮宽度\n            var scrollWidth = screenWidth + btnAreaWidth;\n            //滚动条div设置宽度  \n            $scrollDiv.width(scrollWidth);\n            scrollDivWidth = scrollWidth;\n            dataDivWidth = dataWidth;\n        };\n        /**\n         * 绑定表格行左滑事件\n         * @param {Object} $slideTr - 表格行对象\n         */\n        RxmMobileGrid.prototype._bindTrSlideEvent = function ($slideTr) {\n            var the = this;\n            //数据行绑定touchStart触屏开始事件\n            $slideTr.touchStart(function (e, data) {\n                if (!_pressFlag) {\n                    // 记录当前触屏的行对象 \n                    slideCurSwipeTr = this;\n                    // 当前滑动数据行设定过渡效果设置  1、过渡效果的 CSS 属性的名称   2、完成过渡效果需要多少秒或毫秒  3、速度效果的速度曲线（过渡效果）\n                    the._setTransition($(slideCurSwipeTr));\n                    // 点击除当前左滑对象之外的任意其他位置\n                    if (slideLastSwipeTr && slideCurSwipeTr != slideLastSwipeTr) {\n                        $(slideCurSwipeTr).removeData(\"position\");\n                        $(slideLastSwipeTr).removeData(\"position\");\n                        // 上一个左滑对象设定过渡效果设置  1、过渡效果的 CSS 属性的名称   2、完成过渡效果需要多少秒或毫秒  3、速度效果的速度曲线（过渡效果）\n                        the._setTransition($(slideLastSwipeTr));\n                        // 隐藏上一个左滑对象按钮\n                        the._resetStatus($(slideLastSwipeTr));\n                        // 清空上一个左滑的对象\n                        slideLastSwipeTr = null;\n                    }\n                }\n            });\n            //数据行绑定touchMove触屏移动事件\n            $slideTr.touchMove(function (e, data) {\n                if (!_pressFlag) {\n                    //滑动距离  当前滑动横向坐标减去起始横向坐标\n                    var moveDis = data.position.delta[0].moved;\n                    //滑动方向\n                    var curSwipe = data.curSwipe;\n                    //console.info('moveDis==='+moveDis);\n                    //左滑，距离在75之内，按钮区域随着左滑距离逐渐显示，大于75后按钮区域不变\n                    console.info('btnAreaWidth===' + btnAreaWidth);\n                    if (moveDis <= btnAreaWidth && curSwipe == \"Left\" && $(slideCurSwipeTr).data(\"position\") != \"view\") {\n                        $(slideCurSwipeTr).css('-webkit-transform', 'translate3d(' + -moveDis + 'px, 0px, 0px)');\n                    }\n                    //左滑完全显示按钮区域，标识词条数据位置为显示\n                    if (moveDis > btnAreaWidth && curSwipe == \"Left\") {\n                        $(slideCurSwipeTr).data(\"position\", \"view\");\n                        console.info('position===' + slideCurSwipeTr);\n                    }\n                    //右滑，按钮区域直接隐藏\n                    if (curSwipe == \"Right\") {\n                        the._resetStatus($(slideCurSwipeTr));\n                    }\n                }\n            });\n            //数据行绑定touchEnd触屏结束事件\n            $slideTr.touchEnd(function (e, data) {\n                if (!_pressFlag) {\n                    // 点击除当前左滑对象之外的任意其他位置\n                    if (slideLastSwipeTr && slideCurSwipeTr != slideLastSwipeTr) {\n                        // 右滑隐藏按钮\n                        the._resetStatus($(slideLastSwipeTr));\n                        // 清空上一个左滑的对象\n                        slideLastSwipeTr = null;\n                    }\n                    //滑动方向\n                    var curSwipe = data.curSwipe;\n                    if (curSwipe != \"\") {\n                        //移动距离  结束时横向坐标减去起始横向坐标\n                        var moveDis = data.position.delta[0].moved;\n                        console.info('moveDis===' + moveDis);\n                        //当滑动结束时，左滑距离大于设置距离数值，显示按钮区域\n                        if (moveDis > the._config.leftSlideParam.viewWidth && curSwipe == \"Left\") {\n                            //显示按钮区域\n                            $(slideCurSwipeTr).css('-webkit-transform', 'translate3d(' + (-1 * btnAreaWidth) + 'px, 0px, 0px)');\n                            $(slideCurSwipeTr).data(\"position\", \"view\");\n                            slideLastSwipeTr && slideLastSwipeTr != slideCurSwipeTr &&\n                                $(slideLastSwipeTr).css('-webkit-transform', 'translate3d(0px, 0px, 0px)'); // 已经左滑状态的按钮右滑\n                            slideLastSwipeTr = slideCurSwipeTr; // 记录上一个左滑的对象\n                        }\n                        else if (moveDis < the._config.leftSlideParam.viewWidth && curSwipe == \"Left\") {\n                            the._resetStatus($(slideCurSwipeTr));\n                            if (slideCurSwipeTr == slideLastSwipeTr) {\n                                // 右滑\n                                the._resetStatus($(slideCurSwipeTr));\n                                // 清空上一个左滑的对象\n                                slideLastSwipeTr = null;\n                            }\n                        }\n                    }\n                }\n            });\n        };\n        /**\n        * 渲染表格行数据(可重写)\n        * @param {Object} grid - 表格对象\n        * @param {Object} row - 行数据\n        * @param {Object} $tr - 表格行对象\n        * @returns {Object} $tr - 表格行对象 jquery对象\n        */\n        RxmMobileGrid.prototype.createRow = function (grid, row, $tr) {\n            //创建表格行数据   共4列  icon 数据内容 (标题+内容)  右向箭头   复选框(默认隐藏)  \n            var $tdIcon = $('<td class=\"rxm-td-icon\"></td>');\n            var $tdInfo = $('<td></td>');\n            var $tdArrow = $('<td class=\"rxm-td-arrow\" ></td>');\n            var $tdCheckbox = $('<td class=\"rxm-td-checkbox fix\" style=\"display:none;\" ></td>');\n            var firstField = '1';\n            //循环创建icon与数据列\n            for (var j = 0, item; item = this._config.layout[j++]; j < item.length) {\n                var tdName = item.name;\n                var tdValue = item.format ? item.format({ \"row\": row }) : row[item.field];\n                if (item.field == \"icon\") {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    $tdIcon.append(tdValue);\n                    $tr.append($tdIcon);\n                }\n                else {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    if (firstField === '1') {\n                        if (tdName !== \"\" && tdName !== null) {\n                            $tdInfo.append(\"<span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                        else {\n                            $tdInfo.append(\"<span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                    }\n                    else {\n                        if (tdName !== \"\" && tdName !== null) {\n                            //其他字段换行\n                            $tdInfo.append(\"</br><span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                        else {\n                            //其他字段换行\n                            $tdInfo.append(\"</br><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                    }\n                }\n                $tr.append($tdInfo);\n            }\n            //创建checkbox列   multi属性配置为true：多选框      false：单选按钮\n            if (typeof this._config.multi != \"undefined\") {\n                $tdCheckbox.append('<input class=\"rxm-multi-check\" type=\"' + (this._config.multi ? 'checkbox' : 'radio') + '\" name=\"s_gird_multi_' + (this._config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '>');\n                $tr.append($tdCheckbox);\n            }\n            //创建箭头列 \n            $tdArrow.append($('<img src=\"' + _arrowImg + '\"/>'));\n            $tr.append($tdArrow);\n            //渲染表格行后触发\n            if (typeof (this._config.onAfterRenderRow) == \"function\") {\n                this._config.onAfterRenderRow.apply($tr, [row]);\n            }\n            return $tr;\n        };\n        /**\n        * 渲染表格标题栏(可重写)\n        */\n        RxmMobileGrid.prototype.renderTitleBar = function () {\n            if (this._config.title) {\n                $titlebar.css(\"display\", \"\");\n                $titlebar.empty().append(this._config.title);\n            }\n        };\n        /**\n        * 渲染表格搜索栏(可重写)\n        */\n        RxmMobileGrid.prototype.renderSearchBar = function () {\n            if (!!this._config.searchbar) {\n                $searchbar.css(\"display\", \"\");\n            }\n        };\n        /**\n        * 移动端 渲染表格工具栏(可重写) 以config配置对象中的配置为主\n        */\n        RxmMobileGrid.prototype.renderToolbar = function () {\n            //html页面中已经定义工具栏，并且将默认按钮绑定默认事件\n            var liBtn = $toolbar.find(\"ul li\");\n            for (var i = 0; i < liBtn.length; i++) {\n                if ($(liBtn[i]).is(\".rxm-default-delete\")) {\n                    $(liBtn[i]).tap($.proxy(this.bindDeleteBtn, this));\n                }\n                if ($(liBtn[i]).is(\".rxm-default-all-select\")) {\n                    $(liBtn[i]).tap($.proxy(this.bindSelectAllBtn, this));\n                }\n                if ($(liBtn[i]).is(\".rxm-default-cancel\")) {\n                    $(liBtn[i]).tap($.proxy(this.bindCancelBtn, this));\n                }\n            }\n            if (!!this._config.toolbar && this._config.toolbar.length > 0) {\n                var $ul = $(\"<ul style='width:330px;'></ul>\");\n                for (var i = 0, length = this._config.toolbar.length; i < length; i++) {\n                    var item = this._config.toolbar[i];\n                    var $li = $('<li></li>');\n                    $li.tap(this, item.callback);\n                    $li.attr(\"style\", item.style);\n                    var $a = $('<a></a>');\n                    var $i = $('<i></i>');\n                    $i.attr(\"class\", item.icon);\n                    $i.appendTo($a);\n                    $a.append(item.name);\n                    $a.appendTo($li);\n                    $li.appendTo($ul);\n                }\n                $toolbar.empty().append($ul);\n            }\n        };\n        /**\n        * 渲染表格顶部刷新栏(可重写)\n        */\n        RxmMobileGrid.prototype.renderTopRefreshbar = function () {\n            var $loading = $('<img class = \"rxm-top-loading-arrow\" src=\"' + _downArrowImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + this._config.refreshTip.topTipBegin + '</span>');\n            $topRefreshbar.append($loading);\n        };\n        /**\n        * 渲染表格底部刷新栏(可重写)\n        */\n        RxmMobileGrid.prototype.renderBottomRefreshbar = function () {\n            var $loading = $('<span class=\"rxm-grid-loading\"/>&nbsp;&nbsp;&nbsp;<span>' + this._config.refreshTip.bottomTipLoading + '</span>');\n            $bottomRefreshbar.append($loading);\n        };\n        /**\n        * 重新设置tbody高度\n        */\n        var _resize = function (action, height) {\n            var _tbodyHeight = _calTableBodyHeight();\n            if (action == \"add\") {\n                _tbodyHeight = _tbodyHeight + height;\n            }\n            else {\n                _tbodyHeight = _tbodyHeight - height;\n            }\n            $tableBody.css(\"height\", _tbodyHeight + \"px\");\n        };\n        /**\n        * 触发长按状态函数\n        */\n        RxmMobileGrid.prototype.initPress = function () {\n            _pressFlag = true;\n            if (!!this._config.slidemenu) {\n                $gridWrap.find(\".rxm-data-div\").css(\"width\", dataDivWidth - 30);\n                $gridWrap.find(\".rxm-slide-scroll-wrapper\").css(\"width\", scrollDivWidth + 40);\n                $gridWrap.find(\".rxm-td-checkbox\").css(\"margin-top\", _iconMargin);\n                if (!!this._config.toolbar || $gridWrap.find(\".rxm-s-grid-toolbar\").length > 0) {\n                    //显示toolbar\n                    $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"\");\n                    //this._config.heigh = this._config.height - 50;\n                    //调用resize 重置tableBody高度 \n                    _resize(\"minus\", $gridWrap.find(\".rxm-s-grid-toolbar\").outerHeight());\n                    //$tableBody.css(\"height\", this._config.heigh + \"px\");\n                }\n                //显示行数据右侧复选框\n                $gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"\");\n            }\n            else {\n                //隐藏行数据右侧箭头\n                $gridWrap.find(\".rxm-td-arrow\").css(\"display\", \"none\");\n                if (!!this._config.toolbar || $gridWrap.find(\".rxm-s-grid-toolbar\").length > 0) {\n                    //显示toolbar\n                    $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"\");\n                    //  this._config.heigh = this._config.height - 50;\n                    //  $tableBody.css(\"height\", this._config.heigh + \"px\");\n                    _resize(\"minus\", $gridWrap.find(\".rxm-s-grid-toolbar\").outerHeight());\n                }\n                //显示行数据右侧复选框\n                $gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"\");\n            }\n        };\n        /**\n        * 取消长按状态\n        */\n        RxmMobileGrid.prototype.cancelPress = function () {\n            $gridWrap.find(\".rxm-multi-check\").prop(\"checked\", false);\n            _pressFlag = false;\n            _allChecked = true;\n            //提示全选\n            $toolbar.find(\"ul .rxm-default-all-select a\").html(\"全选\");\n            //隐藏行数据右侧复选框\n            $gridWrap.find(\".rxm-td-checkbox\").css(\"display\", \"none\");\n            if (!!this._config.slidemenu) {\n                $gridWrap.find(\".rxm-data-div\").css(\"width\", dataDivWidth);\n                $gridWrap.find(\".rxm-slide-scroll-wrapper\").css(\"width\", scrollDivWidth);\n            }\n            //显示行数据右侧箭头\n            $gridWrap.find(\".rxm-td-arrow\").css(\"display\", \"\");\n            if (!!this._config.toolbar || $gridWrap.find(\".rxm-s-grid-searchbar\").length > 0) {\n                //隐藏toolbar\n                $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n                //  this._config.heigh = this._config.height + 50;\n                //  $tableBody.css(\"height\", this._config.height + \"px\");\n                _resize(\"add\", $gridWrap.find(\".rxm-s-grid-toolbar\").outerHeight());\n            }\n        };\n        /**\n        * 全选/取消全选函数\n        */\n        RxmMobileGrid.prototype.allSelect = function () {\n            //获取表格中所有checkbox  jquery对象\n            var $checkTr = $gridWrap.find(\"input[name='s_gird_multi_\" + this._config.id + \"']\");\n            if (_allChecked) {\n                $checkTr.prop(\"checked\", true);\n                _allChecked = false;\n                //提示全不选\n                $toolbar.find(\"ul .rxm-default-all-select a\").html(\"全不选\");\n            }\n            else {\n                $checkTr.prop(\"checked\", false);\n                _allChecked = true;\n                //提示全选\n                $toolbar.find(\"ul .rxm-default-all-select a\").html(\"全选\");\n            }\n        };\n        /**\n        * 设置长按状态\n        * @param {Boolean} value - 状态值参数\n        * @returns {Boolean}  - 长按状态\n        */\n        RxmMobileGrid.prototype.attriPressFlag = function (value) {\n            if (!!value) {\n                _pressFlag = value;\n            }\n            return _pressFlag;\n        };\n        /**\n        * 设置top状态\n        * @param {Boolean} value - 状态值参数\n        * @returns {Boolean}  - top状态\n        */\n        RxmMobileGrid.prototype.attriTopFlag = function (value) {\n            if (typeof value != \"undefined\") {\n                var tmp = this._config._bTop;\n                this._config._bTop = value;\n                if (tmp != value && value) {\n                    $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTop);\n                    $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTopBegin);\n                }\n            }\n            return this._config._bTop;\n        };\n        /**\n        * 设置bottom状态\n        * @param {Boolean} value - 状态值参数\n        * @returns {Boolean} - bottom状态\n        */\n        RxmMobileGrid.prototype.attriBottomFlag = function (value) {\n            if (typeof value != \"undefined\") {\n                var tmp = this._config._bottom;\n                this._config._bottom = value;\n                if (tmp != value && value) {\n                    if (_startYMove == 0) {\n                        $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottom);\n                        $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottomBegin);\n                    }\n                }\n            }\n            return this._config._bottom;\n        };\n        /**\n        * 表格绑定滑动至顶部事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInTop = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInTop,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInTop, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至顶部事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackSwipeInTop = RxmMobileGrid.prototype.bindSwipeInTop;\n        /**\n        * 表格绑定滑动至底部事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInBottom = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInBottom,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInBottom, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至底部事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackSwipeInBottom = RxmMobileGrid.prototype.bindSwipeInBottom;\n        /**\n        * 表格绑定滑动至底部后事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInBottomAfter = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInBottomAfter,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInBottomAfter, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至顶部结束后事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInTopEndAfter = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInTopEndAfter,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInTopEndAfter, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至顶部开始事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInTopBegin = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInTopBegin,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInTopBegin, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至顶部开始事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackSwipeInTopBegin = RxmMobileGrid.prototype.bindSwipeInTopBegin;\n        /**\n        * 表格绑定滑动至底部开始事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInBottomBegin = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInBottomBegin,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInBottomBegin, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至底部开始事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackSwipeInBottomBegin = RxmMobileGrid.prototype.bindSwipeInBottomBegin;\n        /**\n        * 表格绑定滑动至顶部结束事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInTopEnd = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInTopEnd,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInTopEnd, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至顶部结束事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackSwipeInTopEnd = RxmMobileGrid.prototype.bindSwipeInTopEnd;\n        /**\n        * 表格绑定滑动至底部结束事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindSwipeInBottomEnd = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onSwipeInBottomEnd,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.swipeInBottomEnd, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定滑动至底部结束事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackSwipeInBottomEnd = RxmMobileGrid.prototype.bindSwipeInBottomEnd;\n        /**\n        * 表格行绑定tap事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindTapLineElement = function (arg, scope) {\n            if (!arg.selector) {\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr)\";\n            }\n            else if (arg.selector.indexOf(\"tr\") !== 0) {\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr) \" + arg.selector;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            //$gridWrap.on(\"append\", arg.data, $.proxy(arg.fn, the), arg.one)\n            $gridWrap.on(RxmMobileGrid.msgEnum.tapInLine, arg.selector, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格行绑定tap事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackTapLineElement = RxmMobileGrid.prototype.bindTapLineElement;\n        /**\n        * 表格行绑定长按事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindPressLineElement = function (arg, scope) {\n            if (!arg.selector) {\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr)\";\n            }\n            else if (arg.selector.index(\"tr\") !== 0) {\n                arg.selector = \"tr:not(.rxm-nodata-tip-tr) \" + arg.selector;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            //$gridWrap.press(\"tr\", arg.data, $.proxy(arg.fn, the), arg.one);\n            $gridWrap.on(RxmMobileGrid.msgEnum.pressInLine, arg.selector, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格行绑定长按事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackPressLineElement = RxmMobileGrid.prototype.bindPressLineElement;\n        /**\n        * 表格绑定删除按钮默认事件 删除选中的数据行\n        */\n        RxmMobileGrid.prototype.bindDeleteBtn = function () {\n            var the = this;\n            //获取选中行的index数据\n            var selIdx = the.getSelectedRow();\n            if (!selIdx || selIdx.length < 1) {\n                Util.alert(\"您好，请选择一条数据\");\n                return;\n            }\n            Util.confirm(\"您是否要删除选中的数据？\", function () {\n                //获取选中行数据\n                var selData = the.getSelectedData();\n                the.deleteRow(selIdx);\n                //获取删除数据请求的ajax地址\n                var delUrl = $gridWrap.find(\".rxm-default-delete\").attr(\"rxmurl\");\n                var arg = {\n                    delUrl: delUrl,\n                    delData: selData,\n                    loadComplete: function () { }\n                };\n                _doc.ajaxDeleteRow(arg);\n            }, function () {\n                return;\n            });\n        };\n        /**\n        * 表格绑定全选按钮默认事件 选中当前页面所有数据\n        */\n        RxmMobileGrid.prototype.bindSelectAllBtn = function () {\n            this.allSelect();\n        };\n        /**\n        * 表格绑定取消按钮默认事件 长按事件取消\n        */\n        RxmMobileGrid.prototype.bindCancelBtn = function () {\n            this.cancelPress();\n        };\n        /**\n        * reload函数 ajax请求成功函数重写\n        * @param {Object} args - 参数对象\n        */\n        RxmMobileGrid.prototype.formatDataAfterAjaxSuccess = function (args) {\n            _doc.formatDataAfterAjaxSuccess(args);\n        };\n        /**\n        * reload函数 ajax重写\n        * @param {Object} args - 参数对象\n        */\n        RxmMobileGrid.prototype.formatDataBeforeAjax = function (args) {\n            _doc.formatDataBeforeAjax(args);\n        };\n        /**\n        * 数据删除函数 ajax重写\n        * @param {Object} args - 参数对象\n        */\n        RxmMobileGrid.prototype.formatDataBeforeDelAjax = function (args) {\n            _doc.formatDataBeforeDelAjax(args);\n        };\n        /**\n        * 表格绑定数据追加事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindDataAppend = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onAppend,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.appendRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定数据追加事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackDataAppend = RxmMobileGrid.prototype.bindDataAppend;\n        /**\n        * 表格绑定数据插入事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.callbackDataInsert = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onInsert,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.insertRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定数据删除事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.callbackDataDelete = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onDelete,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.deleteRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定数据更新事件\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.callbackDataUpdate = function (arg, scope) {\n            if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n                arg = {\n                    fn: this._onUpdate,\n                };\n                scope = this;\n            }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.updateRow, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定reload成功事件 没有默认触发函数\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.callbackLoadSucsess = function (arg, scope) {\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.loadSucsess, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定reload完成后事件  没有默认触发函数\n        * @param {Object} arg - 参数对象\n        * @param {Object} scope - this对象\n        */\n        RxmMobileGrid.prototype.bindLoadComplete = function (arg, scope) {\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            $gridWrap.on(RxmMobileGrid.msgEnum.loadComplete, arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        /**\n        * 表格绑定reload完成后事件(兼容工作流)\n        */\n        RxmMobileGrid.prototype.callbackLoadComplete = RxmMobileGrid.prototype.bindLoadComplete;\n        RxmMobileGrid.prototype._onAppend = function (e, data) {\n            this.refresh();\n        };\n        RxmMobileGrid.prototype.attrRefreshTip = function (arg) {\n            return this._config.refreshTip = $.extend(true, this._config.refreshTip, arg);\n        };\n        /**\n         * 属性设置 表格数据url\n         * 默认为/resoft/xxx\n         */\n        RxmMobileGrid.prototype.attrRxmUrl = function (arg) {\n            if (typeof arg != \"undefined\") {\n                //rxmurl处理 判断地址首字符是否添加斜杠 \n                if (arg.substring(0, 1) != \"/\") {\n                    arg = \"/\" + arg;\n                }\n                this._config.data = {\n                    \"type\": \"URL\",\n                    \"value\": \"\",\n                };\n                this._config.data.value = getServer() + arg;\n                //包裹器添加rxmurl属性\n                $gridWrap.attr(\"rxmurl\", arg);\n            }\n            else {\n                arg = $gridWrap.attr(\"rxmurl\");\n            }\n            return arg;\n        };\n        /**\n         * 行数据是否省略多余字符 属性设置\n         * true 省略多余字符,其他字符用三个点代替,false 换行显示所有内容,默认省略多余字符\n         */\n        RxmMobileGrid.prototype.attrTextEllipsis = function (arg) {\n            if (typeof arg != \"undefined\") {\n                arg = getRadioValue(arg);\n                this._config.textEllipsis = arg;\n            }\n            else {\n                if ($gridWrap.hasClass(\"rxm-s-grid-ellipsis\")) {\n                    this._config.textEllipsis = true;\n                }\n                else {\n                    this._config.textEllipsis = false;\n                }\n            }\n            this._config.textEllipsis == true ? $gridWrap.addClass(\"rxm-s-grid-ellipsis\") : $gridWrap.removeClass(\"rxm-s-grid-ellipsis\");\n            return this._config.textEllipsis;\n        };\n        /**\n         * 属性设置 表格每页数据条目数\n         * 默认为30\n         */\n        RxmMobileGrid.prototype.attrPageSize = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.pageSize = arg;\n                //包裹器添加pagesize属性\n                $gridWrap.attr(\"pagesize\", this._config.pageSize);\n            }\n            return this._config.pageSize;\n        };\n        /**\n         * 属性设置 最大缓存页数\n         * 默认为\"30\"\n         */\n        RxmMobileGrid.prototype.attrCacheMaxLen = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.param.cacheMaxLen = arg;\n                //包裹器添加cachemaxlen属性\n                $gridWrap.attr(\"rxmcachemaxlen\", this._config.param.cacheMaxLen);\n            }\n            return this._config.param.cacheMaxLen;\n        };\n        /**\n         * 属性设置 最大显示页数\n         * 默认为\"10\"\n         */\n        RxmMobileGrid.prototype.attrViweMaxLen = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.param.viweMaxLen = arg;\n                //包裹器添加viwemaxlen属性\n                $gridWrap.attr(\"rxmviwemaxlen\", this._config.param.viweMaxLen);\n            }\n            return this._config.param.viweMaxLen;\n        };\n        /**\n         * 属性设置 表格下拉刷新数据提示语\n         * 默认为\"下拉刷新数据...\"\n         */\n        RxmMobileGrid.prototype.attrTopTipBegin = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.refreshTip.topTipBegin = arg;\n                //包裹器添加toptipbegin属性\n                $gridWrap.attr(\"rxmtoptipbegin\", this._config.refreshTip.topTipBegin);\n            }\n            return this._config.refreshTip.topTipBegin;\n        };\n        /**\n         * 属性设置 表格下拉松开刷新提示语\n         * 默认为\"松开即可刷新...\"\n         */\n        RxmMobileGrid.prototype.attrTopTipRefresh = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.refreshTip.topTipRefresh = arg;\n                //包裹器添加toptiprefresh属性\n                $gridWrap.attr(\"rxmtoptiprefresh\", this._config.refreshTip.topTipRefresh);\n            }\n            return this._config.refreshTip.topTipRefresh;\n        };\n        /**\n        * 属性设置 表格下拉加载中提示语\n        * 默认为\"加载中...\"\n        */\n        RxmMobileGrid.prototype.attrTopTipLoading = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.refreshTip.topTipLoading = arg;\n                //包裹器添加toptiploading属性\n                $gridWrap.attr(\"toptiploading\", this._config.refreshTip.topTipLoading);\n            }\n            return this._config.refreshTip.topTipLoading;\n        };\n        /**\n         * 属性设置 表格下拉刷新失败提示语\n         * 默认为\"数据刷新失败\"\n         */\n        RxmMobileGrid.prototype.attrTopTipError = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.refreshTip.topTipError = arg;\n                //包裹器添加toptiperror属性\n                $gridWrap.attr(\"rxmtoptiperror\", this._config.refreshTip.topTipError);\n            }\n            return this._config.refreshTip.topTipError;\n        };\n        /**\n         * 属性设置 表格上拉分页加载失败提示语\n         * 默认为\"数据加载失败\"\n         */\n        RxmMobileGrid.prototype.attrBottomTipError = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.refreshTip.bottomTipError = arg;\n                //包裹器添加bottomtiperror属性\n                $gridWrap.attr(\"rxmbottomtiperror\", this._config.refreshTip.bottomTipError);\n            }\n            return this._config.refreshTip.bottomTipError;\n        };\n        /**\n         * 属性设置 上拉分页没有更多提示语\n         * 默认为\"没有更多了\"\n         */\n        RxmMobileGrid.prototype.attrBottomTipEnd = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.refreshTip.bottomTipEnd = arg;\n                //包裹器添加bottomtipend属性\n                $gridWrap.attr(\"rxmbottomtipend\", this._config.refreshTip.bottomTipEnd);\n            }\n            return this._config.refreshTip.bottomTipEnd;\n        };\n        /**\n         * 属性设置 表格暂无数据提示语\n         * 默认为\"暂无数据！\"\n         */\n        RxmMobileGrid.prototype.attrNodataTip = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.refreshTip.nodataTip = arg;\n                //包裹器添加nodatatip属性\n                $gridWrap.attr(\"rxmnodatatip\", this._config.refreshTip.nodataTip);\n            }\n            return this._config.refreshTip.nodataTip;\n        };\n        /**\n        * 属性设置 数据行图标区域宽度\n        * 默认为\"55px\"\n        */\n        RxmMobileGrid.prototype.attrRowIconWidth = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.trRowParam.iconWidth = arg;\n                //包裹器添加rowiconwidth属性\n                $gridWrap.attr(\"rxmrowiconwidth\", this._config.trRowParam.iconWidth);\n            }\n            return this._config.trRowParam.iconWidth;\n        };\n        /**\n         * 属性设置 数据行数据字段单个高度\n         * 默认为\"21px\"\n         */\n        RxmMobileGrid.prototype.attrRowParHeight = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.trRowParam.parHeight = arg;\n                //包裹器添加rowparheight属性\n                $gridWrap.attr(\"rxmrowparheight\", this._config.trRowParam.parHeight);\n            }\n            return this._config.trRowParam.parHeight;\n        };\n        /**\n         * 属性设置 数据行数据显示div距离上下边距\n         * 默认为\"16px\"\n         */\n        RxmMobileGrid.prototype.attrRowDataMargin = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.trRowParam.dataMargin = arg;\n                //包裹器添加rowdatamargin属性\n                $gridWrap.attr(\"rxmrowdatamargin\", this._config.trRowParam.dataMargin);\n            }\n            return this._config.trRowParam.dataMargin;\n        };\n        /**\n         * 属性设置 数据行距离屏幕左右边距\n         * 默认为\"20px\"\n         */\n        RxmMobileGrid.prototype.attrRowTrMargin = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.trRowParam.trMargin = arg;\n                //包裹器添加rowtrmargin属性\n                $gridWrap.attr(\"rxmrowtrmargin\", this._config.trRowParam.trMargin);\n            }\n            return this._config.trRowParam.trMargin;\n        };\n        /**\n         * 属性设置 左滑菜单每个选项默认宽度\n         * 默认为\"60px\"\n         */\n        RxmMobileGrid.prototype.attrLeftBtnWidth = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.leftSlideParam.btnWidth = arg;\n                //包裹器添加leftbtnwidth属性\n                $gridWrap.attr(\"rxmleftbtnwidth\", this._config.leftSlideParam.btnWidth);\n            }\n            return this._config.leftSlideParam.btnWidth;\n        };\n        /**\n         * 属性设置 左滑出现菜单区域的最小距离值，小于此值则隐藏\n         * 默认为\"60px\"\n         */\n        RxmMobileGrid.prototype.attrLeftViewWidth = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.leftSlideParam.viewWidth = arg;\n                //包裹器添加leftviewwidth属性\n                $gridWrap.attr(\"rxmleftviewwidth\", this._config.leftSlideParam.viewWidth);\n            }\n            return this._config.leftSlideParam.viewWidth;\n        };\n        /**\n         * 属性设置 左滑菜单滑动隐藏时间设定\n         * 默认为\"200ms\"\n         */\n        RxmMobileGrid.prototype.attrLeftTrAduration = function (arg) {\n            if (typeof arg != \"undefined\") {\n                this._config.leftSlideParam.traDuration = arg;\n                //包裹器添加lefttraduration属性\n                $gridWrap.attr(\"rxmleftaduration\", this._config.leftSlideParam.traDuration);\n            }\n            return this._config.leftSlideParam.traDuration;\n        };\n        RxmMobileGrid.prototype._onInsert = function (e, data) {\n            this.refresh();\n        };\n        RxmMobileGrid.prototype._onDelete = function (e, data) {\n            this.refresh();\n        };\n        RxmMobileGrid.prototype._onUpdate = function (e, data) {\n            this.refresh();\n        };\n        /**\n        * 响应ormRereshGridView消息\n        * @param {Object} arg - 参数对象\n        */\n        RxmMobileGrid.prototype._onRefreshView = function (arg) {\n            this.refresh(arg);\n        };\n        /**\n        * 默认长按事件\n        * @param {Event} e - jquery event对象\n        * @param {Number} data - 下滑距离值\n        */\n        RxmMobileGrid.prototype._onPressLine = function (e, data) {\n            var $tr = e.currentTarget;\n            index = $tBody.find(\"tr\").index($tr);\n            var data = {\n                \"index\": index,\n                \"row\": _doc.getRowDataByViewIndexs(index),\n                \"pageInfo\": _pageInfo\n            };\n            e.data = data;\n            $(e.target).trigger(RxmMobileGrid.msgEnum.pressInLine, data);\n            return false;\n        };\n        /**\n        * 默认点击事件\n        * @param {Event} e - jquery Event对象\n        */\n        RxmMobileGrid.prototype._onTapLine = function (e, data) {\n            if (isDesktop(this._config.id) && $(e.target)[0].tagName === \"INPUT\") {\n            }\n            else {\n                var $tr = e.currentTarget;\n                index = $tBody.find(\"tr\").index($tr);\n                var data = {\n                    \"index\": index,\n                    \"row\": _doc.getRowDataByViewIndexs(index),\n                    \"pageInfo\": _pageInfo\n                };\n                e.data = data;\n                $(e.target).trigger(RxmMobileGrid.msgEnum.tapInLine, data);\n                return false;\n            }\n        };\n        /**\n        * 默认左滑事件\n        * @param {Event} e - jquery Event对象\n        */\n        RxmMobileGrid.prototype._onSlideLine = function (e, data) {\n            var $tr = e.currentTarget;\n            index = $tBody.find(\"tr\").index($tr);\n            var data = {\n                \"index\": index,\n                \"row\": _doc.getRowDataByViewIndexs(index),\n                \"pageInfo\": _pageInfo\n            };\n            e.data = data;\n            $(e.target).trigger(RxmMobileGrid.msgEnum.slideInLine, data);\n            return false;\n        };\n        /**\n        * 下滑至顶部，从开始至结束持续监听动态设置 $gridContent top值\n        * @param {Event} e - jquery Event对象\n        * @param {Number} data - 下滑距离值\n        */\n        RxmMobileGrid.prototype._onSwipeInTop = function (e, data) {\n            //1.共xx页，松手获取第x页面\n            //2.查看是否是第一页，如果是第一页，显示 ‘松手刷新数据’\n            $topRefreshbar.empty();\n            _swipeDir = \"down\";\n            $topRefreshbar.css(\"height\", \"40px\");\n            this.renderTopRefreshbar();\n            $topRefreshbar.css(\"display\", \"\");\n            //阻尼设置为0.3\n            $gridContent.css(\"top\", data * 0.3);\n            if (data * 0.3 > 25) {\n                var $loading = $('<img class = \"rxm-top-loading-arrow\" src=\"' + _upArrowImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + this._config.refreshTip.topTipRefresh + '</span>');\n                $topRefreshbar.empty().append($loading);\n            }\n        };\n        /**\n        * 上滑至底部，从开始至结束持续监听  动态设置 $gridContent top值\n        * @param {Event} e - jquery Event对象\n        * @param {Number} data - 滑动位置数据对象\n        */\n        RxmMobileGrid.prototype._onSwipeInBottom = function (e, data) {\n            //1.共xx页，松手获取第x页面\n            //2.查看是否是最后一页，如果是最后一页，显示 ‘已经是全部内容’\n            var the = this;\n            _swipeDir = \"up\";\n            //非最后一页,继续reload数据\n            if (!this._isLastPage()) {\n                //显示底部刷新栏\n                $bottomRefreshbar.css(\"display\", \"\");\n                this.reload({\n                    data: { type: this._config.data.type, value: this._config.data.value },\n                    totalPage: -2,\n                    type: \"bottom\",\n                    loadComplete: function (data) {\n                        $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottomAfter);\n                    }\n                });\n            }\n            else {\n                //最后一页数据,不调用reload方法,直接显示“没有更多了”\n                $bottomRefreshbar.css(\"display\", \"\");\n                setTimeout(function () {\n                    $bottomRefreshbar.empty();\n                    var $loading = $('<span>' + the._config.refreshTip.bottomTipEnd + '</span>');\n                    $loading.appendTo($bottomRefreshbar);\n                    $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                        $gridContent.stop(true);\n                        $bottomRefreshbar.empty();\n                        the.renderBottomRefreshbar();\n                        $bottomRefreshbar.css(\"display\", \"none\");\n                        $bottomRefreshbar.css(\"bottom\", \"45px\");\n                    });\n                }, 500);\n                $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInBottomAfter);\n            }\n        };\n        /**\n        * 上滑至底部后需要进行的操作\n        */\n        RxmMobileGrid.prototype._onSwipeInBottomAfter = function () {\n            //TODO\n        };\n        /**\n        * 下滑至顶部结束后需要进行的操作\n        */\n        RxmMobileGrid.prototype._onSwipeInTopEndAfter = function () {\n            //TODO\n        };\n        /**\n        * 下滑至顶部开始\n        */\n        RxmMobileGrid.prototype._onSwipeInTopBegin = function () {\n            //TODO\n        };\n        /**\n        * 上滑至底部开始\n        */\n        RxmMobileGrid.prototype._onSwipeInBottomBegin = function () {\n            //TODO\n        };\n        /**\n        * 下滑至顶部结束\n        * @param {Event} e - jquery Event对象\n        * @param {Number} data - 滑动位置数据对象\n        */\n        RxmMobileGrid.prototype._onSwipeInTopEnd = function (e, data) {\n            //1.当前的cacheBegin是 1时，刷新全部数据\n            //2.当前的cacheBegin 大于1时 取-1 ；\n            //3.松手后，应该显示获取动作，直到ajax返回数据\n            var the = this;\n            var prePageFlag = this._config.param.cacheBegin == 1 ? 1 : -1;\n            if (this._isFirstPage()) {\n                $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                    $gridContent.stop(true);\n                    $topRefreshbar.empty();\n                    var $loading = $('<span class=\"rxm-grid-loading\"/>&nbsp;&nbsp;&nbsp;<span>' + the._config.refreshTip.topTipLoading + '</span>');\n                    $loading.appendTo($topRefreshbar);\n                    //  $topRefreshbar.css(\"display\",\"none\");\n                    the.reload({ totalPage: 1, loadComplete: function (data) {\n                            setTimeout(function () {\n                                $gridContent.stop(true);\n                                $topRefreshbar.empty();\n                                var $loading;\n                                if (data.status === \"sucsess\") {\n                                    $loading = $('<span>' + the._config.refreshTip.topTipSuccess + '</span>');\n                                }\n                                else {\n                                    $loading = $('<span>' + the._config.refreshTip.topTipError + '</span>');\n                                }\n                                $loading.appendTo($topRefreshbar);\n                                $topRefreshbar.animate({ height: '0px' }, \"400\");\n                            }, 300);\n                            $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTopEndAfter);\n                        } });\n                });\n            }\n            else {\n                $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                    $gridContent.stop(true);\n                    $topRefreshbar.empty();\n                    var $loading = $('<img class=\"rxm-top-loading-img\" src=\"' + _loadingImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + the._config.refreshTip.topTipLoading + '</span>');\n                    $loading.appendTo($topRefreshbar);\n                    //$topRefreshbar.css(\"display\",\"none\");\n                    $gridContent.animate({ top: '0px' }, \"slow\", function () {\n                        $gridContent.stop(true);\n                        $topRefreshbar.empty();\n                        var $loading = $('<img class=\"rxm-top-loading-img\" src=\"' + _loadingImg + '\"/>&nbsp;&nbsp;&nbsp;<span>' + the._config.refreshTip.topTipBegin + '</span>');\n                        $loading.appendTo($topRefreshbar);\n                        the.reload({ totalPage: prePageFlag });\n                        $topRefreshbar.css(\"display\", \"none\");\n                    });\n                });\n                $gridWrap.trigger(RxmMobileGrid.msgEnum.swipeInTopEndAfter);\n            }\n            _startYMove = 0;\n        };\n        /**\n        * 上滑至底部结束，初始化_startYMove值为0\n        */\n        RxmMobileGrid.prototype._onSwipeInBottomEnd = function () {\n            _startYMove = 0;\n        };\n        /**\n        * 判断表格滚动条到顶(下拉刷新)\n        * @returns {Boolean} - 到顶状态值\n        */\n        RxmMobileGrid.prototype._isOnTop = function () {\n            //滚动到的当前位置\n            var scroHeight = $tableBody.scrollTop();\n            //ios的scroHeight到顶判断为负值 安卓scroHeight为0\n            if (scroHeight <= 0 && this._config.param.viewBegin == 0) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n        * 判断表格滚动条到底(上拉分页)\n        * @returns {Boolean} - 到底状态值\n        */\n        RxmMobileGrid.prototype._isOnBottom = function () {\n            //滚动距离总长(注意不是滚动条的长度)\n            var scrollHight = $tableBody[0].scrollHeight;\n            //滚动到的当前位置\n            var scrollTop = $tableBody.scrollTop();\n            //$tableBody高度\n            var tableHight = $tableBody.height();\n            if ((scrollTop + tableHight >= scrollHight)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n        * 判断分页是否为最后一页数据(上拉分页)\n        * @returns {Boolean} - 最后一页状态值\n        */\n        RxmMobileGrid.prototype._isLastPage = function () {\n            //计算总页数\n            _doc._pageInfo.pageCount = Math.ceil(_doc._pageInfo.dataCount / this._config.pageSize);\n            //计算当然数组数据条目数\n            var caheLength = Math.ceil(this._config.param.data.length / this._config.pageSize) + this._config.param.cacheBegin;\n            if (_doc._pageInfo.pageCount < caheLength) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n        * 判断内存中是否为内存中的首页数据(下拉刷新)\n        * @returns {Boolean} - 第一页状态值\n        */\n        RxmMobileGrid.prototype._isFirstPage = function () {\n            if (this._isOnTop() && this._config.param.cacheBegin == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n         * 判断是否为桌面版\n         * @param {String} wrapId - 表格包裹器ID\n         * @returns {Boolean} - 桌面版状态值\n         */\n        function isDesktop(wrapId) {\n            var $gw = $(\"#\" + wrapId);\n            if ($gw.is(\".rxm-grid-desktop\")) {\n                return true;\n            }\n            if ($gw.is(\".rxm-grid-mobile\")) {\n                return false;\n            }\n            if ($gw.is(\".rxm-grid-mobile-desktop\")) {\n                if ($(document.body).is(\".rxm-desktop\")) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n        /**\n        * 判断是否通过html属性配置生成表格\n        * @returns {Boolean} - 状态值\n        */\n        RxmMobileGrid.prototype._isHtmlAttrCfg = function () {\n            if ($gridWrap.find(\".rxm-table-head\").length != 0) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n         * 重置左滑按钮区域处于隐藏状态\n         * @param {Object} $obj - 左滑行对象\n         */\n        RxmMobileGrid.prototype._resetStatus = function ($obj) {\n            $obj.css('-webkit-transform', 'translate3d(0px, 0px, 0px)');\n        };\n        /**\n        * 设定左滑菜单过渡效果参数\n        * @param {Object} $obj - 左滑行对象\n        */\n        RxmMobileGrid.prototype._setTransition = function ($obj) {\n            var the = this;\n            $obj.css({\n                '-webkit-transition-property': '-webkit-transform',\n                '-webkit-transition-duration': the._config.leftSlideParam.traDuration + \"ms\",\n                '-webkit-transition-timing-function': the._config.leftSlideParam.traFunction\n            });\n        };\n        /**\n        * 重新渲染当前页序号\n        */\n        RxmMobileGrid.prototype._refreshIndex = function () {\n            if (grid._config.index) {\n                var baseIndex = (parseInt(grid._pageInfo.curPage) - 1) * parseInt(grid._config.pageSize);\n                grid._$gridPanel.find(\".rxm-s-grid-table .rxm-table-body tbody>tr\").each(function (index, element) {\n                    var i = baseIndex + index + 1;\n                    $(element).children(\"td:first\").attr(\"title\", i).text(i);\n                });\n            }\n        };\n        /***************************************************** 桌面版表格函数 ********************************************************/\n        /**\n        * 渲染PC端表格行数据(可重写)\n        * @param {Object} row - 行数据\n        * @param {Object} $tr - 行数据\n        * @param {Number} rowIndex - 行索引\n        * @param {Number} baseIndex - true克隆数据，undefined，false 返回 view 数据此为默认\n        * @returns {Object} $tr - 表格行对象 jquery对象\n        */\n        RxmMobileGrid.prototype.createRowInPc = function (row, $tr, rowIndex, baseIndex) {\n            var _index = rowIndex || (function guid() {\n                function s4() {\n                    return Math.floor((1 + Math.random()) * 0x10000)\n                        .toString(16)\n                        .substring(1);\n                }\n                return s4() + s4() + '' + s4() + '' + s4() + '' +\n                    s4() + '' + s4() + s4() + s4();\n            })();\n            //console.log(_index);\n            $tr.data(\"index\", _index);\n            row[\"_index\"] = _index;\n            if (!!this._config.index) {\n                $tr.append('<td align=\"center\" class=\"index\" width=\"35px\">' + (rowIndex + baseIndex) + '</td>');\n            }\n            if (typeof this._config.multi != \"undefined\") {\n                $tr.append('<td align=\"center\" class=\"fix\" width=\"24px\"><input type=\"' + (this._config.multi ? 'checkbox' : 'radio') + '\" name=\"rxm-s-gird-multi-' + (this._config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '></td>');\n            }\n            for (var j = 0, item, $td; item = this._config.layout[j++];) {\n                tdValue = row[item.field];\n                //format重写函数名称定义\n                var formatFun = \"format\" + item.field;\n                //表格config对象中layout中数据format处理\n                if (item.format) {\n                    tdValue = item.format({ \"row\": row });\n                }\n                //重写format函数\n                if ($.isFunction(this[formatFun])) {\n                    tdValue = this[formatFun](row);\n                }\n                tdValue = (tdValue || tdValue == 0) ? tdValue : \"\";\n                $td = $('<td class=\"' + this._config.id + '-' + item.field + '\"' + (item.align ? ' align=\"' + item.align + '\"' : '') + '></td>');\n                //td添加点击效果样式\n                if (item.clickstyle) {\n                    $td.addClass(\"rxm-click-style\");\n                }\n                item.click ? function () {\n                    $td.append('<a' + (item.field ? ' class=\"' + item.field + '\"' : '') + '></a>');\n                    $td.children(\"a\").append(tdValue);\n                }() : $td.append(tdValue);\n                $tr.append($td);\n            }\n            $tr.children(\"td\").each(function () {\n                $(this).attr(\"title\", $(this).text());\n            });\n            return $tr;\n        };\n        /**\n        * 桌面端 加载视图内所有属性（表格、标题栏、工具栏、搜索栏、分页栏)\n        */\n        RxmMobileGrid.prototype._renderPc = function () {\n            //行高\n            var trHeight = 40;\n            //清空表格包裹器\n            $gridWrap.addClass(\"rxm-s-grid\");\n            //添加隐藏多余字符样式\n            this._config.textEllipsis && $gridWrap.addClass(\"rxm-s-grid-ellipsis\");\n            //判断html文件中是否存在定制titlebar\n            if ($gridWrap.find(\".rxm-s-grid-titlebar\").length == 0) {\n                this._renderTitleBarPc();\n            }\n            //判断html文件中是否存在定制searchbar\n            if ($gridWrap.find(\".rxm-s-grid-searchbar\").length == 0) {\n                this._renderSearchBarPc();\n            }\n            //判断html文件中是否存在定制toolbar\n            if ($gridWrap.find(\".rxm-s-grid-toolbar\").length == 0) {\n                this._renderToolbarPc();\n            }\n            else {\n                //工具栏默认按钮事件绑定\n                this._setDefalToolbarEvent();\n            }\n            //判断html文件中是否存在定制表格\n            if ($gridWrap.find(\".rxm-s-grid-content\").length == 0) {\n                this._renderContentPc();\n            }\n            else {\n                //行事件绑定\n                this._setTableRowEvent();\n                //表头全选checkbox点击事件绑定\n                this._setTableHeadEvent();\n            }\n            //判断html文件中是否存在定制分页栏\n            if ($gridWrap.find(\".rxm-s-grid-pagination\").length == 0) {\n                this._renderPaginationPc();\n            }\n            else {\n                //设置分页数初始值\n                this._setPaginationSize();\n            }\n            //设置表格高度 如果设置表格高速则直接使用设置高度 \n            /**\n             * 设置表格rxm-table-body高度\n             * 1、如果直接配置高度则直接使用设置高度\n             * 2、如果没有设置表格高度，但是设置分页，表格高度则是分页行数的高度\n             * 3、如果没有设置高度、也没有分页，则表格根据数据条目数据自动填充\n             */\n            if (!!this._config.height) {\n                _wrapHeight = this._config.height;\n                $gridWrap.find(\".rxm-table-body\").css(\"height\", this._config.height);\n            }\n            else if (!this._config.height && this._config.pagination) {\n                _wrapHeight = this._config.pageSize * trHeight;\n                $gridWrap.find(\".rxm-table-body\").css(\"height\", _wrapHeight);\n            }\n            else {\n                $gridWrap.find(\".rxm-table-body\").css(\"height\", \"auto\");\n            }\n            //绑定刷新函数  doc中_refresh()函数激发\n            $gridWrap.on(RxmMobileGrid.msgEnum.ormRereshGridView, $.proxy(this._onRefreshView, this));\n        };\n        /**\n         * 桌面端 渲染表格\n         */\n        RxmMobileGrid.prototype._renderTablePc = function () {\n            //清空表格中行数据\n            var $table = $gridWrap.find(\".rxm-s-grid-table\").empty();\n            $table.append('<div class=\"rxm-table-head\"><table onselectstart=\"return false;\" class=\"rxm-table rxm-table-hover\"><thead></thead></table><div class=\"dragTrigger\"></div></div>');\n            //var style = 'style=\"overflow-x:hidden;overflow-y:auto;' + (this._config.height && \"height:\" + this._config.height) + '\"';\n            var $tableBody = $('<div class=\"rxm-table-body\"><table class=\"table rxm-table-hover\"><thead></thead><tbody></tbody></table></div>');\n            $table.append($tableBody);\n            var _tBodyHeight = _calTableBodyHeight();\n            $gridWrap.find(\".rxm-table-body\").css(\"height\", _tBodyHeight);\n            $gridWrap.find(\".rxm-table-body\").css(\"overflow-x\", \"hidden\");\n            $gridWrap.find(\".rxm-table-body\").css(\"overflow-y\", \"auto\");\n            this._setTableRowEvent();\n            this._renderTableHeadPc();\n        };\n        /**\n         * 桌面端 渲染表格头部\n         */\n        RxmMobileGrid.prototype._renderTableHeadPc = function () {\n            var $tableHead = $gridWrap.find(\".rxm-s-grid-table table thead\").empty();\n            var html = \"\";\n            //渲染索引表头\n            if (!!this._config.index) {\n                html += '<th align=\"center\" class=\"index noDrag\" width=\"35px\"></th>';\n            }\n            //渲染checkbox表头\n            if (typeof this._config.multi != \"undefined\") {\n                html += '<th align=\"center\" class=\"fix noDrag\" width=\"24px\">' + (this._config.multi ? '<input type=\"checkbox\">' : '') + '</th>';\n            }\n            var layout = this._config.layout;\n            for (var i = 0, item; item = layout[i++];) {\n                var width = (item.width ? \"width:\" + item.width + \";\" : \"width:\" + (100 / layout.length + '%') + \";\");\n                var align = (item.align ? \"text-align:\" + item.align + \";\" : \"\");\n                var style = 'style=\"' + align + ' ' + width + '\"';\n                html += '<th ' + style + ' class=\"' + item.field + '\" title=\"' + item.name + '\">' + item.name + (item.sort ? '<i class=\"fa fa-sort\"></i>' : '') + '</th>';\n            }\n            $tableHead.append('<tr>' + html + '</tr>');\n            $gridWrap.find(\".rxm-s-grid-table .rxm-table-body thead th\").removeAttr(\"title\").empty();\n            //表头全选checkbox点击事件绑定\n            this._setTableHeadEvent();\n        };\n        /**\n         * 桌面端 表格行事件绑定\n         */\n        RxmMobileGrid.prototype._setTableRowEvent = function () {\n            //点击事件绑定  这个需要认真斟酌\n            $tBody = $gridWrap.find(\".rxm-s-grid-table .rxm-table-body tbody\");\n            $tBody.tap(\"tr\", $.proxy(this._onTapLine, this));\n            var clkFun;\n            var aFun;\n            var aFunClass;\n            for (var i = 0; i < this._config.rowevent.length; i++) {\n                if (!!this._config.rowevent[i].click) {\n                    clkFun = this._config.rowevent[i].click;\n                }\n            }\n            for (var i = 0; i < this._config.layout.length; i++) {\n                if (!!this._config.layout[i].click) {\n                    aFun = this._config.layout[i].click;\n                    aFunClass = \".\" + this._config.layout[i].field;\n                }\n            }\n            //绑定数据列表配置的所有事件\n            if (!!clkFun) {\n                this.bindTapLineElement({ fn: clkFun }, this);\n            }\n            if (!!aFun) {\n                this.bindTapLineElement({ selector: aFunClass, fn: aFun }, this);\n            }\n        };\n        /**\n         * 桌面端 表头全选checkbox点击事件绑定\n         */\n        RxmMobileGrid.prototype._setTableHeadEvent = function () {\n            var $tHead = $gridWrap.find(\".rxm-s-grid-table .rxm-table-head thead\"), _$tBody = $gridWrap.find(\".rxm-s-grid-table .rxm-table-body tbody\");\n            $tHead.tap(\"th\", function (event) {\n                var nodeName = event.target.nodeName;\n                if (nodeName == \"INPUT\") {\n                    var checked = $(event.target).is(\":checked\");\n                    _$tBody.find(\"input\").each(function () {\n                        if (checked) {\n                            this.checked = true;\n                        }\n                        else {\n                            $(this).removeAttr(\"checked\");\n                        }\n                    });\n                }\n            });\n        };\n        /**\n         * 渲染表格标题栏\n         */\n        RxmMobileGrid.prototype._renderTitleBarPc = function () {\n            $gridWrap.append($('<div class=\"rxm-s-grid-titlebar\"></div>'));\n            $gridWrap.find(\".rxm-s-grid-titlebar\").css(\"display\", \"none\");\n            if (this._config.title) {\n                $titlebar.css(\"display\", \"\");\n                $titlebar.empty().append(this._config.title);\n            }\n        };\n        /**\n         * 渲染表格搜索栏\n         */\n        RxmMobileGrid.prototype._renderSearchBarPc = function () {\n            $gridWrap.append($('<div class=\"rxm-s-grid-searchbar\"></div>'));\n            $gridWrap.find(\".rxm-s-grid-searchbar\").css(\"display\", \"none\");\n            if (!!this._config.searchbar) {\n                $searchbar.css(\"display\", \"\");\n            }\n        };\n        /**\n         * 桌面端 渲染表格工具栏\n         */\n        RxmMobileGrid.prototype._renderToolbarPc = function () {\n            $gridWrap.append($('<div class=\"rxm-s-grid-toolbar\"></div>'));\n            $toolbar = $gridWrap.find(\".rxm-s-grid-toolbar\");\n            $gridWrap.find(\".rxm-s-grid-toolbar\").css(\"display\", \"none\");\n            //通过config对象生成工具栏\n            if (!!this._config.toolbar && this._config.toolbar.length > 0) {\n                $toolbar.css(\"display\", \"\");\n                var $ul = $(\"<ul style='width:100%'></ul>\");\n                for (var i = 0, length = this._config.toolbar.length; i < length; i++) {\n                    var item = this._config.toolbar[i];\n                    var $li = $('<li></li>');\n                    $li.tap(this, item.callback);\n                    $li.attr(\"style\", item.style);\n                    var $a = $('<a></a>');\n                    var $i = $('<i></i>');\n                    $i.attr(\"class\", item.icon);\n                    $i.appendTo($a);\n                    $a.append(item.name);\n                    $a.appendTo($li);\n                    $li.appendTo($ul);\n                }\n                $toolbar.empty().append($ul);\n                //表格工具栏默认按钮事件绑定\n                this._setDefalToolbarEvent();\n            }\n        };\n        /**\n         * 桌面端 表格工具栏默认按钮事件绑定\n         */\n        RxmMobileGrid.prototype._setDefalToolbarEvent = function () {\n            //获取所有按钮，判断是否有默认值定义\n            var liBtn = $gridWrap.find(\".rxm-s-grid-toolbar ul li\");\n            //包裹器html中默认定义三个按钮  删除、全选、取消\n            if (liBtn.length > 0) {\n                for (var i = 0; i < liBtn.length; i++) {\n                    if ($(liBtn[i]).is(\".rxm-default-delete\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindDeleteBtn, this));\n                    }\n                    if ($(liBtn[i]).is(\".rxm-default-all-select\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindSelectAllBtn, this));\n                    }\n                    if ($(liBtn[i]).is(\".rxm-default-cancel\")) {\n                        $(liBtn[i]).tap($.proxy(this.bindCancelBtn, this));\n                    }\n                }\n            }\n        };\n        /**\n         * 桌面端 渲染表格数据包裹器\n         */\n        RxmMobileGrid.prototype._renderContentPc = function () {\n            $gridWrap.append($('<div class=\"rxm-s-grid-content\"><div class=\"rxm-s-grid-table\"></div></div>'));\n            this._renderTablePc();\n        };\n        /**\n        * 桌面端 渲染表格分页区域\n        */\n        RxmMobileGrid.prototype._renderPaginationPc = function () {\n            $gridWrap.append($('<div class=\"rxm-s-grid-pagination\"></div>'));\n            $pagination = $gridWrap.find(\".rxm-s-grid-pagination\");\n            $pagination.css(\"display\", \"none\");\n            if (!this._config.pagination) {\n                $pagination.empty().hide();\n            }\n            else {\n                $pagination.empty().show();\n                //render pagination\n                $pagination.append($('<a title=\"第一页\" class=\"GoToFirst\"><i class=\"glyphicon glyphicon-step-backward\"></i></a>' +\n                    '<a title=\"上一页\" class=\"GoToPrev\"><i class=\"glyphicon glyphicon-chevron-left\"></i></a>' +\n                    '<span class=\"rxm-cur-page\"><input type=\"text\" value=\"\"/></span>' +\n                    '<a title=\"下一页\" class=\"GoToNext\"><i class=\"glyphicon glyphicon-chevron-right\"></i></a>' +\n                    '<a title=\"最后一页\" class=\"GoToEnd\"><i class=\"glyphicon glyphicon-step-forward\"></i></a>'));\n                $pagination.append($('<a title=\"刷新\" class=\"refresh\"><i class=\"glyphicon glyphicon-refresh\"></i></a>'));\n                $pagination.append($('<span class=\"rxm-data-count\">共<i class=\"rxm-num\"></i>条</span>'));\n                var $select = $('<select></select>');\n                var pageList = [5, 10, 15, 20, 50, 100];\n                for (var i = 0; i < pageList.length; i++) {\n                    $select.append('<option value=\"' + pageList[i] + '\">' + pageList[i] + '</option>');\n                }\n                $pagination.append($('<span class=\"rxm-page-size\">每页' + $select.clone().wrap('<div/>').parent().html() + '条</span>'));\n                //设置分页数初始值\n                this._setPaginationSize();\n            }\n        };\n        /**\n         * 桌面端 表格分页区域设置初始分页数\n         */\n        RxmMobileGrid.prototype._setPaginationSize = function () {\n            $pagination = $gridWrap.find(\".rxm-s-grid-pagination\");\n            $pagination.find(\".rxm-page-size select\").val(this._config.pageSize);\n        };\n        /**\n         * 桌面端 表格分页区域数据初始化\n         */\n        RxmMobileGrid.prototype._setPaginationDataEvent = function () {\n            var the = this;\n            //计算总页数\n            _doc._pageInfo.pageCount = Math.ceil(_doc._pageInfo.dataCount / this._config.pageSize);\n            //当前页码input框赋值\n            $pagination.find(\".rxm-cur-page input\").val(_pageInfo.curPage);\n            //数据总数量\n            $pagination.find(\".rxm-data-count .rxm-num\").text(_pageInfo.dataCount);\n            //设置分页 上一页、下一页图标可点击状态  \n            this._setPaginationStatus();\n            if (!$pagination.data(\"bindEvent\")) {\n                $pagination.tap(\"a\", function () {\n                    if ($(this).is(\".disable\")) {\n                        return false;\n                    }\n                    var className = this.className.split()[0];\n                    var type = className.substring(4);\n                    if (className.indexOf(\"GoTo\") > -1) {\n                        curPage = _pageInfo.curPage;\n                        pageCount = _pageInfo.pageCount;\n                        switch (type) {\n                            case 'First':\n                                _pageInfo.curPage = 1;\n                                break;\n                            case 'End':\n                                _pageInfo.curPage = pageCount;\n                                break;\n                            case 'Prev':\n                                if (curPage <= 1) {\n                                    return false;\n                                }\n                                _pageInfo.curPage = curPage - 1;\n                                break;\n                            case 'Next':\n                                if (curPage >= pageCount) {\n                                    return false;\n                                }\n                                _pageInfo.curPage = curPage + 1;\n                                break;\n                        }\n                    }\n                    else if (className != \"refresh\" && className != \"rxm-cur-page\") {\n                        _pageInfo.curPage = $(this).text() * 1;\n                    }\n                    else if (className == \"refresh\") {\n                    }\n                    if (type == \"Prev\") {\n                        the.reload({\n                            totalPage: -1\n                        });\n                    }\n                    else if (type == \"Next\") {\n                        the.reload({\n                            totalPage: -2\n                        });\n                    }\n                    else {\n                        the.reload({\n                            totalPage: _pageInfo.curPage\n                        });\n                    }\n                }).on(\"keydown\", \"input\", function (e) {\n                    if (e.which != 13) {\n                        return true;\n                    }\n                    var curPage = Math.min($(this).val() * 1, _pageInfo.pageCount);\n                    _pageInfo.curPage = curPage > 0 ? curPage : 1;\n                    //the.refresh();\n                    the.reload({\n                        totalPage: _pageInfo.curPage\n                    });\n                }).on(\"tap\", \"input\", function () {\n                    //$(this).select();\n                }).on(\"blur\", \"input\", function () {\n                    //$(this).val(_pageInfo.curPage);\n                    var curPage = Math.min($(this).val() * 1, _pageInfo.pageCount);\n                    _pageInfo.curPage = curPage > 0 ? curPage : 1;\n                    //the.refresh();\n                    the.reload({\n                        totalPage: _pageInfo.curPage\n                    });\n                }).on(\"change\", \"select\", function () {\n                    the._config.pageSize = $(this).val() * 1;\n                    _pageInfo.curPage = 1;\n                    //the.refresh();\n                    the.reload({\n                        totalPage: _pageInfo.curPage\n                    });\n                });\n                $pagination.data(\"bindEvent\", true);\n            }\n        };\n        /**\n         * 桌面端 表格分页区域数据初始化\n         */\n        RxmMobileGrid.prototype._setPaginationStatus = function () {\n            $pagination.children(\"a.disable\").removeClass(\"disable\");\n            if (_pageInfo.dataCount <= this._config.pageSize) {\n                $pagination.children(\"a\").not(\".refresh\").addClass(\"disable\");\n            }\n            if (_pageInfo.curPage == 1) {\n                $pagination.children(\"a.GoToFirst,a.GoToPrev\").addClass(\"disable\");\n            }\n            else if (_pageInfo.curPage == _pageInfo.pageCount) {\n                $pagination.children(\"a.GoToEnd,a.GoToNext\").addClass(\"disable\");\n            }\n        };\n        thisObj = new RxmMobileGrid(cfg);\n        return thisObj;\n    };\n    if (!$.fn.RxmMobileGrid) {\n        ClsFactory.clsDefine = clsdef;\n    }\n    return ClsFactory;\n});\n","define('RxmFormUploader', ['RxmFileUploader'], function (Uploader) {\n    var ClsFactory = function (config) {\n        var $uploadWrap = $(\"#\" + config.id);\n        var fileUploader;\n        var curFile;\n        //获取初始化参数\n        var _fileSource = 'startPhoto';\n        var _compress = typeof $uploadWrap.attr(\"rxmcompress\") != 'undefined' ?\n            ($uploadWrap.attr(\"rxmcompress\") === \"false\" ? false : true) : false;\n        var _chunked = typeof $uploadWrap.attr(\"rxmchunked\") != 'undefined' ?\n            ($uploadWrap.attr(\"rxmchunked\") === \"false\" ? false : true) : true;\n        var _chunkSize = typeof $uploadWrap.attr(\"rxmchunkSize\") != 'undefined' ? $uploadWrap.attr(\"rxmchunkSize\") : 1024 * 1024;\n        var _chunkRetry = typeof $uploadWrap.attr(\"rxmchunkRetry\") != 'undefined' ? $uploadWrap.attr(\"rxmchunkRetry\") : 2;\n        var _fileNumLimit = typeof $uploadWrap.attr(\"rxmfileNumLimit\") != 'undefined' ? $uploadWrap.attr(\"rxmfileNumLimit\") : 1;\n        var _fileSingleSizeLimit = typeof $uploadWrap.attr(\"rxmfileSingleSizeLimit\") != 'undefined' ? $uploadWrap.attr(\"rxmfileSingleSizeLimit\") : 100 * 1024 * 1024;\n        var _auto = typeof $uploadWrap.attr(\"rxmauto\") != 'undefined' ?\n            ($uploadWrap.attr(\"rxmauto\") === \"false\" ? false : true) : true;\n        var _title = typeof $uploadWrap.attr(\"rxmtitle\") != 'undefined' ? $uploadWrap.attr(\"rxmtitle\") : \"\";\n        var _extensions = typeof $uploadWrap.attr(\"rxmextensions\") != 'undefined' ? $uploadWrap.attr(\"rxmextensions\") : \"*\";\n        var _mimeTypes = typeof $uploadWrap.attr(\"rxmmimeTypes\") != 'undefined' ? $uploadWrap.attr(\"rxmmimeTypes\") : \"\";\n        var _url = $uploadWrap.attr(\"rxmurl\");\n        // 文件被添加到 fileUploader 中的回叫函数 \n        var onFileAdded = function (file, who) {\n            ///<summary>添加单个文件事件回叫函数</summary>\n            ///<param name=\"file\" type=\"File\">被添加的文件</param>\n            ///<param name=\"who\" type=\"String\">who is it</param>\n            var appName = $uploadWrap.find('input').val();\n            var fileIds = $uploadWrap.find('input').attr(\"rxmfileid\");\n            var fileName = !!file.fileRemarks ? file.fileRemarks : file.fileName + \".\" + file.fileExt;\n            if (appName == null || appName == \"\") {\n                $uploadWrap.find('input').val(fileName);\n                $uploadWrap.find('input').attr(\"rxmfileid\", !!file.fileId ? file.fileId : file.id);\n            }\n            else {\n                $uploadWrap.find('input').val(appName + ',' + fileName);\n                $uploadWrap.find('input').attr(\"rxmfileid\", fileIds + ',' + !!file.fileId ? file.fileId : file.id);\n            }\n            config.onChange($uploadWrap.find('input').attr(\"rxmfileid\"));\n            curFile = file;\n        };\n        //文件上传进度回叫事件\n        var onUploadProgress = function (file, percentage, total) {\n            ///<summary>上传过程中触发，携带上传进度。</summary>\n            ///<param name=\"file\" type=\"File\"\">File对象</param>\n            ///<param name=\"percentage\" type=\"Number\"\">进度百分比</param>\n            //this.updateTotalProgress();\n            // $uploadWrap.find(\".rxm-upload-progress\").show();\n            // var num = (percentage * 1).toFixed(2);\n            // $uploadWrap.find('div[class=\"rxm-upload-progress-bar\"]').css('width', percentage * 1 + '%').html(num + '%');\n            // if (percentage == 100) {\n            //     $uploadWrap.find(\".rxm-upload-progress\").delay(1000).fadeOut();\n            // }\n            $uploadWrap.find(\".circleProgress_wrapper\").show();\n            var num = (percentage * 1).toFixed(0);\n            $uploadWrap.find(\".circleProgress_wrapper\").find(\"span\").text(num);\n            if (percentage == 100) {\n                $uploadWrap.find(\".circleProgress_wrapper\").delay(1000).fadeOut();\n            }\n        };\n        //文件在上传队列中删除响应事件\n        var onFileDequeued = function (file) {\n            ///<summary>移除文件</summary>\n            ///<param name=\"file\"  type=\"File\"> 文件</param>\n            var fileName = !!file.fileRemarks ? file.fileRemarks : file.fileName + \".\" + file.fileExt;\n            var appName = $uploadWrap.find('input').val();\n            var fileIds = $uploadWrap.find('input').attr(\"rxmfileid\");\n            var fileId = !!file.fileId ? file.fileId : file.id;\n            if (appName.indexOf(',' + fileName) > -1) {\n                appName = appName.replace(',' + fileName, '');\n                fileIds = fileIds.replace(',' + fileId, '');\n            }\n            else if (appName.indexOf(fileName) > -1) {\n                appName = appName.replace(fileName, '');\n                fileIds = fileIds.replace(fileId, '');\n            }\n            $uploadWrap.find('input').val(appName);\n            $uploadWrap.find('input').attr('rxmfileid', fileIds);\n            // $(\"#appName\").attr('value',\"\");\n            config.onChange($uploadWrap.find('input').attr(\"rxmfileid\"));\n        };\n        //文件上传完成\n        var onAfterAllUploadSuccess = function (file) {\n            var fileArray = fileUploader.getChangedFiles();\n            var fileId = '';\n            for (var i = 0; i < fileArray.length; i++) {\n                if (fileId == '') {\n                    fileId = fileArray[i].id;\n                }\n                else {\n                    fileId = fileId + \",\" + fileArray[i].id;\n                }\n            }\n            $.ajax({\n                url: getServer() + _url,\n                data: { fileId: fileId },\n                success: function () {\n                    fileUploader.submitSuccess();\n                }\n            });\n        };\n        //打开文件选择框按钮回叫事件\n        var onAddBtnClk = function () {\n            ///\n            fileUploader.OpenFileDlg({\n                //文件路径\n                filePath: _fileSource,\n                //替换名称 可选（当想修改文件路径中的名字时使用）\n                /* realName: \"视频1\",*/\n                multiOption: false\n            });\n        };\n        //文件删除按钮\n        var onDelBtnClk = function () {\n            if (fileUploader.dataArr._data.length > 0) {\n                var flag = false;\n                for (var i = 0; i < fileUploader.dataArr._data.length; i++) {\n                    if (curFile.id == fileUploader.dataArr._data[i].id) {\n                        flag = true;\n                    }\n                }\n                if (!flag) {\n                    curFile = fileUploader.dataArr._data[fileUploader.dataArr._data.length - 1];\n                }\n                fileUploader.delFile(curFile);\n            }\n        };\n        var RxmFormUploader = function () {\n            fileUploader = new Uploader({\n                accept: {\n                    title: _title,\n                    //配置上传文件的类型   默认所有类型\n                    extensions: _extensions,\n                    // mimeTypes: 'application/vnd.android.package-archive'\n                    mimeTypes: _mimeTypes\n                },\n                //pick: { id: this.btnFileChoice, innerHTML: \"<h2>打开</h2>\", multiple: false },\n                compress: _compress,\n                chunked: _chunked,\n                chunkSize: _chunkSize,\n                chunkRetry: _chunkRetry,\n                fileNumLimit: _fileNumLimit,\n                fileSingleSizeLimit: _fileSingleSizeLimit,\n                auto: _auto,\n                server: Uploader.urlUpload(),\n                disableGlobalDnd: true,\n            });\n            var $btnFileChoice = $uploadWrap.find('input');\n            var $btnDelSelect = $uploadWrap.find('i.fa-trash-o'); //$(\"#delBtn\");\n            //文件被添加进来\n            fileUploader.bindFileAdded(onFileAdded);\n            //文件传递的进度\n            fileUploader.bindFileUpProgress(onUploadProgress);\n            //文件 被删除\n            fileUploader.bindFileDeleted(onFileDequeued);\n            //文件上传结束\n            //fileUploader.bindFileUpSuccess(onAfterUploadSuccess);\n            //全部文件上传结束\n            fileUploader.bindFileUpAllCompleted(onAfterAllUploadSuccess);\n            //   this.fileUploader.on(\"uploadError\", this.onUploadError, this);\n            //   this.fileUploader.on(\"uploadFinished\", this.onUploadFinished, this);\n            $btnFileChoice.tap(onAddBtnClk);\n            $btnDelSelect.tap(onDelBtnClk);\n            var $uploadBtn = $uploadWrap.find('i.fa-cloud-upload'); //$(\"#uploadBtn\");\n            $uploadBtn.tap(function () {\n                if (fileUploader.getChangedFiles().length == 0) {\n                    alert(\"请选择待上传文件\");\n                    return;\n                }\n                fileUploader.beginUpload();\n            });\n        };\n        RxmFormUploader.prototype.addFile = function (file) {\n            // var f = new FileItem();\n            fileUploader.addFile(file);\n        };\n        //     /**\n        //      * 设置上传title\n        //      * @param {String} arg \n        //      * @returns {String}  - 上传title\n        //      */\n        //     RxmFormUploader.prototype.attrTitle =function(arg){\n        //         if (typeof arg != \"undefined\") {\n        //             _title = arg;\n        //             $uploadWrap.attr(\"rxmtitle\", _title)\n        //         }\n        //         return _title\n        //     }\n        //     /**设置上传文件类型限制\n        //      * @param {String} arg \n        //      * @returns {String}  - 上传文件类型\n        //      */\n        //     RxmFormUploader.prototype.attrExtensions =function(arg){\n        //         if (typeof arg != \"undefined\") {\n        //             _extensions = arg;\n        //             $uploadWrap.attr(\"rxmextensions\", _extensions)\n        //         }\n        //         return _extensions\n        //     }\n        //     RxmFormUploader.prototype.attrMimeTypes =function(arg){\n        //         if (typeof arg != \"undefined\") {\n        //             _mimeTypes = arg;\n        //             $uploadWrap.attr(\"rxmmimeTypes\", _mimeTypes)\n        //         }\n        //         return _mimeTypes\n        //     }\n        //     /**\n        //      * 设置是否压缩\n        //      * @param {Boolean} arg - 是否压缩\n        //      * @returns {Boolean}  - 压缩状态\n        //      */\n        //     RxmFormUploader.prototype.attrCompress = function (arg) {\n        //         if (typeof arg != \"undefined\") {\n        //             _compress = getRadioValue(arg);\n        //             $uploadWrap.attr(\"rxmcompress\", _compress)\n        //         }\n        //         return _compress\n        //     }\n        //     /**\n        //      * 设置是否分片上传\n        //      * @param {Boolean} arg - 是否分片\n        //      * @returns {Boolean}  - 分片状态\n        //      */\n        //     RxmFormUploader.prototype.attrChunked = function (arg) {\n        //         if (typeof arg != \"undefined\") {\n        //             _chunked = getRadioValue(arg);\n        //             $uploadWrap.attr(\"rxmchunked\", _chunked)\n        //         }\n        //         return _chunked\n        //     }\n        //     /**\n        //      * 设置分片大小\n        //      * @param {Number} arg - 分片大小\n        //      * @returns {Number}  - 分片大小\n        //      */\n        //     RxmFormUploader.prototype.attrChunkSize = function (arg) {\n        //         if (typeof arg != \"undefined\") {\n        //             _chunkSize = arg;\n        //             $uploadWrap.attr(\"rxmchunkSize\", _chunkSize)\n        //         }\n        //         return _chunkSize\n        //     }\n        //     /**\n        //      * 分片重传次数\n        //      * @param {Number} arg - 分片重传次数\n        //      * @returns {Number}  - 分片重传次数\n        //      */\n        //     RxmFormUploader.prototype.attrChunkRetry = function (arg) {\n        //         if (typeof arg != \"undefined\") {\n        //             _chunkRetry = arg;\n        //             $uploadWrap.attr(\"rxmchunkRetry\", _chunkRetry)\n        //         }\n        //         return _chunkRetry\n        //     }\n        //     /**\n        //      * 文件数量限制\n        //      * @param {Number} arg - 文件数量限制\n        //      * @returns {Number}  - 文件数量限制\n        //      */\n        //     RxmFormUploader.prototype.attrFileNumLimit = function (arg) {\n        //         if (typeof arg != \"undefined\") {\n        //             _fileNumLimit = arg;\n        //             $uploadWrap.attr(\"rxmfileNumLimit\", _fileNumLimit)\n        //         }\n        //         return _fileNumLimit\n        //     }\n        //     /**\n        //      * 单文件大小限制\n        //      * @param {Number} arg - 单文件大小限制\n        //      * @returns {Number}  - 单文件大小限制\n        //      */\n        //     RxmFormUploader.prototype.attrFileSingleSizeLimit = function (arg) {\n        //         if (typeof arg != \"undefined\") {\n        //             _fileSingleSizeLimit = arg;\n        //             $uploadWrap.attr(\"rxmfileSingleSizeLimit\", _fileSingleSizeLimit)\n        //         }\n        //         return  _fileSingleSizeLimit\n        //     }\n        //     /**\n        //     * 自动上传\n        //     * @param {Boolean} arg - 自动上传\n        //     * @returns {Boolean}  - 自动上传\n        //     */\n        //     RxmFormUploader.prototype.attrAuto = function (arg) {\n        //         if (typeof arg != \"undefined\") {\n        //             _auto = getRadioValue(arg);\n        //             $uploadWrap.attr(\"rxmauto\", _auto)\n        //         }\n        //         return _auto\n        //     }\n        //      /**\n        //     * 上传文件来源\n        //     * @param {String} arg - 文件来源\n        //     * @returns {String}  - 文件来源\n        //     */\n        //    RxmFormUploader.prototype.attrFileSource = function (arg) {\n        //     if (typeof arg != \"undefined\") {\n        //         _fileSource = arg\n        //         $uploadWrap.attr(\"rxmfilesource\", _fileSource)\n        //     }\n        //     return _fileSource\n        // }\n        return new RxmFormUploader(config);\n    };\n    return ClsFactory;\n});\n","//控件名称：clsInputOrmAudio \n//控件说明：音频文件上传\n//创建时间：2017-08-09 15:08:54\n//创建人：王勇\ndefine(\"RxmInputOrmAudio\", [], function () {\n    var cls = function (config) {\n        this._cls(config);\n    };\n    cls.prototype._cls = function (config) {\n        var dcfg = {};\n        var ucfg = cssOrms.default.clsInputOrmAudio || {};\n        ucfg = ucfg.cfg;\n        this._cfg = $.extend(true, {}, dcfg, ucfg, config);\n        if (typeof this._cfg.id != \"undefined\") {\n            this._cfg.$cls = $(\"#\" + this._cfg.id);\n        }\n    };\n    ///<summary>clsInputOrmAudio控件全局化声明</summary>\n    cssOrm.declare(\"clsInputOrmAudio\", cls);\n    return cls;\n});\n","define(\"RxmInputOrmFile\", [], function () {\n    var cls = function (config) {\n        /// <field   name=\"_cfg\"  value=\"cls._cfgDefault\">单文件录入</field>\n        this._cls(config);\n    };\n    cls.rxmtype = 'rxmdk-input-orm-file';\n    // 定义cfg 默认\n    cls._cfgDefault = {\n        accept: '*'\n    };\n    cls.prototype._cls = function (config) {\n        /// <param  name=\"config\"  value=\"cls._cfgDefault\"></param>\n        var dcfg = cls._cfgDefault;\n        var ucfg = cssOrm.default.clsInputOrmFile || {};\n        ucfg = ucfg.cfg;\n        this._cfg = $.extend(true, {}, dcfg, ucfg, config);\n        if (typeof this._cfg.id !== 'undefined') {\n            this._cfg.$cls = $('#' + this._cfg.id);\n        }\n        ;\n    };\n    cls.prototype.attrAccept = function (value) {\n        /// <summary>设置可打开的文件扩展名</summary>\n        /// <param  name=\"value\" value=\"event\"></param>\n        (!!value) && (value !== '') && ((this._cfg.$cls.attr('accept', value)));\n        (!!value) && (value === '') && ((this._cfg.$cls.removeAttr('accept')));\n        return this._cfg.$cls.attr('accept');\n    };\n    cls.prototype.attrId = function (value) {\n        /// <summary>id</summary>\n        /// <param  name=\"value\" value=\"event\"></param>\n        (!!value) && (value !== '') && ((this._cfg.$cls.attr('id', value)));\n        (!!value) && (value === '') && ((this._cfg.$cls.removeAttr('id')));\n        return this._cfg.$cls.attr('id');\n    };\n    cls.prototype.attrAccept = function (value) {\n        /// <summary>设置可打开的文件扩展名</summary>\n        /// <param  name=\"value\" value=\"event\"></param>\n        (!!value) && (value !== '') && ((this._cfg.$cls.attr('ormaccept', value)));\n        (!!value) && (value == '') && ((this._cfg.$cls.removeAttr('ormaccept')));\n        var r;\n        !(r = this._cfg.$cls.attr('ormaccept')) && (r = this._cfg.accept);\n        return r;\n    };\n    // clsInputOrmFile控件事件枚举对象\n    cls.msgEnum = {\n        /// <summary>上传进度</summary>\n        uploadProgress: 'uploadProgress',\n        /// <summary>删除上传文件</summary>\n        fileDequeued: 'fileDequeued',\n        /// <summary>添加文件</summary>\n        fileQueued: 'fileQueued',\n        /// <summary>文件上传结束</summary>\n        uploadFinished: 'uploadFinished',\n        /// <summary>单文件上传开始</summary>\n        uploadStart: 'uploadStart',\n        /// <summary>文件上传成功</summary>\n        uploadSuccess: 'uploadSuccess'\n    };\n    cls.prototype.bindUploadProgress = function (arg, scope) {\n        /// <summary>上传进度事件绑定</summary>\n        /// <param  name=\"arg\"  type=\" vo.orm.cssOrm.on\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadProgress\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadProgress, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadProgress = function (e, data) {\n        /// <summary>上传进度激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindFileDequeued = function (arg, scope) {\n        /// <summary>删除上传文件事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onFileDequeued\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.FileDequeued, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onFileDequeued = function (e, data) {\n        /// <summary>删除上传文件激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindFileQueued = function (arg, scope) {\n        /// <summary>添加文件事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onFileQueued\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.FileQueued, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onFileQueued = function (e, data) {\n        /// <summary>添加文件激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindUploadFinished = function (arg, scope) {\n        /// <summary>文件上传结束事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadFinished\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadFinished, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadFinished = function (e, data) {\n        /// <summary>文件上传结束激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindUploadStart = function (arg, scope) {\n        /// <summary>单文件上传开始事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadStart\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadStart, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadStart = function (e, data) {\n        /// <summary>单文件上传开始激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindUploadSuccess = function (arg, scope) {\n        /// <summary>文件上传成功事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadSuccess\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadSuccess, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadSuccess = function (e, data) {\n        /// <summary>文件上传成功激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.init = function () {\n    };\n    return cls;\n});\n","// 控件名称：clsInputOrmFiles\n// 控件说明：多文件上传\n// 创建时间：2017-08-15 16:56:31\n// 创建人：韩春晓\ndefine(\"RxmInputOrmFiles\", [], function () {\n    var cls = function (config) {\n        /// <field   name=\"_cfg\"  value=\"cls._cfgDefault\">多文件上传</field>\n        this._cls(config);\n    };\n    // 定义cfg 默认\n    cls._cfgDefault = {};\n    cls.prototype._cls = function (config) {\n        /// <param  name=\"config\"  value=\"cls._cfgDefault\"></param>\n        var dcfg = cls._cfgDefault;\n        var ucfg = cssOrm.default.clsInputOrmFiles || {};\n        ucfg = ucfg.cfg;\n        this._cfg = $.extend(true, {}, dcfg, ucfg, config);\n        if (typeof this._cfg.id !== 'undefined') {\n            this._cfg.$cls = $('#' + this._cfg.id);\n        }\n    };\n    // clsInputOrmFiles控件事件枚举对象\n    cls.msgEnum = {\n        /// <summary>文件上传成功</summary>\n        uploadSuccess: 'uploadSuccess',\n        /// <summary>删除上传文件</summary>\n        fileDequeued: 'fileDequeued',\n        /// <summary>文件上传结束</summary>\n        uploadFinished: 'uploadFinished',\n        /// <summary>单文件上传开始</summary>\n        uploadStart: 'uploadStart',\n        /// <summary>添加多文件</summary>\n        fileQueued: 'fileQueued',\n        /// <summary>文件上传进度</summary>\n        uploadProgress: 'uploadProgress'\n    };\n    cls.prototype.bindUploadSuccess = function (arg, scope) {\n        /// <summary>文件上传成功事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadSuccess\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadSuccess, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadSuccess = function (e, data) {\n        /// <summary>文件上传成功激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindFileDequeued = function (arg, scope) {\n        /// <summary>删除上传文件事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onFileDequeued\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.FileDequeued, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onFileDequeued = function (e, data) {\n        /// <summary>删除上传文件激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindUploadFinished = function (arg, scope) {\n        /// <summary>文件上传结束事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadFinished\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadFinished, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadFinished = function (e, data) {\n        /// <summary>文件上传结束激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindUploadStart = function (arg, scope) {\n        /// <summary>单文件上传开始事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadStart\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadStart, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadStart = function (e, data) {\n        /// <summary>单文件上传开始激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindFileQueued = function (arg, scope) {\n        /// <summary>添加多文件事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onFileQueued\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.FileQueued, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onFileQueued = function (e, data) {\n        /// <summary>添加多文件激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    cls.prototype.bindUploadProgress = function (arg, scope) {\n        /// <summary>文件上传进度事件绑定</summary>\n        /// <param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n        if (typeof arg === 'boolean' || typeof arg === 'undefined') {\n            arg = {\n                fn: this._onUploadProgress\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this._cfg.$cls.on(cls.msgEnum.UploadProgress, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    cls.prototype._onUploadProgress = function (e, data) {\n        /// <summary>文件上传进度激发函数</summary>\n        /// <param  name=\"e\"  value=\"event\"></param>\n        /// <param  name=\"data\"   type=\"Object\"></param>\n        /// TODO\n    };\n    /// <summary>clsInputOrmFiles控件全局化声明</summary>\n    cssOrm.declare('clsInputOrmFiles', cls);\n    return cls;\n});\n","// 控件名称：clsInputOrmImage\n// 控件说明：图片文档上传\n// 创建时间：2017-12-19 09:49:36\n// 创建人：管理员\ndefine(\"RxmInputOrmImage\", [], function () {\n    var cls = function (config) {\n        /// <field   name=\"_cfg\"  type=\"vo.orm.图片文档上传.config\">图片文档上传</field>\n        this._cls(config);\n    };\n    // 定义cfg 默认\n    cls._cfgDefault = {};\n    cls.prototype._cls = function (config) {\n        /// <param  name=\"config\"  type=\"vo.orm.图片文档上传.config\"></param>\n        var dcfg = cls._cfgDefault;\n        var ucfg = cssOrm.default.clsInputOrmImage || {};\n        ucfg = ucfg.cfg;\n        this._cfg = $.extend(true, {}, dcfg, ucfg, config);\n        if (typeof this._cfg.id !== 'undefined') {\n            this._cfg.$cls = $('#' + this._cfg.id);\n        }\n    };\n    cls.prototype.init = function () {\n    };\n    /// <summary>clsInputOrmImage控件全局化声明</summary>\n    cssOrm.declare('clsInputOrmImage', cls);\n    return cls;\n});\n","define(\"RxmArrEvt\", ['RxmEventBase', 'RxmInherit', 'jquery'], function (eventBase, declare) {\n    var cls = declare([eventBase], {\n        constructor: function (option) {\n            this.editType = option.editType;\n            this._data = option.data || {};\n        }\n    });\n    cls.prototype.onAdded = function (callback, thisObj) {\n        return this.on(cls.enumEvt.added, callback, thisObj);\n    };\n    cls.prototype.onAdding = function (callback, thisObj) {\n        return this.on(cls.enumEvt.adding, callback, thisObj);\n    };\n    cls.prototype.onModified = function (callback, thisObj) {\n        ///<summary>添加数据被修改事件</summary>\n        ///<param name=\"thisObj\" value=\"Object\">事件函数this 上下文<br/>不赋值时，上下文为 dataObject本身 </param>\n        ///<param name=\"callback\" type=\"Function\">事件叫回函数<br/>形如： function(field){}<br/> </param>\n        ///<returns type=\"Boolean\"></returns>\n        return this.on(cls.enumEvt.modifed, callback, thisObj);\n    };\n    cls.prototype.onModifing = function (callback, thisObj) {\n        return this.on(cls.enumEvt.modifing, callback, thisObj);\n    };\n    cls.prototype.onDeleted = function (callback, thisObj) {\n        ///<summary>添加数据被删除事件</summary>\n        ///<param name=\"thisObj\" value=\"Object\">事件函数this 上下文<br/>不赋值时，上下文为 dataObject本身 </param>\n        ///<param name=\"callback\" type=\"Function\">事件叫回函数<br/>形如： function(field){}<br/> </param>\n        return this.on(cls.enumEvt.deleted, callback, thisObj);\n    };\n    cls.prototype.onDeleting = function (callback, thisObj) {\n        ///<summary>添加数据即将删除事件</summary>\n        ///<param name=\"thisObj\" value=\"Object\">事件函数this 上下文<br/>不赋值时，上下文为 dataObject本身 </param>\n        ///<param name=\"callback\" type=\"Function\">事件叫回函数<br/>形如： function(field){}<br/> </param>\n        ///<returns type=\"Boolean\"></returns>\n        return this.on(cls.enumEvt.deleteing, callback, thisObj);\n    };\n    cls.enumEvt = {\n        adding: 'adding',\n        added: 'added',\n        deleteing: 'deleteing',\n        deleted: 'deleted',\n        modifing: 'modifing',\n        modifed: 'modifed'\n    };\n    cls.prototype.add = function (obj) {\n        ///<summay></summary>\n        ///<param></param>       \n        return this;\n    };\n    cls.prototype.modify = function (obj) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.insert = function (obj, preObj) {\n        ///<summay> </summary>\n        ///<param>  </param>\n        return this;\n    };\n    cls.prototype.remove = function (obj) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.getDataChanged = function () {\n        return this;\n    };\n    cls.prototype.getRawData = function () {\n        return this;\n    };\n    cls.prototype.getData = function () {\n        return this;\n    };\n    return cls;\n});\n","define(\"RxmDataBase\", [], function () {\n    ///<summary><summary>\n    var cls = function () { };\n    cls.prototype.add = function (newDataObj) {\n        ///<summay></summary>\n        ///<param></param>       \n        return this;\n    };\n    cls.prototype.modify = function (newDataObj) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.replace = function (newDataObj) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.remove = function (newDataObj) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.getDataChanged = function () {\n        return this;\n    };\n    cls.prototype.getRawData = function () {\n        return this;\n    };\n    cls.prototype.getData = function () {\n        return this;\n    };\n    return cls;\n});\n","define(\"RxmDataCollectionBase\", ['RxmDataEvt', 'RxmInherit', 'RxmDataBase', 'RxmDataObjectBase', 'RxmLang'], function (Evt, declare, dataBase, dataObjectBase, lang) {\n    ///<summary><summary>\n    ///<param name=\"Evt\" value=\"PdwebDataEvent\"> 事件类</param>\n    ///<param name=\"declare\" value=\"PdwebDeclare\"> 事件类</param>\n    ///<parm  name=\"dataBase\"  \n    var e = $.extend({}, Evt.enumEvt);\n    var cls = cssOrm.inherit([Evt, dataBase], {\n        constructor: function () {\n            ///<field name=\"_data\" type=\"Array\" elementType=\"PdwebDataObjectBase\"> </field>\n            this._data = [];\n            this._dataDeleted = [];\n            this.opTypeName = \"opType\";\n            this.orderNumName = \"\";\n            this.idName = \"id\";\n            this.itemClass = dataObjectBase;\n        }\n    });\n    cls.prototype._newDataToDataObject = function (newObj) {\n        if ($.isArray(newObj)) {\n            var d = [];\n            for (var i = 0; i < newObj.length; i++) {\n                var v = newObj[i];\n                if (v instanceof this.itemClass) {\n                    d.push(v);\n                }\n                else {\n                    var vv = new this.itemClass(v);\n                    d.push(vv);\n                }\n            }\n            ;\n            return d;\n        }\n        else {\n            var r;\n            if (!((newObj instanceof this.itemClass) || (newObj instanceof dataBase.prototype.constructor))) {\n                r = new this.itemClass(newObj);\n            }\n            else\n                r = newObj;\n            return r;\n        }\n    };\n    cls.prototype.pop = function () {\n        ///<returns  type=\"PdwebDataObjectBase\"></returns>\n        var r = this._data[this._data.length - 1];\n        if (this.trigger(Evt.enumEvt.deleteing, r)) {\n            this._data.pop();\n            if (r.opType && r.opType != \"new\") {\n                this._dataDeleted.push(r);\n            }\n            this.trigger(Evt.enumEvt.deleted, r);\n        }\n    };\n    cls.prototype.addData = function (data, senderSelf, ipos) {\n        var d = this._newDataToDataObject(data);\n        if (this.trigger(Evt.enumEvt.adding, data, senderSelf)) {\n            if ($.isArray(data)) {\n                //data.foreach(function (v, index) {\n                //    temp = new dataBase(v);\n                //    d.push(temp);\n                //})\n                if (ipos) {\n                    d.forEach(function (v, index) {\n                        this._data.splice(ipos + index, 0, v);\n                    });\n                }\n                else {\n                    this._data = this._data.concat(d);\n                }\n            }\n            else {\n                if (ipos) {\n                    this._data.splice(ipos, 0, d);\n                }\n                else {\n                    this._data.push(d);\n                }\n            }\n            this.trigger(Evt.enumEvt.added, d, senderSelf);\n        }\n        return d;\n    };\n    cls.prototype._delRowByID = function (idOrObj) {\n        var p = this._getIndexById(idOrObj);\n        if (!(p < 0)) {\n            this.delRowByIndex(p);\n        }\n    };\n    cls.prototype._getIndexById = function (idOrRowObj) {\n        ///<summary>根据id  或者 gridRow对象本身获取行所在顺序，从零开始</summary>\n        ///<param  name=\"idOrRowObj\"  type=\"Object\">id 或者行对象数据</param>\n        var ID;\n        if (lang.isString(idOrRowObj)) {\n            ID = idOrRowObj;\n        }\n        else {\n            ID = idOrRowObj[this.idName];\n        }\n        var index = -1;\n        for (var i = 0; i < this._data.length; i++) {\n            if (this._data[i][this.idName] == ID) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    };\n    cls.prototype._getMaxOrderNum = function (idOrRowObj) {\n        var ret = -1;\n        var b = false;\n        for (var i = 0; i < this._config.layout.length; i++) {\n            var item = this._config.layout[i];\n            if (item.field == this.orderNumName) {\n                b = true;\n                break;\n            }\n        }\n        ;\n        if (b) {\n            var d = this._data;\n            for (var i = 0; i < d.length; i++) {\n                var item = d[i][this.orderNumName];\n                if (lang.isString(item)) {\n                    item = parseInt(item);\n                }\n                if (item > ret) {\n                    ret = item;\n                }\n            }\n        }\n        return ret;\n    };\n    cls.prototype._getNewOrderNum = function () {\n        var order = this._getMaxOrderNum();\n        return order > 0 ? (order + this.orderInterval) : 1;\n    };\n    cls.prototype.delRowByIndex = function (rowOrderPosition) {\n        ///<summary>删除一行</summary>\n        ///<param  name=\"rowOrderNum\" type=\"Interger\">行位置</param>\n        var d = this._data[rowOrderPosition];\n        this._data.splice(rowOrderPosition, 1);\n        if (d && d[this.opTypeName] != \"new\") {\n            d[this.opTypeName] = \"deleted\";\n            this._dataDeleted.push(d);\n        }\n        var ds = this._data;\n        if (this.orderNumName.length > 0) {\n            var ditem = d[this.orderNumName];\n            ditem = ditem && lang.isString(ditem) ? (parseInt(ditem)) : ditem;\n            for (var i = 0; i < ds.length; i++) {\n                var item = ds[i][this.orderNumName];\n                item = item && lang.isString(item) ? (parseInt(item)) : item;\n                if (item > ditem) {\n                    item = item - this.orderInterval;\n                    ds[i][this.orderNumName] = item;\n                    var tmp = {};\n                    tmp[this.orderNumName] = item;\n                    ds[i].modifyData(tmp, this);\n                }\n            }\n        }\n        // this.refresh();\n        return d;\n    };\n    cls.prototype.down = function (row) {\n        if (this.orderNumName.length == 0)\n            return;\n        var ipos = this._getIndexById(rowObjOrid);\n        if (ipos >= 0 && ipos != this._data.length - 1) {\n            var d = this._data[ipos];\n            var ord = this._data[ipos + 1][this.orderNumName];\n            this._data[ipos + 1][this.orderNumName] = d[this.orderNumName];\n            d[this.orderNumName] = ord;\n            this._data[ipos] = this._data[ipos + 1];\n            this._data[ipos + 1] = d;\n            this._setRowModified(this._data[ipos]);\n            this._setRowModified(this._data[ipos + 1]);\n            this.refresh();\n        }\n    };\n    cls.prototype.modifyData = function (dOrdArr, senderSelf) {\n        ///<summary>修改一行</summary>\n        ///<param  name=\"dOrdArr\" type=\"Array\" elemntType=\"Object\">修改的数据</param>\n        ///<param  name=\"senderSelf\" type=\"Object\">修改者</param>\n        if (this.trigger(cls.enumEvt.modifing, senderSelf)) {\n            if ($.isArray(dOrdArr)) {\n                for (var it in dOrdArr) {\n                    this._modifyData(it, senderSelf);\n                }\n            }\n            else {\n                this._modifyData(dOrdArr, senderSelf);\n            }\n        }\n        ;\n        this.trigger(cls.enumEvt.modifed, senderSelf);\n        return this;\n    };\n    cls.prototype._modifyData = function (v, senderSelf) {\n        if (!v)\n            return false;\n        var id = v[this.idName];\n        if (id) {\n            var it = this.getDataById(id);\n            it.modifyData(v, senderSelf);\n        }\n        else {\n            this._data.forEach(function (vv) {\n                vv.modifyData(v, senderSelf);\n            });\n        }\n        return true;\n    };\n    cls.prototype.getDataChanged = function (opType) {\n        ///<summary>得到转变的数据，包括 添加，删除，修改</summary>\n        ///<param name=\"opType\",type=\"String\">数据类型</param>\n        var r = [];\n        for (var j = 0; j < this._dataDeleted.length; j++) {\n            r.push(this._dataDeleted[j].getDataChanged());\n        }\n        if (typeof opType === \"undefined\") {\n            var d = this._data;\n            for (var i = 0; i < d.length; i++) {\n                var dd = d[i];\n                if (typeof dd[this.opTypeName] != \"undefined\" && dd[this.opTypeName] != \"\") {\n                    r.push(dd.getDataChanged());\n                }\n            }\n        }\n        return r;\n    };\n    cls.prototype.sort = function (fieldOrCofig, sortType, fun) {\n    };\n    cls.prototype.up = function (rowObjOrid) {\n        if (this.orderNumName.length == 0)\n            return;\n        var ipos = this._getIndexById(rowObjOrid);\n        if (ipos > 0) {\n            var d = this._data[ipos];\n            var ord = this._data[ipos - 1][this.orderNumName];\n            this._data[ipos - 1][this.orderNumName] = d[this.orderNumName];\n            d[this.orderNumName] = ord;\n            this._data[ipos] = this._data[ipos - 1];\n            this._data[ipos - 1] = d;\n            this._setRowModified(this._data[ipos]);\n            this._setRowModified(this._data[ipos - 1]);\n            this.refresh();\n        }\n    };\n    cls.prototype._setRowModified = function (row) {\n        if (!row[this.op] || row[this.opTypeName] && row[this.opTypeName] != \"new\") {\n            row[this.opTypeName] = \"modified\";\n        }\n    };\n    cls.prototype.clear = function () {\n        this._data = [];\n        this._dataDeleted = [];\n    };\n    cls.prototype.getData = function () { return this._data; };\n    //cls.prototype.getRawData = function () {\n    //    var ret;var temp;\n    //    this._data.forEach(function (v) {\n    //        ret = ret || [];\n    //        if ((temp=v.getRawData()))\n    //            ret.push(temp);\n    //    })\n    //    return ret;\n    //};\n    cls.prototype.replaceData = function (newDataObj, senderSelf) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.removeData = function (newDataObj, senderSelf) {\n        ///<summay></summary>\n        ///<param></param>\n        var id;\n        var index = -1;\n        var b = false;\n        var delData;\n        if (lang.isArray(newDataObj)) {\n            delData = newDataObj;\n        }\n        else {\n            index = this._getIndexById(newDataObj);\n            if (index >= 0) {\n                delData = this._data[index];\n            }\n        }\n        if (delData && this.trigger(cls.enumEvt.deleteing, delData, senderSelf)) {\n            if (lang.isArray(newDataObj)) {\n                for (var it in this._data) {\n                    index = this._getIndexById(it);\n                    if (index >= 0) {\n                        this.delRowByIndex(index);\n                    }\n                }\n            }\n            else {\n                this.delRowByIndex(index);\n            }\n            this.trigger(cls.enumEvt.deleted, delData, senderSelf);\n        }\n        ;\n        return this;\n    };\n    cls.prototype._removedata = function () {\n    };\n    cls.prototype.submitSuccess = function (data) {\n        this._dataDeleted = [];\n        if (data) {\n            this.modifyData(data);\n        }\n        else {\n            for (var i = 0; i < this._data.length; i++) {\n                var it = this._data[i];\n                it.submitSuccess();\n            }\n        }\n    };\n    cls.enumEvt = $.extend({}, Evt.enumEvt);\n    return cls;\n});\n","define(\"RxmDataEvt\", ['RxmEventBase', 'RxmInherit'], function (eventBase, declare) {\n    ///<param   name=\"eventBase\"  value=\"PdwebEventBase\"></param>\n    var cls = cssOrm.inherit([eventBase], {\n    //        constructor:function(option)\n    //            {\n    //                this.editType = option.editType;\n    //                this._data = option.data || {};\n    //            }\n    });\n    cls.prototype.onAdded = function (callback, thisObj) {\n        return this.on(cls.enumEvt.added, callback, thisObj);\n    };\n    cls.prototype.onAdding = function (callback, thisObj) {\n        return this.on(cls.enumEvt.adding, callback, thisObj);\n    };\n    cls.prototype.onModified = function (callback, thisObj) {\n        ///<summary>添加数据被修改事件</summary>\n        ///<param name=\"thisObj\" value=\"Object\">事件函数this 上下文<br/>不赋值时，上下文为 dataObject本身 </param>\n        ///<param name=\"callback\" type=\"Function\">事件叫回函数<br/>形如： function(field){}<br/> </param>\n        ///<returns type=\"Boolean\"></returns>\n        return this.on(cls.enumEvt.modifed, callback, thisObj);\n    };\n    cls.prototype.onModifing = function (callback, thisObj) {\n        return this.on(cls.enumEvt.modifing, callback, thisObj);\n    };\n    cls.prototype.onDeleted = function (callback, thisObj) {\n        ///<summary>添加数据被删除事件</summary>\n        ///<param name=\"thisObj\" value=\"Object\">事件函数this 上下文<br/>不赋值时，上下文为 dataObject本身 </param>\n        ///<param name=\"callback\" type=\"Function\">事件叫回函数<br/>形如： function(field){}<br/> </param>\n        return this.on(cls.enumEvt.deleted, callback, thisObj);\n    };\n    cls.prototype.onDeleting = function (callback, thisObj) {\n        ///<summary>添加数据即将删除事件</summary>\n        ///<param name=\"thisObj\" value=\"Object\">事件函数this 上下文<br/>不赋值时，上下文为 dataObject本身 </param>\n        ///<param name=\"callback\" type=\"Function\">事件叫回函数<br/>形如： function(field){}<br/> </param>\n        ///<returns type=\"Boolean\"></returns>\n        return this.on(cls.enumEvt.deleteing, callback, thisObj);\n    };\n    cls.enumEvt = {\n        adding: 'adding',\n        added: 'added',\n        deleteing: 'deleteing',\n        deleted: 'deleted',\n        modifing: 'modifing',\n        modifed: 'modifed'\n    };\n    cls.prototype.add = function (obj) {\n        ///<summay></summary>\n        ///<param></param>       \n        return this;\n    };\n    cls.prototype.modify = function (obj) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.insert = function (obj, preObj) {\n        ///<summay> </summary>\n        ///<param>  </param>\n        return this;\n    };\n    cls.prototype.remove = function (obj) {\n        ///<summay></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype.getDataChanged = function () {\n        return this;\n    };\n    cls.prototype.getRawData = function () {\n        return this;\n    };\n    cls.prototype.getData = function () {\n        return this;\n    };\n    return cls;\n});\n","define(\"RxmDataList\", ['RxmInherit', 'RxmDataCollectionBase', 'RxmDataObjectBase'], function (declare, dataCollectionBase, dataObjectBase) {\n    ///<param name=\"declare\" value=\"PdwebDeclare\"> </param>\n    ///<param name=\"dataCollectionBase\" value=\"PdwebDataCollectionBase\"> </param>\n    var lt = declare([dataCollectionBase], {\n        constructor: function () {\n            ///\n        }\n    });\n    lt.prototype.f = function () {\n    };\n    return lt;\n});\n","define(\"RxmDataObjectBase\", ['RxmDataEvt', 'RxmDataBase', 'RxmInherit'], function (Evt, dataBase, declare) {\n    ///<summary><summary>\n    ///<param name=\"Evt\" value=\"PdwebDataEvent\"> 事件类</param>\n    ///<param name=\"declare\" value=\"PdwebDeclare\"> 事件类</param>\n    ///<returns value=\"PdwebDataObject\"><returns>\n    var cls = declare([Evt, dataBase], {\n        constructor: function (initValue) {\n            this._constructor(initValue);\n        }\n    });\n    cls.prototype._constructor = function (initValue) {\n        this.opType = \"\";\n        this.orderNum = 0;\n        if (initValue) {\n            $.extend(this, initValue);\n        }\n    };\n    cls.prototype.setItemValue = function (itemName, value) {\n        var t = {};\n        t[itemName] = value;\n        return this.modifyData(t);\n    };\n    cls.prototype.addData = function (newDataObj, senderSelf) {\n        ///<summary>添加数据</summary>\n        ///<param name=\"newDataObj\" type=\"Object\">新数据对象</param>\n        ///<param name=\"senderSelf\" type=\"Object\">数据修改者</param>\n        if (this.trigger(Evt.enumEvt.adding, newDataObj, senderSelf))\n            ;\n        {\n            $.extend(this, this._plainData(newDataObj));\n        }\n        this.trigger(Evt.enumEvt.added, this, senderSelf);\n        return this;\n    };\n    cls.prototype.modifyData = function (newDataObj, senderSelf) {\n        ///<summary></summary>\n        ///<param name=\"newDataObj\" type=\"Object\">修改数据对象</param>\n        ///<param name=\"senderSelf\" type=\"Object\">数据修改者</param>\n        if (this.trigger(Evt.enumEvt.modifing, newDataObj, senderSelf))\n            ;\n        {\n            $.extend(this, this._plainData(newDataObj));\n        }\n        this.trigger(Evt.enumEvt.modifed, this, senderSelf);\n        return this;\n    };\n    cls.prototype.getDataChanged = function () {\n        var ret;\n        if (this.opType == \"new\" || this.opType == \"modified\" || this.opType == \"deleted\") {\n            ret = this._plainData(this);\n        }\n        return ret;\n    };\n    cls.prototype.getRawData = function () {\n        var ret = {};\n        for (var it in this) {\n            if (!($.isFunction(this[it]))) {\n                ret[it] = this[it];\n            }\n        }\n        return ret;\n    };\n    cls.prototype.getData = function () {\n        return this._plainData();\n    };\n    cls.prototype.replaceData = function (newDataObj) {\n        ///<summary></summary>\n        ///<param></param>\n        return this;\n    };\n    cls.prototype._plainData = function (data) {\n        data = data || this;\n        ret = {};\n        for (var it in data) {\n            if (!($.isFunction(data[it]) || it.indexOf(\"_\") == 0) && (it != \"declaredClass\")) {\n                ret[it] = data[it];\n            }\n        }\n        return ret;\n    };\n    cls.prototype.submitSuccess = function (data) {\n        this.opType = \"\";\n    };\n    cls.enumEvt = $.extend({}, Evt.enumEvt);\n    return cls;\n    var r = new cls();\n});\n","define(\"RxmEventBase\", [], function () {\n    var slice = [].slice, separator = /\\s+/, protos;\n    // 根据条件过滤出事件handlers.\n    function findHandlers(arr, name, callback, context) {\n        return $.grep(arr, function (handler) {\n            return handler &&\n                (!name || handler.e === name) &&\n                (!callback || handler.cb === callback ||\n                    handler.cb._cb === callback) &&\n                (!context || handler.ctx === context);\n        });\n    }\n    function eachEvent(events, callback, iterator) {\n        // 不支持对象，只支持多个event用空格隔开\n        $.each((events || '').split(separator), function (_, key) {\n            iterator(key, callback);\n        });\n    }\n    function triggerHanders(events, args) {\n        var stoped = false, i = -1, len = events.length, handler;\n        while (++i < len) {\n            handler = events[i];\n            if (handler.cb.apply(handler.ctx2, args) === false) {\n                stoped = true;\n                break;\n            }\n        }\n        return !stoped;\n    }\n    protos = function () {\n        this._events = [];\n    };\n    /**\n     * 绑定事件。\n     *\n     * `callback`方法在执行时，arguments将会来源于trigger的时候携带的参数。如\n     * ```javascript\n     * var obj = {};\n     *\n     * // 使得obj有事件行为\n     * Mediator.installTo( obj );\n     *\n     * obj.on( 'testa', function( arg1, arg2 ) {\n     *     console.log( arg1, arg2 ); // => 'arg1', 'arg2'\n     * });\n     *\n     * obj.trigger( 'testa', 'arg1', 'arg2' );\n     * ```\n     *\n     * 如果`callback`中，某一个方法`return false`了，则后续的其他`callback`都不会被执行到。\n     * 切会影响到`trigger`方法的返回值，为`false`。\n     *\n     * `on`还可以用来添加一个特殊事件`all`, 这样所有的事件触发都会响应到。同时此类`callback`中的arguments有一个不同处，\n     * 就是第一个参数为`type`，记录当前是什么事件在触发。此类`callback`的优先级比脚低，会再正常`callback`执行完后触发。\n     * ```javascript\n     * obj.on( 'all', function( type, arg1, arg2 ) {\n     *     console.log( type, arg1, arg2 ); // => 'testa', 'arg1', 'arg2'\n     * });\n     * ```\n     *\n     * @method on\n     * @grammar on( name, callback[, context] ) => self\n     * @param  {String}   name     事件名，支持多个事件用空格隔开\n     * @param  {Function} callback 事件处理器\n     * @param  {Object}   [context]  事件处理器的上下文。\n     * @return {self} 返回自身，方便链式\n     * @chainable\n     * @class Mediator\n     */\n    protos.prototype.on = function (name, callback, context) {\n        var me = this, set;\n        if (!callback) {\n            return this;\n        }\n        set = this._events;\n        eachEvent(name, callback, function (name, callback) {\n            var handler = { e: name };\n            handler.cb = callback;\n            handler.ctx = context;\n            handler.ctx2 = context || me;\n            handler.id = set.length;\n            set.push(handler);\n        });\n        return this;\n    },\n        /**\n         * 绑定事件，且当handler执行完后，自动解除绑定。\n         * @method once\n         * @grammar once( name, callback[, context] ) => self\n         * @param  {String}   name     事件名\n         * @param  {Function} callback 事件处理器\n         * @param  {Object}   [context]  事件处理器的上下文。\n         * @return {self} 返回自身，方便链式\n         * @chainable\n         */\n        protos.prototype.once = function (name, callback, context) {\n            var me = this;\n            if (!callback) {\n                return me;\n            }\n            eachEvent(name, callback, function (name, callback) {\n                var once = function () {\n                    me.off(name, once);\n                    return callback.apply(context || me, arguments);\n                };\n                once._cb = callback;\n                me.on(name, once, context);\n            });\n            return me;\n        };\n    /**\n     * 解除事件绑定\n     * @method off\n     * @grammar off( [name[, callback[, context] ] ] ) => self\n     * @param  {String}   [name]     事件名\n     * @param  {Function} [callback] 事件处理器\n     * @param  {Object}   [context]  事件处理器的上下文。\n     * @return {self} 返回自身，方便链式\n     * @chainable\n     */\n    protos.prototype.off = function (name, cb, ctx) {\n        var events = this._events;\n        if (!events) {\n            return this;\n        }\n        if (!name && !cb && !ctx) {\n            this._events = [];\n            return this;\n        }\n        eachEvent(name, cb, function (name, cb) {\n            $.each(findHandlers(events, name, cb, ctx), function () {\n                delete events[this.id];\n            });\n        });\n        return this;\n    };\n    /**\n     * 触发事件\n     * @method trigger\n     * @grammar trigger( name[, args...] ) => self\n     * @param  {String}   type     事件名\n     * @param  {*} [...] 任意参数\n     * @return {Boolean} 如果handler中return false了，则返回false, 否则返回true\n     */\n    protos.prototype.trigger = function (type) {\n        var args, events, allEvents;\n        if (!this._events || !type) {\n            return this;\n        }\n        args = slice.call(arguments, 1);\n        events = findHandlers(this._events, type);\n        allEvents = findHandlers(this._events, 'all');\n        return triggerHanders(events, args) &&\n            triggerHanders(allEvents, arguments);\n    };\n    return protos;\n});\n","/// <reference path=\"lang.js\" />\ndefine(\"RxmInherit\", [\"RxmLang\"], function (lang) {\n    var mix = undefined;\n    if (typeof lang != \"undefined\")\n        mix = lang.mixin;\n    op = Object.prototype, opts = op.toString,\n        xtor = new Function, counter = 0, cname = \"constructor\";\n    function err(msg, cls) {\n        throw new Error(\"declare\" + (cls ? \" \" + cls : \"\") + \": \" + msg);\n    }\n    // C3 Method Resolution Order (see http://www.python.org/download/releases/2.3/mro/)\n    function c3mro(bases, className) {\n        var result = [], roots = [{ cls: 0, refs: [] }], nameMap = {}, clsCount = 1, l = bases.length, i = 0, j, lin, base, top, proto, rec, name, refs;\n        // build a list of bases naming them if needed\n        for (; i < l; ++i) {\n            base = bases[i];\n            if (!base) {\n                err(\"mixin #\" + i + \" is unknown. Did you use dojo.require to pull it in?\", className);\n            }\n            else if (opts.call(base) != \"[object Function]\") {\n                err(\"mixin #\" + i + \" is not a callable constructor.\", className);\n            }\n            lin = base._meta ? base._meta.bases : [base];\n            top = 0;\n            // add bases to the name map\n            for (j = lin.length - 1; j >= 0; --j) {\n                proto = lin[j].prototype;\n                if (!proto.hasOwnProperty(\"declaredClass\")) {\n                    proto.declaredClass = \"uniqName_\" + (counter++);\n                }\n                name = proto.declaredClass;\n                if (!nameMap.hasOwnProperty(name)) {\n                    nameMap[name] = { count: 0, refs: [], cls: lin[j] };\n                    ++clsCount;\n                }\n                rec = nameMap[name];\n                if (top && top !== rec) {\n                    rec.refs.push(top);\n                    ++top.count;\n                }\n                top = rec;\n            }\n            ++top.count;\n            roots[0].refs.push(top);\n        }\n        // remove classes without external references recursively\n        while (roots.length) {\n            top = roots.pop();\n            result.push(top.cls);\n            --clsCount;\n            // optimization: follow a single-linked chain\n            while (refs = top.refs, refs.length == 1) {\n                top = refs[0];\n                if (!top || --top.count) {\n                    // branch or end of chain => do not end to roots\n                    top = 0;\n                    break;\n                }\n                result.push(top.cls);\n                --clsCount;\n            }\n            if (top) {\n                // branch\n                for (i = 0, l = refs.length; i < l; ++i) {\n                    top = refs[i];\n                    if (!--top.count) {\n                        roots.push(top);\n                    }\n                }\n            }\n        }\n        if (clsCount) {\n            err(\"can't build consistent linearization\", className);\n        }\n        // calculate the superclass offset\n        base = bases[0];\n        result[0] = base ?\n            base._meta && base === result[result.length - base._meta.bases.length] ?\n                base._meta.bases.length : 1 : 0;\n        return result;\n    }\n    function inherited(args, a, f) {\n        var name, chains, bases, caller, meta, base, proto, opf, pos, cache = this._inherited = this._inherited || {};\n        // crack arguments\n        if (typeof args == \"string\") {\n            name = args;\n            args = a;\n            a = f;\n        }\n        f = 0;\n        caller = args.callee;\n        name = name || caller.nom;\n        if (!name) {\n            err(\"can't deduce a name to call inherited()\", this.declaredClass);\n        }\n        meta = this.constructor._meta;\n        bases = meta.bases;\n        pos = cache.p;\n        if (name != cname) {\n            // method\n            if (cache.c !== caller) {\n                // cache bust\n                pos = 0;\n                base = bases[0];\n                meta = base._meta;\n                if (meta.hidden[name] !== caller) {\n                    // error detection\n                    chains = meta.chains;\n                    if (chains && typeof chains[name] == \"string\") {\n                        err(\"calling chained method with inherited: \" + name, this.declaredClass);\n                    }\n                    // find caller\n                    do {\n                        meta = base._meta;\n                        proto = base.prototype;\n                        if (meta && (proto[name] === caller && proto.hasOwnProperty(name) || meta.hidden[name] === caller)) {\n                            break;\n                        }\n                    } while (base = bases[++pos]); // intentional assignment\n                    pos = base ? pos : -1;\n                }\n            }\n            // find next\n            base = bases[++pos];\n            if (base) {\n                proto = base.prototype;\n                if (base._meta && proto.hasOwnProperty(name)) {\n                    f = proto[name];\n                }\n                else {\n                    opf = op[name];\n                    do {\n                        proto = base.prototype;\n                        f = proto[name];\n                        if (f && (base._meta ? proto.hasOwnProperty(name) : f !== opf)) {\n                            break;\n                        }\n                    } while (base = bases[++pos]); // intentional assignment\n                }\n            }\n            f = base && f || op[name];\n        }\n        else {\n            // constructor\n            if (cache.c !== caller) {\n                // cache bust\n                pos = 0;\n                meta = bases[0]._meta;\n                if (meta && meta.ctor !== caller) {\n                    // error detection\n                    chains = meta.chains;\n                    if (!chains || chains.constructor !== \"manual\") {\n                        err(\"calling chained constructor with inherited\", this.declaredClass);\n                    }\n                    // find caller\n                    while (base = bases[++pos]) { // intentional assignment\n                        meta = base._meta;\n                        if (meta && meta.ctor === caller) {\n                            break;\n                        }\n                    }\n                    pos = base ? pos : -1;\n                }\n            }\n            // find next\n            while (base = bases[++pos]) { // intentional assignment\n                meta = base._meta;\n                f = meta ? meta.ctor : base;\n                if (f) {\n                    break;\n                }\n            }\n            f = base && f;\n        }\n        // cache the found super method\n        cache.c = f;\n        cache.p = pos;\n        // now we have the result\n        if (f) {\n            return a === true ? f : f.apply(this, a || args);\n        }\n        // intentionally no return if a super method was not found\n    }\n    function getInherited(name, args) {\n        if (typeof name == \"string\") {\n            return this.__inherited(name, args, true);\n        }\n        return this.__inherited(name, true);\n    }\n    function inherited__debug(args, a1, a2) {\n        var f = this.getInherited(args, a1);\n        if (f) {\n            return f.apply(this, a2 || a1 || args);\n        }\n        // intentionally no return if a super method was not found\n    }\n    var inheritedImpl = false ? inherited__debug : inherited;\n    // emulation of \"instanceof\"\n    function isInstanceOf(cls) {\n        var bases = this.constructor._meta.bases;\n        for (var i = 0, l = bases.length; i < l; ++i) {\n            if (bases[i] === cls) {\n                return true;\n            }\n        }\n        return this instanceof cls;\n    }\n    function mixOwn(target, source) {\n        // add props adding metadata for incoming functions skipping a constructor\n        for (var name in source) {\n            if (name != cname && source.hasOwnProperty(name)) {\n                target[name] = source[name];\n            }\n        }\n    }\n    // implementation of safe mixin function\n    function safeMixin(target, source) {\n        // summary:\n        //\t\tMix in properties skipping a constructor and decorating functions\n        //\t\tlike it is done by declare().\n        // target: Object\n        //\t\tTarget object to accept new properties.\n        // source: Object\n        //\t\tSource object for new properties.\n        // description:\n        //\t\tThis function is used to mix in properties like lang.mixin does,\n        //\t\tbut it skips a constructor property and decorates functions like\n        //\t\tdeclare() does.\n        //\n        //\t\tIt is meant to be used with classes and objects produced with\n        //\t\tdeclare. Functions mixed in with dojo.safeMixin can use\n        //\t\tthis.inherited() like normal methods.\n        //\n        //\t\tThis function is used to implement extend() method of a constructor\n        //\t\tproduced with declare().\n        //\n        // example:\n        //\t|\tvar A = declare(null, {\n        //\t|\t\tm1: function(){\n        //\t|\t\t\tconsole.log(\"A.m1\");\n        //\t|\t\t},\n        //\t|\t\tm2: function(){\n        //\t|\t\t\tconsole.log(\"A.m2\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tvar B = declare(A, {\n        //\t|\t\tm1: function(){\n        //\t|\t\t\tthis.inherited(arguments);\n        //\t|\t\t\tconsole.log(\"B.m1\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tB.extend({\n        //\t|\t\tm2: function(){\n        //\t|\t\t\tthis.inherited(arguments);\n        //\t|\t\t\tconsole.log(\"B.m2\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tvar x = new B();\n        //\t|\tdojo.safeMixin(x, {\n        //\t|\t\tm1: function(){\n        //\t|\t\t\tthis.inherited(arguments);\n        //\t|\t\t\tconsole.log(\"X.m1\");\n        //\t|\t\t},\n        //\t|\t\tm2: function(){\n        //\t|\t\t\tthis.inherited(arguments);\n        //\t|\t\t\tconsole.log(\"X.m2\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tx.m2();\n        //\t|\t// prints:\n        //\t|\t// A.m1\n        //\t|\t// B.m1\n        //\t|\t// X.m1\n        var name, t;\n        // add props adding metadata for incoming functions skipping a constructor\n        for (name in source) {\n            t = source[name];\n            if ((t !== op[name] || !(name in op)) && name != cname) {\n                if (opts.call(t) == \"[object Function]\") {\n                    // non-trivial function method => attach its name\n                    t.nom = name;\n                }\n                target[name] = t;\n            }\n        }\n        return target;\n    }\n    function extend(source) {\n        declare.safeMixin(this.prototype, source);\n        return this;\n    }\n    function createSubclass(mixins, props) {\n        // crack parameters\n        if (!(mixins instanceof Array || typeof mixins == 'function')) {\n            props = mixins;\n            mixins = undefined;\n        }\n        props = props || {};\n        mixins = mixins || [];\n        return declare([this].concat(mixins), props);\n    }\n    // chained constructor compatible with the legacy declare()\n    function chainedConstructor(bases, ctorSpecial) {\n        return function () {\n            var a = arguments, args = a, a0 = a[0], f, i, m, l = bases.length, preArgs;\n            if (!(this instanceof a.callee)) {\n                // not called via new, so force it\n                return applyNew(a);\n            }\n            //this._inherited = {};\n            // perform the shaman's rituals of the original declare()\n            // 1) call two types of the preamble\n            if (ctorSpecial && (a0 && a0.preamble || this.preamble)) {\n                // full blown ritual\n                preArgs = new Array(bases.length);\n                // prepare parameters\n                preArgs[0] = a;\n                for (i = 0;;) {\n                    // process the preamble of the 1st argument\n                    a0 = a[0];\n                    if (a0) {\n                        f = a0.preamble;\n                        if (f) {\n                            a = f.apply(this, a) || a;\n                        }\n                    }\n                    // process the preamble of this class\n                    f = bases[i].prototype;\n                    f = f.hasOwnProperty(\"preamble\") && f.preamble;\n                    if (f) {\n                        a = f.apply(this, a) || a;\n                    }\n                    // one peculiarity of the preamble:\n                    // it is called if it is not needed,\n                    // e.g., there is no constructor to call\n                    // let's watch for the last constructor\n                    // (see ticket #9795)\n                    if (++i == l) {\n                        break;\n                    }\n                    preArgs[i] = a;\n                }\n            }\n            // 2) call all non-trivial constructors using prepared arguments\n            for (i = l - 1; i >= 0; --i) {\n                f = bases[i];\n                m = f._meta;\n                f = m ? m.ctor : f;\n                if (f) {\n                    f.apply(this, preArgs ? preArgs[i] : a);\n                }\n            }\n            // 3) continue the original ritual: call the postscript\n            f = this.postscript;\n            if (f) {\n                f.apply(this, args);\n            }\n        };\n    }\n    // chained constructor compatible with the legacy declare()\n    function singleConstructor(ctor, ctorSpecial) {\n        return function () {\n            var a = arguments, t = a, a0 = a[0], f;\n            if (!(this instanceof a.callee)) {\n                // not called via new, so force it\n                return applyNew(a);\n            }\n            //this._inherited = {};\n            // perform the shaman's rituals of the original declare()\n            // 1) call two types of the preamble\n            if (ctorSpecial) {\n                // full blown ritual\n                if (a0) {\n                    // process the preamble of the 1st argument\n                    f = a0.preamble;\n                    if (f) {\n                        t = f.apply(this, t) || t;\n                    }\n                }\n                f = this.preamble;\n                if (f) {\n                    // process the preamble of this class\n                    f.apply(this, t);\n                    // one peculiarity of the preamble:\n                    // it is called even if it is not needed,\n                    // e.g., there is no constructor to call\n                    // let's watch for the last constructor\n                    // (see ticket #9795)\n                }\n            }\n            // 2) call a constructor\n            if (ctor) {\n                ctor.apply(this, a);\n            }\n            // 3) continue the original ritual: call the postscript\n            f = this.postscript;\n            if (f) {\n                f.apply(this, a);\n            }\n        };\n    }\n    // plain vanilla constructor (can use inherited() to call its base constructor)\n    function simpleConstructor(bases) {\n        return function () {\n            var a = arguments, i = 0, f, m;\n            if (!(this instanceof a.callee)) {\n                // not called via new, so force it\n                return applyNew(a);\n            }\n            //this._inherited = {};\n            // perform the shaman's rituals of the original declare()\n            // 1) do not call the preamble\n            // 2) call the top constructor (it can use this.inherited())\n            for (; f = bases[i]; ++i) { // intentional assignment\n                m = f._meta;\n                f = m ? m.ctor : f;\n                if (f) {\n                    f.apply(this, a);\n                    break;\n                }\n            }\n            // 3) call the postscript\n            f = this.postscript;\n            if (f) {\n                f.apply(this, a);\n            }\n        };\n    }\n    function chain(name, bases, reversed) {\n        return function () {\n            var b, m, f, i = 0, step = 1;\n            if (reversed) {\n                i = bases.length - 1;\n                step = -1;\n            }\n            for (; b = bases[i]; i += step) { // intentional assignment\n                m = b._meta;\n                f = (m ? m.hidden : b.prototype)[name];\n                if (f) {\n                    f.apply(this, arguments);\n                }\n            }\n        };\n    }\n    // forceNew(ctor)\n    // return a new object that inherits from ctor.prototype but\n    // without actually running ctor on the object.\n    function forceNew(ctor) {\n        // create object with correct prototype using a do-nothing\n        // constructor\n        xtor.prototype = ctor.prototype;\n        var t = new xtor;\n        xtor.prototype = null; // clean up\n        return t;\n    }\n    // applyNew(args)\n    // just like 'new ctor()' except that the constructor and its arguments come\n    // from args, which must be an array or an arguments object\n    function applyNew(args) {\n        // create an object with ctor's prototype but without\n        // calling ctor on it.\n        var ctor = args.callee, t = forceNew(ctor);\n        // execute the real constructor on the new object\n        ctor.apply(t, args);\n        return t;\n    }\n    function declare(className, superclass, props) {\n        ///<summary name=\"declare\">Create a feature-rich constructor from compact notation.</summary>\t\n        /// <param  name=\"className\" type= \"String\">The optional name of the constructor (loosely, a \"class\") stored in the \"declaredClass\" property in the created prototype.It will be used as a global name for a created constructor.</param>\n        /// <param  name=\"superclass\" type=\"Function|Function[]\">May be null, a Function, or an Array of Functions. This argument specifies a list of bases (the left-most one is the most deepest base).</param>\n        //\t<param  name=\"props\"\t type=\"Object\">An object whose properties are copied to the created prototype. Add an instance-initialization function by making it a property</param>\n        //\t\t \n        //\t\t\n        // : \n        //\t\t\n        //\t\t\n        //\t\tnamed \"constructor\".\n        // returns: dojo/_base/declare.__DeclareCreatedObject\n        //\t\tNew constructor function.\n        // description:\n        //\t\tCreate a constructor using a compact notation for inheritance and\n        //\t\tprototype extension.\n        //\n        //\t\tMixin ancestors provide a type of multiple inheritance.\n        //\t\tPrototypes of mixin ancestors are copied to the new class:\n        //\t\tchanges to mixin prototypes will not affect classes to which\n        //\t\tthey have been mixed in.\n        //\n        //\t\tAncestors can be compound classes created by this version of\n        //\t\tdeclare(). In complex cases all base classes are going to be\n        //\t\tlinearized according to C3 MRO algorithm\n        //\t\t(see http://www.python.org/download/releases/2.3/mro/ for more\n        //\t\tdetails).\n        //\n        //\t\t\"className\" is cached in \"declaredClass\" property of the new class,\n        //\t\tif it was supplied. The immediate super class will be cached in\n        //\t\t\"superclass\" property of the new class.\n        //\n        //\t\tMethods in \"props\" will be copied and modified: \"nom\" property\n        //\t\t(the declared name of the method) will be added to all copied\n        //\t\tfunctions to help identify them for the internal machinery. Be\n        //\t\tvery careful, while reusing methods: if you use the same\n        //\t\tfunction under different names, it can produce errors in some\n        //\t\tcases.\n        //\n        //\t\tIt is possible to use constructors created \"manually\" (without\n        //\t\tdeclare()) as bases. They will be called as usual during the\n        //\t\tcreation of an instance, their methods will be chained, and even\n        //\t\tcalled by \"this.inherited()\".\n        //\n        //\t\tSpecial property \"-chains-\" governs how to chain methods. It is\n        //\t\ta dictionary, which uses method names as keys, and hint strings\n        //\t\tas values. If a hint string is \"after\", this method will be\n        //\t\tcalled after methods of its base classes. If a hint string is\n        //\t\t\"before\", this method will be called before methods of its base\n        //\t\tclasses.\n        //\n        //\t\tIf \"constructor\" is not mentioned in \"-chains-\" property, it will\n        //\t\tbe chained using the legacy mode: using \"after\" chaining,\n        //\t\tcalling preamble() method before each constructor, if available,\n        //\t\tand calling postscript() after all constructors were executed.\n        //\t\tIf the hint is \"after\", it is chained as a regular method, but\n        //\t\tpostscript() will be called after the chain of constructors.\n        //\t\t\"constructor\" cannot be chained \"before\", but it allows\n        //\t\ta special hint string: \"manual\", which means that constructors\n        //\t\tare not going to be chained in any way, and programmer will call\n        //\t\tthem manually using this.inherited(). In the latter case\n        //\t\tpostscript() will be called after the construction.\n        //\n        //\t\tAll chaining hints are \"inherited\" from base classes and\n        //\t\tpotentially can be overridden. Be very careful when overriding\n        //\t\thints! Make sure that all chained methods can work in a proposed\n        //\t\tmanner of chaining.\n        //\n        //\t\tOnce a method was chained, it is impossible to unchain it. The\n        //\t\tonly exception is \"constructor\". You don't need to define a\n        //\t\tmethod in order to supply a chaining hint.\n        //\n        //\t\tIf a method is chained, it cannot use this.inherited() because\n        //\t\tall other methods in the hierarchy will be called automatically.\n        //\n        //\t\tUsually constructors and initializers of any kind are chained\n        //\t\tusing \"after\" and destructors of any kind are chained as\n        //\t\t\"before\". Note that chaining assumes that chained methods do not\n        //\t\treturn any value: any returned value will be discarded.\n        //\n        // example:\n        //\t|\tdeclare(\"my.classes.bar\", my.classes.foo, {\n        //\t|\t\t// properties to be added to the class prototype\n        //\t|\t\tsomeValue: 2,\n        //\t|\t\t// initialization function\n        //\t|\t\tconstructor: function(){\n        //\t|\t\t\tthis.myComplicatedObject = new ReallyComplicatedObject();\n        //\t|\t\t},\n        //\t|\t\t// other functions\n        //\t|\t\tsomeMethod: function(){\n        //\t|\t\t\tdoStuff();\n        //\t|\t\t}\n        //\t|\t});\n        //\n        // example:\n        //\t|\tvar MyBase = declare(null, {\n        //\t|\t\t// constructor, properties, and methods go here\n        //\t|\t\t// ...\n        //\t|\t});\n        //\t|\tvar MyClass1 = declare(MyBase, {\n        //\t|\t\t// constructor, properties, and methods go here\n        //\t|\t\t// ...\n        //\t|\t});\n        //\t|\tvar MyClass2 = declare(MyBase, {\n        //\t|\t\t// constructor, properties, and methods go here\n        //\t|\t\t// ...\n        //\t|\t});\n        //\t|\tvar MyDiamond = declare([MyClass1, MyClass2], {\n        //\t|\t\t// constructor, properties, and methods go here\n        //\t|\t\t// ...\n        //\t|\t});\n        //\n        // example:\n        //\t|\tvar F = function(){ console.log(\"raw constructor\"); };\n        //\t|\tF.prototype.method = function(){\n        //\t|\t\tconsole.log(\"raw method\");\n        //\t|\t};\n        //\t|\tvar A = declare(F, {\n        //\t|\t\tconstructor: function(){\n        //\t|\t\t\tconsole.log(\"A.constructor\");\n        //\t|\t\t},\n        //\t|\t\tmethod: function(){\n        //\t|\t\t\tconsole.log(\"before calling F.method...\");\n        //\t|\t\t\tthis.inherited(arguments);\n        //\t|\t\t\tconsole.log(\"...back in A\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tnew A().method();\n        //\t|\t// will print:\n        //\t|\t// raw constructor\n        //\t|\t// A.constructor\n        //\t|\t// before calling F.method...\n        //\t|\t// raw method\n        //\t|\t// ...back in A\n        //\n        // example:\n        //\t|\tvar A = declare(null, {\n        //\t|\t\t\"-chains-\": {\n        //\t|\t\t\tdestroy: \"before\"\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tvar B = declare(A, {\n        //\t|\t\tconstructor: function(){\n        //\t|\t\t\tconsole.log(\"B.constructor\");\n        //\t|\t\t},\n        //\t|\t\tdestroy: function(){\n        //\t|\t\t\tconsole.log(\"B.destroy\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tvar C = declare(B, {\n        //\t|\t\tconstructor: function(){\n        //\t|\t\t\tconsole.log(\"C.constructor\");\n        //\t|\t\t},\n        //\t|\t\tdestroy: function(){\n        //\t|\t\t\tconsole.log(\"C.destroy\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tnew C().destroy();\n        //\t|\t// prints:\n        //\t|\t// B.constructor\n        //\t|\t// C.constructor\n        //\t|\t// C.destroy\n        //\t|\t// B.destroy\n        //\n        // example:\n        //\t|\tvar A = declare(null, {\n        //\t|\t\t\"-chains-\": {\n        //\t|\t\t\tconstructor: \"manual\"\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tvar B = declare(A, {\n        //\t|\t\tconstructor: function(){\n        //\t|\t\t\t// ...\n        //\t|\t\t\t// call the base constructor with new parameters\n        //\t|\t\t\tthis.inherited(arguments, [1, 2, 3]);\n        //\t|\t\t\t// ...\n        //\t|\t\t}\n        //\t|\t});\n        //\n        // example:\n        //\t|\tvar A = declare(null, {\n        //\t|\t\t\"-chains-\": {\n        //\t|\t\t\tm1: \"before\"\n        //\t|\t\t},\n        //\t|\t\tm1: function(){\n        //\t|\t\t\tconsole.log(\"A.m1\");\n        //\t|\t\t},\n        //\t|\t\tm2: function(){\n        //\t|\t\t\tconsole.log(\"A.m2\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tvar B = declare(A, {\n        //\t|\t\t\"-chains-\": {\n        //\t|\t\t\tm2: \"after\"\n        //\t|\t\t},\n        //\t|\t\tm1: function(){\n        //\t|\t\t\tconsole.log(\"B.m1\");\n        //\t|\t\t},\n        //\t|\t\tm2: function(){\n        //\t|\t\t\tconsole.log(\"B.m2\");\n        //\t|\t\t}\n        //\t|\t});\n        //\t|\tvar x = new B();\n        //\t|\tx.m1();\n        //\t|\t// prints:\n        //\t|\t// B.m1\n        //\t|\t// A.m1\n        //\t|\tx.m2();\n        //\t|\t// prints:\n        //\t|\t// A.m2\n        //\t|\t// B.m2\n        // crack parameters\n        if (typeof className != \"string\") {\n            props = superclass;\n            superclass = className;\n            className = \"\";\n        }\n        props = props || {};\n        var proto, i, t, ctor, name, bases, chains, mixins = 1, parents = superclass;\n        // build a prototype\n        if (opts.call(superclass) == \"[object Array]\") {\n            // C3 MRO\n            bases = c3mro(superclass, className);\n            t = bases[0];\n            mixins = bases.length - t;\n            superclass = bases[mixins];\n        }\n        else {\n            bases = [0];\n            if (superclass) {\n                if (opts.call(superclass) == \"[object Function]\") {\n                    t = superclass._meta;\n                    bases = bases.concat(t ? t.bases : superclass);\n                }\n                else {\n                    err(\"base class is not a callable constructor.\", className);\n                }\n            }\n            else if (superclass !== null) {\n                err(\"unknown base class. Did you use dojo.require to pull it in?\", className);\n            }\n        }\n        if (superclass) {\n            for (i = mixins - 1;; --i) {\n                proto = forceNew(superclass);\n                if (!i) {\n                    // stop if nothing to add (the last base)\n                    break;\n                }\n                // mix in properties\n                t = bases[i];\n                (t._meta ? mixOwn : mix)(proto, t.prototype);\n                // chain in new constructor\n                ctor = new Function;\n                ctor.superclass = superclass;\n                ctor.prototype = proto;\n                superclass = proto.constructor = ctor;\n            }\n        }\n        else {\n            proto = {};\n        }\n        // add all properties\n        declare.safeMixin(proto, props);\n        // add constructor\n        t = props.constructor;\n        if (t !== op.constructor) {\n            t.nom = cname;\n            proto.constructor = t;\n        }\n        // collect chains and flags\n        for (i = mixins - 1; i; --i) { // intentional assignment\n            t = bases[i]._meta;\n            if (t && t.chains) {\n                chains = mix(chains || {}, t.chains);\n            }\n        }\n        if (proto[\"-chains-\"]) {\n            chains = mix(chains || {}, proto[\"-chains-\"]);\n        }\n        // build ctor\n        t = !chains || !chains.hasOwnProperty(cname);\n        bases[0] = ctor = (chains && chains.constructor === \"manual\") ? simpleConstructor(bases) :\n            (bases.length == 1 ? singleConstructor(props.constructor, t) : chainedConstructor(bases, t));\n        // add meta information to the constructor\n        ctor._meta = {\n            bases: bases, hidden: props, chains: chains,\n            parents: parents, ctor: props.constructor\n        };\n        ctor.superclass = superclass && superclass.prototype;\n        ctor.extend = extend;\n        ctor.createSubclass = createSubclass;\n        ctor.prototype = proto;\n        proto.constructor = ctor;\n        // add \"standard\" methods to the prototype\n        proto.getInherited = getInherited;\n        proto.isInstanceOf = isInstanceOf;\n        proto.inherited = inheritedImpl;\n        proto.__inherited = inherited;\n        // add name if specified\n        if (className) {\n            proto.declaredClass = className;\n            lang.setObject(className, ctor);\n        }\n        // build chains and add them to the prototype\n        if (chains) {\n            for (name in chains) {\n                if (proto[name] && typeof chains[name] == \"string\" && name != cname) {\n                    t = proto[name] = chain(name, bases, chains[name] === \"after\");\n                    t.nom = name;\n                }\n            }\n        }\n        // chained methods do not return values\n        // no need to chain \"invisible\" functions\n        return ctor; // Function\n    }\n    /*=====\n    declare.__DeclareCreatedObject = {\n        // summary:\n        //\t\tdojo/_base/declare() returns a constructor `C`.   `new C()` returns an Object with the following\n        //\t\tmethods, in addition to the methods and properties specified via the arguments passed to declare().\n\r\n        inherited: function(name, args, newArgs){\n            // summary:\n            //\t\tCalls a super method.\n            // name: String?\n            //\t\tThe optional method name. Should be the same as the caller's\n            //\t\tname. Usually \"name\" is specified in complex dynamic cases, when\n            //\t\tthe calling method was dynamically added, undecorated by\n            //\t\tdeclare(), and it cannot be determined.\n            // args: Arguments\n            //\t\tThe caller supply this argument, which should be the original\n            //\t\t\"arguments\".\n            // newArgs: Object?\n            //\t\tIf \"true\", the found function will be returned without\n            //\t\texecuting it.\n            //\t\tIf Array, it will be used to call a super method. Otherwise\n            //\t\t\"args\" will be used.\n            // returns:\n            //\t\tWhatever is returned by a super method, or a super method itself,\n            //\t\tif \"true\" was specified as newArgs.\n            // description:\n            //\t\tThis method is used inside method of classes produced with\n            //\t\tdeclare() to call a super method (next in the chain). It is\n            //\t\tused for manually controlled chaining. Consider using the regular\n            //\t\tchaining, because it is faster. Use \"this.inherited()\" only in\n            //\t\tcomplex cases.\n            //\n            //\t\tThis method cannot me called from automatically chained\n            //\t\tconstructors including the case of a special (legacy)\n            //\t\tconstructor chaining. It cannot be called from chained methods.\n            //\n            //\t\tIf \"this.inherited()\" cannot find the next-in-chain method, it\n            //\t\tdoes nothing and returns \"undefined\". The last method in chain\n            //\t\tcan be a default method implemented in Object, which will be\n            //\t\tcalled last.\n            //\n            //\t\tIf \"name\" is specified, it is assumed that the method that\n            //\t\treceived \"args\" is the parent method for this call. It is looked\n            //\t\tup in the chain list and if it is found the next-in-chain method\n            //\t\tis called. If it is not found, the first-in-chain method is\n            //\t\tcalled.\n            //\n            //\t\tIf \"name\" is not specified, it will be derived from the calling\n            //\t\tmethod (using a methoid property \"nom\").\n            //\n            // example:\n            //\t|\tvar B = declare(A, {\n            //\t|\t\tmethod1: function(a, b, c){\n            //\t|\t\t\tthis.inherited(arguments);\n            //\t|\t\t},\n            //\t|\t\tmethod2: function(a, b){\n            //\t|\t\t\treturn this.inherited(arguments, [a + b]);\n            //\t|\t\t}\n            //\t|\t});\n            //\t|\t// next method is not in the chain list because it is added\n            //\t|\t// manually after the class was created.\n            //\t|\tB.prototype.method3 = function(){\n            //\t|\t\tconsole.log(\"This is a dynamically-added method.\");\n            //\t|\t\tthis.inherited(\"method3\", arguments);\n            //\t|\t};\n            // example:\n            //\t|\tvar B = declare(A, {\n            //\t|\t\tmethod: function(a, b){\n            //\t|\t\t\tvar super = this.inherited(arguments, true);\n            //\t|\t\t\t// ...\n            //\t|\t\t\tif(!super){\n            //\t|\t\t\t\tconsole.log(\"there is no super method\");\n            //\t|\t\t\t\treturn 0;\n            //\t|\t\t\t}\n            //\t|\t\t\treturn super.apply(this, arguments);\n            //\t|\t\t}\n            //\t|\t});\n            return\t{};\t// Object\n        },\n\r\n        getInherited: function(name, args){\n            // summary:\n            //\t\tReturns a super method.\n            // name: String?\n            //\t\tThe optional method name. Should be the same as the caller's\n            //\t\tname. Usually \"name\" is specified in complex dynamic cases, when\n            //\t\tthe calling method was dynamically added, undecorated by\n            //\t\tdeclare(), and it cannot be determined.\n            // args: Arguments\n            //\t\tThe caller supply this argument, which should be the original\n            //\t\t\"arguments\".\n            // returns:\n            //\t\tReturns a super method (Function) or \"undefined\".\n            // description:\n            //\t\tThis method is a convenience method for \"this.inherited()\".\n            //\t\tIt uses the same algorithm but instead of executing a super\n            //\t\tmethod, it returns it, or \"undefined\" if not found.\n            //\n            // example:\n            //\t|\tvar B = declare(A, {\n            //\t|\t\tmethod: function(a, b){\n            //\t|\t\t\tvar super = this.getInherited(arguments);\n            //\t|\t\t\t// ...\n            //\t|\t\t\tif(!super){\n            //\t|\t\t\t\tconsole.log(\"there is no super method\");\n            //\t|\t\t\t\treturn 0;\n            //\t|\t\t\t}\n            //\t|\t\t\treturn super.apply(this, arguments);\n            //\t|\t\t}\n            //\t|\t});\n            return\t{};\t// Object\n        },\n\r\n        isInstanceOf: function(cls){\n            // summary:\n            //\t\tChecks the inheritance chain to see if it is inherited from this\n            //\t\tclass.\n            // cls: Function\n            //\t\tClass constructor.\n            // returns:\n            //\t\t\"true\", if this object is inherited from this class, \"false\"\n            //\t\totherwise.\n            // description:\n            //\t\tThis method is used with instances of classes produced with\n            //\t\tdeclare() to determine of they support a certain interface or\n            //\t\tnot. It models \"instanceof\" operator.\n            //\n            // example:\n            //\t|\tvar A = declare(null, {\n            //\t|\t\t// constructor, properties, and methods go here\n            //\t|\t\t// ...\n            //\t|\t});\n            //\t|\tvar B = declare(null, {\n            //\t|\t\t// constructor, properties, and methods go here\n            //\t|\t\t// ...\n            //\t|\t});\n            //\t|\tvar C = declare([A, B], {\n            //\t|\t\t// constructor, properties, and methods go here\n            //\t|\t\t// ...\n            //\t|\t});\n            //\t|\tvar D = declare(A, {\n            //\t|\t\t// constructor, properties, and methods go here\n            //\t|\t\t// ...\n            //\t|\t});\n            //\t|\n            //\t|\tvar a = new A(), b = new B(), c = new C(), d = new D();\n            //\t|\n            //\t|\tconsole.log(a.isInstanceOf(A)); // true\n            //\t|\tconsole.log(b.isInstanceOf(A)); // false\n            //\t|\tconsole.log(c.isInstanceOf(A)); // true\n            //\t|\tconsole.log(d.isInstanceOf(A)); // true\n            //\t|\n            //\t|\tconsole.log(a.isInstanceOf(B)); // false\n            //\t|\tconsole.log(b.isInstanceOf(B)); // true\n            //\t|\tconsole.log(c.isInstanceOf(B)); // true\n            //\t|\tconsole.log(d.isInstanceOf(B)); // false\n            //\t|\n            //\t|\tconsole.log(a.isInstanceOf(C)); // false\n            //\t|\tconsole.log(b.isInstanceOf(C)); // false\n            //\t|\tconsole.log(c.isInstanceOf(C)); // true\n            //\t|\tconsole.log(d.isInstanceOf(C)); // false\n            //\t|\n            //\t|\tconsole.log(a.isInstanceOf(D)); // false\n            //\t|\tconsole.log(b.isInstanceOf(D)); // false\n            //\t|\tconsole.log(c.isInstanceOf(D)); // false\n            //\t|\tconsole.log(d.isInstanceOf(D)); // true\n            return\t{};\t// Object\n        },\n\r\n        extend: function(source){\n            // summary:\n            //\t\tAdds all properties and methods of source to constructor's\n            //\t\tprototype, making them available to all instances created with\n            //\t\tconstructor. This method is specific to constructors created with\n            //\t\tdeclare().\n            // source: Object\n            //\t\tSource object which properties are going to be copied to the\n            //\t\tconstructor's prototype.\n            // description:\n            //\t\tAdds source properties to the constructor's prototype. It can\n            //\t\toverride existing properties.\n            //\n            //\t\tThis method is similar to dojo.extend function, but it is specific\n            //\t\tto constructors produced by declare(). It is implemented\n            //\t\tusing dojo.safeMixin, and it skips a constructor property,\n            //\t\tand properly decorates copied functions.\n            //\n            // example:\n            //\t|\tvar A = declare(null, {\n            //\t|\t\tm1: function(){},\n            //\t|\t\ts1: \"Popokatepetl\"\n            //\t|\t});\n            //\t|\tA.extend({\n            //\t|\t\tm1: function(){},\n            //\t|\t\tm2: function(){},\n            //\t|\t\tf1: true,\n            //\t|\t\td1: 42\n            //\t|\t});\n        },\n\r\n        createSubclass: function(mixins, props){\n            // summary:\n            //\t\tCreate a subclass of the declared class from a list of base classes.\n            // mixins: Function[]\n            //\t\tSpecifies a list of bases (the left-most one is the most deepest\n            //\t\tbase).\n            // props: Object?\n            //\t\tAn optional object whose properties are copied to the created prototype.\n            // returns: dojo/_base/declare.__DeclareCreatedObject\n            //\t\tNew constructor function.\n            // description:\n            //\t\tCreate a constructor using a compact notation for inheritance and\n            //\t\tprototype extension.\n            //\n            //\t\tMixin ancestors provide a type of multiple inheritance.\n            //\t\tPrototypes of mixin ancestors are copied to the new class:\n            //\t\tchanges to mixin prototypes will not affect classes to which\n            //\t\tthey have been mixed in.\n            //\n            // example:\n            //\t|\tvar A = declare(null, {\n            //\t|\t\tm1: function(){},\n            //\t|\t\ts1: \"bar\"\n            //\t|\t});\n            //\t|\tvar B = declare(null, {\n            //\t|\t\tm2: function(){},\n            //\t|\t\ts2: \"foo\"\n            //\t|\t});\n            //\t|\tvar C = declare(null, {\n            //\t|\t});\n            //\t|\tvar D1 = A.createSubclass([B, C], {\n            //\t|\t\tm1: function(){},\n            //\t|\t\td1: 42\n            //\t|\t});\n            //\t|\tvar d1 = new D1();\n            //\t|\n            //\t|\t// this is equivalent to:\n            //\t|\tvar D2 = declare([A, B, C], {\n            //\t|\t\tm1: function(){},\n            //\t|\t\td1: 42\n            //\t|\t});\n            //\t|\tvar d2 = new D2();\n        }\n    };\n    =====*/\n    //// For back-compat, remove for 2.0\n    declare.safeMixin = safeMixin;\n    //dojo.declare = declare;\n    cssOrm.inherit = cssOrm.inherit || declare;\n    return declare;\n});\n","define(\"RxmLang\", [], function () {\n    // module:\n    //\t\tdojo/_base/lang\n    // Helper methods\n    var _extraNames = false ?\n        \"hasOwnProperty.valueOf.isPrototypeOf.propertyIsEnumerable.toLocaleString.toString.constructor\".split(\".\") : [], _extraLen = _extraNames.length, getProp = function (/*Array*/ parts, /*Boolean*/ create, /*Object*/ context) {\n        if (!context) {\n            //console.info(\"context参数为null\");\n            //if(parts[0] && dojo.scopeMap[parts[0]]) {\n            //\t// Voodoo code from the old days where \"dojo\" or \"dijit\" maps to some special object\n            //\t// rather than just window.dojo\n            //\tcontext = dojo.scopeMap[parts.shift()][1];\n            //}else{\n            //\tcontext = dojo.global;\n            //}\n            context = window;\n        }\n        try {\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i];\n                if (!(p in context)) {\n                    if (create) {\n                        context[p] = {};\n                    }\n                    else {\n                        return; // return undefined\n                    }\n                }\n                context = context[p];\n            }\n            return context; // mixed\n        }\n        catch (e) {\n            // \"p in context\" throws an exception when context is a number, boolean, etc. rather than an object,\n            // so in that corner case just return undefined (by having no return statement)\n        }\n    }, opts = Object.prototype.toString, efficient = function (obj, offset, startWith) {\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\n    }, _pattern = /\\{([^\\}]+)\\}/g;\n    // Module export\n    var lang = {\n        // summary:\n        //\t\tThis module defines Javascript language extensions.\n        // _extraNames: String[]\n        //\t\tLists property names that must be explicitly processed during for-in iteration\n        //\t\tin environments that have has(\"bug-for-in-skips-shadowed\") true.\n        _extraNames: _extraNames,\n        _mixin: function (dest, source, copyFunc) {\n            // summary:\n            //\t\tCopies/adds all properties of source to dest; returns dest.\n            // dest: Object\n            //\t\tThe object to which to copy/add all properties contained in source.\n            // source: Object\n            //\t\tThe object from which to draw all properties to copy into dest.\n            // copyFunc: Function?\n            //\t\tThe process used to copy/add a property in source; defaults to the Javascript assignment operator.\n            // returns:\n            //\t\tdest, as modified\n            // description:\n            //\t\tAll properties, including functions (sometimes termed \"methods\"), excluding any non-standard extensions\n            //\t\tfound in Object.prototype, are copied/added to dest. Copying/adding each particular property is\n            //\t\tdelegated to copyFunc (if any); copyFunc defaults to the Javascript assignment operator if not provided.\n            //\t\tNotice that by default, _mixin executes a so-called \"shallow copy\" and aggregate types are copied/added by reference.\n            var name, s, i, empty = {};\n            for (name in source) {\n                // the (!(name in empty) || empty[name] !== s) condition avoids copying properties in \"source\"\n                // inherited from Object.prototype.\t For example, if dest has a custom toString() method,\n                // don't overwrite it with the toString() method that source inherited from Object.prototype\n                s = source[name];\n                if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                    dest[name] = copyFunc ? copyFunc(s) : s;\n                }\n            }\n            return dest; // Object\n        },\n        mixin: function (dest, sources) {\n            ///<summary> Copies/adds all properties of one or more sources to dest; returns dest.</summary>\t\n            ///<param  name=\"dest\" type=\"Object\">The object to which to copy/add all properties contained in source. If dest is falsy, then a new object is manufactured before copying/adding properties begins.</param>\n            ///<param  name=\"sources\" type=\"Object...\">One of more objects from which to draw all properties to copy into dest. sources are processed left-to-right and if more than one of these objects contain the same property name, the right-most value \"wins\".</param>\t\n            ///<returns type= \"Object\">\n            //\t\tdest, as modified\n            // description:\n            //\t\tAll properties, including functions (sometimes termed \"methods\"), excluding any non-standard extensions\n            //\t\tfound in Object.prototype, are copied/added from sources to dest. sources are processed left to right.\n            //\t\tThe Javascript assignment operator is used to copy/add each property; therefore, by default, mixin\n            //\t\texecutes a so-called \"shallow copy\" and aggregate types are copied/added by reference.\n            // example:\n            //\t\tmake a shallow copy of an object\n            //\t|\tvar copy = lang.mixin({}, source);\n            // example:\n            //\t\tmany class constructors often take an object which specifies\n            //\t\tvalues to be configured on the object. In this case, it is\n            //\t\toften simplest to call `lang.mixin` on the `this` object:\n            //\t|\tdeclare(\"acme.Base\", null, {\n            //\t|\t\tconstructor: function(properties){\n            //\t|\t\t\t// property configuration:\n            //\t|\t\t\tlang.mixin(this, properties);\n            //\t|\n            //\t|\t\t\tconsole.log(this.quip);\n            //\t|\t\t\t//\t...\n            //\t|\t\t},\n            //\t|\t\tquip: \"I wasn't born yesterday, you know - I've seen movies.\",\n            //\t|\t\t// ...\n            //\t|\t});\n            //\t|\n            //\t|\t// create an instance of the class and configure it\n            //\t|\tvar b = new acme.Base({quip: \"That's what it does!\" });\n            // example:\n            //\t\tcopy in properties from multiple objects\n            //\t|\tvar flattened = lang.mixin(\n            //\t|\t\t{\n            //\t|\t\t\tname: \"Frylock\",\n            //\t|\t\t\tbraces: true\n            //\t|\t\t},\n            //\t|\t\t{\n            //\t|\t\t\tname: \"Carl Brutanananadilewski\"\n            //\t|\t\t}\n            //\t|\t);\n            //\t|\n            //\t|\t// will print \"Carl Brutanananadilewski\"\n            //\t|\tconsole.log(flattened.name);\n            //\t|\t// will print \"true\"\n            //\t|\tconsole.log(flattened.braces);\n            if (!dest) {\n                dest = {};\n            }\n            for (var i = 1, l = arguments.length; i < l; i++) {\n                lang._mixin(dest, arguments[i]);\n            }\n            return dest; // Object\n        },\n        setObject: function (name, value, context) {\n            // summary:\n            //\t\tSet a property from a dot-separated string, such as \"A.B.C\"\n            // description:\n            //\t\tUseful for longer api chains where you have to test each object in\n            //\t\tthe chain, or when you have an object reference in string format.\n            //\t\tObjects are created as needed along `path`. Returns the passed\n            //\t\tvalue if setting is successful or `undefined` if not.\n            // name: String\n            //\t\tPath to a property, in the form \"A.B.C\".\n            // value: anything\n            //\t\tvalue or object to place at location given by name\n            // context: Object?\n            //\t\tOptional. Object to use as root of path. Defaults to\n            //\t\t`dojo.global`.\n            // example:\n            //\t\tset the value of `foo.bar.baz`, regardless of whether\n            //\t\tintermediate objects already exist:\n            //\t| lang.setObject(\"foo.bar.baz\", value);\n            // example:\n            //\t\twithout `lang.setObject`, we often see code like this:\n            //\t| // ensure that intermediate objects are available\n            //\t| if(!obj[\"parent\"]){ obj.parent = {}; }\n            //\t| if(!obj.parent[\"child\"]){ obj.parent.child = {}; }\n            //\t| // now we can safely set the property\n            //\t| obj.parent.child.prop = \"some value\";\n            //\t\twhereas with `lang.setObject`, we can shorten that to:\n            //\t| lang.setObject(\"parent.child.prop\", \"some value\", obj);\n            var parts = name.split(\".\"), p = parts.pop(), obj = getProp(parts, true, context);\n            return obj && p ? (obj[p] = value) : undefined; // Object\n        },\n        getObject: function (name, create, context) {\n            // summary:\n            //\t\tGet a property from a dot-separated string, such as \"A.B.C\"\n            // description:\n            //\t\tUseful for longer api chains where you have to test each object in\n            //\t\tthe chain, or when you have an object reference in string format.\n            // name: String\n            //\t\tPath to an property, in the form \"A.B.C\".\n            // create: Boolean?\n            //\t\tOptional. Defaults to `false`. If `true`, Objects will be\n            //\t\tcreated at any point along the 'path' that is undefined.\n            // context: Object?\n            //\t\tOptional. Object to use as root of path. Defaults to\n            //\t\t'dojo.global'. Null may be passed.\n            return getProp(name ? name.split(\".\") : [], create, context); // Object\n        },\n        exists: function (name, obj) {\n            // summary:\n            //\t\tdetermine if an object supports a given method\n            // description:\n            //\t\tuseful for longer api chains where you have to test each object in\n            //\t\tthe chain. Useful for object and method detection.\n            // name: String\n            //\t\tPath to an object, in the form \"A.B.C\".\n            // obj: Object?\n            //\t\tObject to use as root of path. Defaults to\n            //\t\t'dojo.global'. Null may be passed.\n            // example:\n            //\t| // define an object\n            //\t| var foo = {\n            //\t|\t\tbar: { }\n            //\t| };\n            //\t|\n            //\t| // search the global scope\n            //\t| lang.exists(\"foo.bar\"); // true\n            //\t| lang.exists(\"foo.bar.baz\"); // false\n            //\t|\n            //\t| // search from a particular scope\n            //\t| lang.exists(\"bar\", foo); // true\n            //\t| lang.exists(\"bar.baz\", foo); // false\n            return lang.getObject(name, false, obj) !== undefined; // Boolean\n        },\n        // Crockford (ish) functions\n        isString: function (it) {\n            // summary:\n            //\t\tReturn true if it is a String\n            // it: anything\n            //\t\tItem to test.\n            return (typeof it == \"string\" || it instanceof String); // Boolean\n        },\n        isArray: function (it) {\n            // summary:\n            //\t\tReturn true if it is an Array.\n            //\t\tDoes not work on Arrays created in other windows.\n            // it: anything\n            //\t\tItem to test.\n            return it && (it instanceof Array || typeof it == \"array\"); // Boolean\n        },\n        isFunction: function (it) {\n            // summary:\n            //\t\tReturn true if it is a Function\n            // it: anything\n            //\t\tItem to test.\n            return opts.call(it) === \"[object Function]\";\n        },\n        isObject: function (it) {\n            // summary:\n            //\t\tReturns true if it is a JavaScript object (or an Array, a Function\n            //\t\tor null)\n            // it: anything\n            //\t\tItem to test.\n            return it !== undefined &&\n                (it === null || typeof it == \"object\" || lang.isArray(it) || lang.isFunction(it)); // Boolean\n        },\n        isArrayLike: function (it) {\n            // summary:\n            //\t\tsimilar to isArray() but more permissive\n            // it: anything\n            //\t\tItem to test.\n            // returns:\n            //\t\tIf it walks like a duck and quacks like a duck, return `true`\n            // description:\n            //\t\tDoesn't strongly test for \"arrayness\".  Instead, settles for \"isn't\n            //\t\ta string or number and has a length property\". Arguments objects\n            //\t\tand DOM collections will return true when passed to\n            //\t\tisArrayLike(), but will return false when passed to\n            //\t\tisArray().\n            return it && it !== undefined && // Boolean\n                // keep out built-in constructors (Number, String, ...) which have length\n                // properties\n                !lang.isString(it) && !lang.isFunction(it) &&\n                !(it.tagName && it.tagName.toLowerCase() == 'form') &&\n                (lang.isArray(it) || isFinite(it.length));\n        },\n        isAlien: function (it) {\n            // summary:\n            //\t\tReturns true if it is a built-in function or some other kind of\n            //\t\toddball that *should* report as a function but doesn't\n            return it && !lang.isFunction(it) && /\\{\\s*\\[native code\\]\\s*\\}/.test(String(it)); // Boolean\n        },\n        extend: function (ctor, props) {\n            // summary:\n            //\t\tAdds all properties and methods of props to constructor's\n            //\t\tprototype, making them available to all instances created with\n            //\t\tconstructor.\n            // ctor: Object\n            //\t\tTarget constructor to extend.\n            // props: Object\n            //\t\tOne or more objects to mix into ctor.prototype\n            for (var i = 1, l = arguments.length; i < l; i++) {\n                lang._mixin(ctor.prototype, arguments[i]);\n            }\n            return ctor; // Object\n        },\n        _hitchArgs: function (scope, method) {\n            var pre = lang._toArray(arguments, 2);\n            var named = lang.isString(method);\n            return function () {\n                // arrayify arguments\n                var args = lang._toArray(arguments);\n                // locate our method\n                var f = named ? (scope || window)[method] : method;\n                // invoke with collected args\n                return f && f.apply(scope || this, pre.concat(args)); // mixed\n            }; // Function\n        },\n        hitch: function (method, scope) {\n            var it = scope || window;\n            if ((typeof method == \"string\" || method instanceof String)) {\n                if (!it[method]) {\n                    throw (['lang.hitch: scope[\"', method, '\"] is null (scope=\"', it, '\")'].join(''));\n                }\n                return function () { return it[method].apply(it, arguments || []); }; // Function\n            }\n            return !it ? method : function () { return method.apply(it, arguments || []); }; // Function\n        },\n        delegate: (function () {\n            // boodman/crockford delegation w/ cornford optimization\n            function TMP() { }\n            return function (obj, props) {\n                TMP.prototype = obj;\n                var tmp = new TMP();\n                TMP.prototype = null;\n                if (props) {\n                    lang._mixin(tmp, props);\n                }\n                return tmp; // Object\n            };\n        })(),\n        /*=====\n        delegate: function(obj, props){\n            // summary:\n            //\t\tReturns a new object which \"looks\" to obj for properties which it\n            //\t\tdoes not have a value for. Optionally takes a bag of properties to\n            //\t\tseed the returned object with initially.\n            // description:\n            //\t\tThis is a small implementation of the Boodman/Crockford delegation\n            //\t\tpattern in JavaScript. An intermediate object constructor mediates\n            //\t\tthe prototype chain for the returned object, using it to delegate\n            //\t\tdown to obj for property lookup when object-local lookup fails.\n            //\t\tThis can be thought of similarly to ES4's \"wrap\", save that it does\n            //\t\tnot act on types but rather on pure objects.\n            // obj: Object\n            //\t\tThe object to delegate to for properties not found directly on the\n            //\t\treturn object or in props.\n            // props: Object...\n            //\t\tan object containing properties to assign to the returned object\n            // returns:\n            //\t\tan Object of anonymous type\n            // example:\n            //\t|\tvar foo = { bar: \"baz\" };\n            //\t|\tvar thinger = lang.delegate(foo, { thud: \"xyzzy\"});\n            //\t|\tthinger.bar == \"baz\"; // delegated to foo\n            //\t|\tfoo.thud == undefined; // by definition\n            //\t|\tthinger.thud == \"xyzzy\"; // mixed in from props\n            //\t|\tfoo.bar = \"thonk\";\n            //\t|\tthinger.bar == \"thonk\"; // still delegated to foo's bar\n        },\n        =====*/\n        _toArray: true ?\n            (function () {\n                function slow(obj, offset, startWith) {\n                    var arr = startWith || [];\n                    for (var x = offset || 0; x < obj.length; x++) {\n                        arr.push(obj[x]);\n                    }\n                    return arr;\n                }\n                return function (obj) {\n                    return ((obj.item) ? slow : efficient).apply(this, arguments);\n                };\n            })() : efficient,\n        /*=====\n         _toArray: function(obj, offset, startWith){\n             // summary:\n             //\t\tConverts an array-like object (i.e. arguments, DOMCollection) to an\n             //\t\tarray. Returns a new Array with the elements of obj.\n             // obj: Object\n             //\t\tthe object to \"arrayify\". We expect the object to have, at a\n             //\t\tminimum, a length property which corresponds to integer-indexed\n             //\t\tproperties.\n             // offset: Number?\n             //\t\tthe location in obj to start iterating from. Defaults to 0.\n             //\t\tOptional.\n             // startWith: Array?\n             //\t\tAn array to pack with the properties of obj. If provided,\n             //\t\tproperties in obj are appended at the end of startWith and\n             //\t\tstartWith is the returned array.\n         },\n         =====*/\n        partial: function (/*Function|String*/ method /*, ...*/) {\n            // summary:\n            //\t\tsimilar to hitch() except that the scope object is left to be\n            //\t\twhatever the execution context eventually becomes.\n            // description:\n            //\t\tCalling lang.partial is the functional equivalent of calling:\n            //\t\t|\tlang.hitch(null, funcName, ...);\n            // method:\n            //\t\tThe function to \"wrap\"\n            var arr = [null];\n            return lang.hitch.apply(arr.concat(lang._toArray(arguments, window))); // Function\n        },\n        clone: function (/*anything*/ src) {\n            // summary:\n            //\t\tClones objects (including DOM nodes) and all children.\n            //\t\tWarning: do not clone cyclic structures.\n            // src:\n            //\t\tThe object to clone\n            if (!src || typeof src != \"object\" || lang.isFunction(src)) {\n                // null, undefined, any non-object, or function\n                return src; // anything\n            }\n            if (src.nodeType && \"cloneNode\" in src) {\n                // DOM Node\n                return src.cloneNode(true); // Node\n            }\n            if (src instanceof Date) {\n                // Date\n                return new Date(src.getTime()); // Date\n            }\n            if (src instanceof RegExp) {\n                // RegExp\n                return new RegExp(src); // RegExp\n            }\n            var r, i, l;\n            if (lang.isArray(src)) {\n                // array\n                r = [];\n                for (i = 0, l = src.length; i < l; ++i) {\n                    if (i in src) {\n                        r.push(lang.clone(src[i]));\n                    }\n                }\n                // we don't clone functions for performance reasons\n                //\t\t}else if(d.isFunction(src)){\n                //\t\t\t// function\n                //\t\t\tr = function(){ return src.apply(this, arguments); };\n            }\n            else {\n                // generic objects\n                r = src.constructor ? new src.constructor() : {};\n            }\n            return lang._mixin(r, src, lang.clone);\n        },\n        trim: String.prototype.trim ?\n            function (str) { return str.trim(); } :\n            function (str) { return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); },\n        /*=====\n         trim: function(str){\n             // summary:\n             //\t\tTrims whitespace from both sides of the string\n             // str: String\n             //\t\tString to be trimmed\n             // returns: String\n             //\t\tReturns the trimmed string\n             // description:\n             //\t\tThis version of trim() was selected for inclusion into the base due\n             //\t\tto its compact size and relatively good performance\n             //\t\t(see [Steven Levithan's blog](http://blog.stevenlevithan.com/archives/faster-trim-javascript)\n             //\t\tUses String.prototype.trim instead, if available.\n             //\t\tThe fastest but longest version of this function is located at\n             //\t\tlang.string.trim()\n         },\n         =====*/\n        replace: function (tmpl, map, pattern) {\n            // summary:\n            //\t\tPerforms parameterized substitutions on a string. Throws an\n            //\t\texception if any parameter is unmatched.\n            // tmpl: String\n            //\t\tString to be used as a template.\n            // map: Object|Function\n            //\t\tIf an object, it is used as a dictionary to look up substitutions.\n            //\t\tIf a function, it is called for every substitution with following parameters:\n            //\t\ta whole match, a name, an offset, and the whole template\n            //\t\tstring (see https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/replace\n            //\t\tfor more details).\n            // pattern: RegEx?\n            //\t\tOptional regular expression objects that overrides the default pattern.\n            //\t\tMust be global and match one item. The default is: /\\{([^\\}]+)\\}/g,\n            //\t\twhich matches patterns like that: \"{xxx}\", where \"xxx\" is any sequence\n            //\t\tof characters, which doesn't include \"}\".\n            // returns: String\n            //\t\tReturns the substituted string.\n            // example:\n            //\t|\t// uses a dictionary for substitutions:\n            //\t|\tlang.replace(\"Hello, {name.first} {name.last} AKA {nick}!\",\n            //\t|\t\t{\n            //\t|\t\t\tnick: \"Bob\",\n            //\t|\t\t\tname: {\n            //\t|\t\t\t\tfirst:\t\"Robert\",\n            //\t|\t\t\t\tmiddle: \"X\",\n            //\t|\t\t\t\tlast:\t\t\"Cringely\"\n            //\t|\t\t\t}\n            //\t|\t\t});\n            //\t|\t// returns: Hello, Robert Cringely AKA Bob!\n            // example:\n            //\t|\t// uses an array for substitutions:\n            //\t|\tlang.replace(\"Hello, {0} {2}!\",\n            //\t|\t\t[\"Robert\", \"X\", \"Cringely\"]);\n            //\t|\t// returns: Hello, Robert Cringely!\n            // example:\n            //\t|\t// uses a function for substitutions:\n            //\t|\tfunction sum(a){\n            //\t|\t\tvar t = 0;\n            //\t|\t\tarrayforEach(a, function(x){ t += x; });\n            //\t|\t\treturn t;\n            //\t|\t}\n            //\t|\tlang.replace(\n            //\t|\t\t\"{count} payments averaging {avg} USD per payment.\",\n            //\t|\t\tlang.hitch(\n            //\t|\t\t\t{ payments: [11, 16, 12] },\n            //\t|\t\t\tfunction(_, key){\n            //\t|\t\t\t\tswitch(key){\n            //\t|\t\t\t\t\tcase \"count\": return this.payments.length;\n            //\t|\t\t\t\t\tcase \"min\":\t\treturn Math.min.apply(Math, this.payments);\n            //\t|\t\t\t\t\tcase \"max\":\t\treturn Math.max.apply(Math, this.payments);\n            //\t|\t\t\t\t\tcase \"sum\":\t\treturn sum(this.payments);\n            //\t|\t\t\t\t\tcase \"avg\":\t\treturn sum(this.payments) / this.payments.length;\n            //\t|\t\t\t\t}\n            //\t|\t\t\t}\n            //\t|\t\t)\n            //\t|\t);\n            //\t|\t// prints: 3 payments averaging 13 USD per payment.\n            // example:\n            //\t|\t// uses an alternative PHP-like pattern for substitutions:\n            //\t|\tlang.replace(\"Hello, ${0} ${2}!\",\n            //\t|\t\t[\"Robert\", \"X\", \"Cringely\"], /\\$\\{([^\\}]+)\\}/g);\n            //\t|\t// returns: Hello, Robert Cringely!\n            return tmpl.replace(pattern || _pattern, lang.isFunction(map) ?\n                map : function (_, k) { return lang.getObject(k, false, map); });\n        },\n        opType: {\n            //新建、添加\n            added: \"new\",\n            //删除\n            deleted: \"deleted\",\n            //修改\n            modified: \"modified\"\n        }\n    };\n    return lang;\n});\n","define(\"RxmWidgetBase\", [\"RxmLang\"], function (lang) {\n    ///<summary></summary>\n    ///<param name=\"lang\" value=\"PdwebLang\"></param>\n    ///<param name=\"declare\" value=\"PdwebDeclare\"></param>\n    function widgetBase() {\n    }\n    widgetBase.prototype.On = function (selector, eventName, eventFunction, functionScope, data) {\n        ///<summary>绑定eventName事件函数（eventfunction）向selector 指定的对象，并指定funttionscope作为函数this，</summary>\n        ///<param name=\"selector\" type=\"String\"  > 选择器</param>\n        ///<param name=\"eventName\" type=\"String\">事件名称，参见jquery事件</param>\n        ///<param name=\"eventfunction\" type=\"Function\">事件回教函数</param>\n        ///<param name=\"functionScope\" type=\"Object\">事件this对象，undefined时，原生的this</param>\n        var sco = functionScope;\n        if (typeof functionScope == \"undefined\") {\n            sco = this;\n        }\n        $(selector).on(eventName, data, lang.hitch(sco, eventFunction));\n    };\n    widgetBase.prototype.hitch = function (callbackFunction, thisObj) {\n        ///<summary>钩子函数</summary>\n        if (typeof thisObj === \"undefined\")\n            thisObj = this;\n        return lang.hitch(thisObj, callbackFunction);\n    };\n    return widgetBase;\n});\n","define('RxmInputSearch', [require.rxm.PageBase, require.rxm.BufferGrid], function (PageBase, Grid) {\n    var ClsFactory = function (config) {\n        var $searchWrap = $(\"#\" + config.id);\n        //search.html中定义\n        var _searchbarId = \"searchbar\";\n        var _gridId = \"search_gird\";\n        var _hotId = \"hot_gird\";\n        //自定义属性\n        var _searchUrl = $searchWrap.attr(\"rxmsearchurl\");\n        var _hotUrl = $searchWrap.attr(\"rxmhoturl\");\n        var _gridData = $searchWrap.attr('rxmgriddata');\n        var _hotData = $searchWrap.attr('rxmhotdata');\n        // var _gridData = typeof $searchWrap.attr('rxmgriddata')=='string'?JSON.parse(($searchWrap.attr('rxmgriddata').replace(/\\'/g,'\"'))):[]\n        // var _hotData = typeof $searchWrap.attr('rxmhotdata')=='string'?JSON.parse(($searchWrap.attr('rxmhotdata').replace(/\\'/g,'\"'))):[]\n        var _searchField = $searchWrap.attr(\"rxmsearchfield\");\n        var _hotSearchField = $searchWrap.attr(\"rxmhotsearchfield\");\n        var _title = $searchWrap.attr(\"rxmtitle\");\n        var _multi = typeof $searchWrap.attr('rxmmulti') != 'undefined';\n        //转化form radio的值,对象转化为布尔\n        function getRadioValue(arg) {\n            var radioValue = false;\n            if (typeof arg == \"boolean\") {\n                radioValue = arg;\n            }\n            else if (typeof arg == \"string\") {\n                radioValue = (arg == \"true\");\n            }\n            return radioValue;\n        }\n        //转化显示字段格式\n        function getData(arg) {\n            var datas = [];\n            var strs = new Array();\n            if (!!arg) {\n                arg = arg.trim();\n                if (arg.indexOf(\",\") != -1) {\n                    strs = arg.split(\",\");\n                }\n                else {\n                    strs.push(arg);\n                }\n                for (i = 0; i < strs.length; i++) {\n                    var data = {\n                        \"field\": strs[i]\n                    };\n                    datas.push(data);\n                }\n            }\n            return datas;\n        }\n        var _init = function (the) {\n            $searchWrap.tap(function () {\n                var ddd = {\n                    id: _searchbarId,\n                    searchGrid: {\n                        /**grid id */\n                        gridId: _gridId,\n                        /**gird url */\n                        searchUrl: _searchUrl,\n                        /** gird显示数据 */\n                        gridData: getData(_gridData),\n                        /**搜索字段 */\n                        searchField: _searchField,\n                    },\n                    hotGrid: {\n                        /**热词grid id */\n                        hotId: _hotId,\n                        /**热词url */\n                        hotUrl: _hotUrl,\n                        /**热词显示数据 */\n                        hotData: getData(_hotData),\n                        /**热词搜索字段 */\n                        hotSearchField: _hotSearchField,\n                    },\n                    title: _title,\n                    multi: _multi,\n                    afterClose: function (evt, args) {\n                        var showData = [];\n                        if (!args.data) {\n                            $.each(args, function (index, obj) {\n                                showData = showData.concat(obj);\n                            });\n                        }\n                        // var grid = {\n                        //     id: \"showData\",\n                        //     layout: _gridData,\n                        //     data: showData\n                        // };\n                        // var dataGrid = new Grid(grid);\n                        // dataGrid.createRow = the.createRow\n                        // dataGrid.reload();\n                        $searchWrap.trigger(\"SearchSelected\", {\n                            selected: showData\n                        });\n                    }\n                };\n                PageBase.rxmSearch(ddd /**, slidebar*/);\n            });\n        };\n        var RxmInputSearch = function () {\n            // _init(this);\n        };\n        RxmInputSearch.prototype.init = function () {\n            _init(this);\n        };\n        RxmInputSearch.prototype.bindSearchSelected = function (arg, scope) {\n            // ///<param  name=\"arg\"  type=\"vo.orm.bindMsg.arg\"></param>\n            // if (typeof arg == \"boolean\" || typeof arg == \"undefined\") {\n            //     arg = {\n            //         fn: this._onFormValueChanged,\n            //     };\n            //     scope = this;\n            // }\n            var the = this;\n            if ($.isExist(scope)) {\n                the = scope;\n            }\n            if (!!arg.callback) {\n                arg.fn = arg.callback;\n            }\n            $searchWrap.on(\"SearchSelected\", arg.data, $.proxy(arg.fn, the), arg.one);\n        };\n        RxmInputSearch.prototype.createRow = function (grid, row, $tr) {\n            //生成$tr对象 \n            $tdIcon = $('<td class=\"rxm-td-icon\" style=\"vertical-align:middle;\"></td>');\n            $IconDiv = $('<div  style=\"vertical-align:middle;\"></div>');\n            $td = $('<td></td>');\n            $tdCheck = $('<td style=\"display:none;\" class=\"fix rxm-td-checkbox\"></td>');\n            tdSpan = \"<span class='rxm-col-value'>\" + row.msgContent + \"</span></br>\";\n            $td.append(tdSpan + \"<span style='font-size: 10px;color: gray;'>\" + row.msgTitle + \"</span>\");\n            $tr.append($td);\n            //$tr添加内容列\n            $tr.append($td);\n            // //$tr添加checkbox列  默认此列为隐藏状态 长按才会显示\n            // $tdCheck.append('<input class=\"rxm-multi-check\" type=\"checkbox\">');\n            // $tr.append($tdCheck);\n            return $tr;\n        };\n        //设置搜索url\n        RxmInputSearch.prototype.attrSearchUrl = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmsearchurl\", arg);\n            }\n            return $searchWrap.attr(\"rxmsearchurl\");\n        };\n        //设置热词url\n        RxmInputSearch.prototype.attrHotUrl = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmhoturl\", arg);\n            }\n            return $searchWrap.attr(\"rxmhoturl\");\n        };\n        //设置搜索表格显示内容\n        RxmInputSearch.prototype.attrGridData = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmgriddata\", arg);\n            }\n            return $searchWrap.attr(\"rxmgriddata\");\n        };\n        //设置热词表格显示内容\n        RxmInputSearch.prototype.attrHotData = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmhotdata\", arg);\n            }\n            return $searchWrap.attr(\"rxmhotdata\");\n        };\n        //设置搜索表格搜索字段\n        RxmInputSearch.prototype.attrSearchField = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmsearchfield\", arg);\n            }\n            return $searchWrap.attr(\"rxmsearchfield\");\n        };\n        //设置热词表格搜索字段\n        RxmInputSearch.prototype.attrHotSearchField = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmhotsearchfield\", arg);\n            }\n            return $searchWrap.attr(\"rxmhotsearchfield\");\n        };\n        //设置是否多选\n        RxmInputSearch.prototype.attrRxmmulti = function (arg) {\n            if (typeof arg != \"undefined\") {\n                arg = getRadioValue(arg);\n                if (arg) {\n                    $searchWrap.attr('rxmmulti', 'rxmmulti');\n                }\n                else {\n                    $searchWrap.removeAttr('rxmmulti');\n                }\n            }\n            return typeof $searchWrap.attr('rxmmulti') != 'undefined';\n        };\n        //设置搜索标题\n        RxmInputSearch.prototype.attrTitle = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmtitle\", arg);\n            }\n            return $searchWrap.attr(\"rxmtitle\");\n        };\n        //设置搜索表格每页显示数据条数\n        RxmInputSearch.prototype.attrPageSize = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmpagesize\", arg);\n            }\n            return $searchWrap.attr(\"rxmpagesize\");\n        };\n        //设置热词表格每页显示数据条数\n        RxmInputSearch.prototype.attrHotPageSize = function (arg) {\n            if (typeof arg != \"undefined\") {\n                $searchWrap.attr(\"rxmhotpagesize\", arg);\n            }\n            return $searchWrap.attr(\"rxmhotpagesize\");\n        };\n        var ret = new RxmInputSearch(config);\n        require(require.rxm.PageBase).bindPageReady({ callback: $.proxy(ret.init, ret), one: false });\n        return ret;\n    };\n    return ClsFactory;\n});\n","/**\n * @name  高级搜索\n * @author  hcx 2018-05-29 13:42:45\n */\ndefine('RxmSearchGrid', [\n    require.rxm.Search, require.rxm.MobileGrid, require.rxm.PageBase\n], /**\n   * @param {rxm.page} PageBase\n   */ function (rxmSearch, Grid, PageBase) {\n    /**\n     *\n     * @param {rxm.search.config} config\n     */\n    var ClsFactory = function (config) {\n        //搜索条件\n        var searchRow;\n        //是否显示热词grid\n        var isHotSearch = typeof config.searchGrid != \"undefined\";\n        /**搜索gird 行点击事件 单选 */\n        var searchGridClick = function (row) {\n            if (typeof config.multi != \"undefined\" && !config.multi) {\n                ret = {};\n                ret[0] = row;\n                PageBase.closePage(ret);\n            }\n        };\n        /** 搜索 grid */\n        var gridSearchConfig = {\n            id: config.searchGrid.gridId,\n            pageSize: 21,\n            // searchbar: false,\n            multi: config.multi,\n            // textEllipsis: true,\n            layout: config.searchGrid.gridData,\n            //行数据点击事件\n            rowevent: [{\n                    // field: \"msgTr\",\n                    click: function (e, data) {\n                        //获取当前行index\n                        var index = data.index;\n                        //获取当前行数据\n                        var row = data.row;\n                        //显示\n                        searchGridClick(row);\n                    }\n                }],\n            //初始化表格数据,请求ajax服务地址\n            data: {\n                type: \"URL\",\n                value: getServer() + config.searchGrid.searchUrl\n            }\n        };\n        var searchGrid = new Grid(gridSearchConfig);\n        var myCreateRow = function (grid, row, $tr) {\n            //创建表格行数据   共4列  icon 数据内容 (标题+内容)  右向箭头   复选框(默认隐藏)  \n            var $tdIcon = $('<td class=\"rxm-td-icon\"></td>');\n            var $tdInfo = $('<td></td>');\n            var $tdArrow = $('<td class=\"rxm-td-arrow\" ></td>');\n            var $tdCheckbox = $('<td class=\"rxm-td-checkbox fix\"></td>');\n            var firstField = '1';\n            //循环创建icon与数据列\n            for (var j = 0, item; item = this._config.layout[j++]; j < item.length) {\n                var tdName = item.name;\n                var tdValue = item.format ? item.format({ \"row\": row }) : row[item.field];\n                if (item.field == \"icon\") {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    $tdIcon.append(tdValue);\n                    $tr.append($tdIcon);\n                }\n                else {\n                    tdValue = (tdValue || tdValue == 0) ? \"\" + tdValue : \"\";\n                    if (firstField === '1') {\n                        if (typeof tdName != \"undefined\") {\n                            $tdInfo.append(\"<span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                        else {\n                            $tdInfo.append(\"<span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                            firstField = '2';\n                        }\n                    }\n                    else {\n                        if (typeof tdName != \"undefined\") {\n                            //其他字段换行\n                            $tdInfo.append(\"</br><span class='rxm-col-name'>\" + tdName + '&nbsp;:&nbsp;' + \"</span><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                        else {\n                            //其他字段换行\n                            $tdInfo.append(\"</br><span class='rxm-col-value'>\" + tdValue + \"</span>\");\n                        }\n                    }\n                }\n                $tr.append($tdInfo);\n            }\n            //创建checkbox列   multi属性配置为true：多选框      false：单选按钮\n            if (config.multi) {\n                if ((typeof this._config.multi != \"undefined\") && (this._config.multi)) {\n                    $tdCheckbox.append('<input class=\"rxm-multi-check\" type=\"' + (this._config.multi ? 'checkbox' : 'radio') + '\" name=\"s_gird_multi_' + (this._config.id) + '\" ' + (row[\"_checked\"] ? \"checked\" : \"\") + '>');\n                    $tr.append($tdCheckbox);\n                }\n            }\n            //创建箭头列 \n            // $tdArrow.append($('<img src=\"' + _arrowImg + '\"/>'));\n            // $tr.append($tdArrow);\n            //渲染表格行后触发\n            return $tr;\n        };\n        searchGrid.init = function () {\n            this.createRow = myCreateRow;\n            this.bindSwipeInBottom();\n            this.bindSwipeInTop();\n            this.bindSwipeInTopEnd();\n            this.bindSwipeInBottomEnd();\n            this.reload();\n        };\n        //如多选，显示确定，取消按钮；单选则不显示\n        if (typeof config.multi != \"undefined\" && config.multi) {\n            $(\"#toolbar\").show();\n            $(\"#confirmBtn\").tap(function () {\n                var data = searchGrid.getSelectedData();\n                PageBase.closePage(data);\n            });\n            $(\"#cancelBtn\").tap(function () {\n                searchGrid.uncheckRow();\n            });\n        }\n        else {\n            $(\"#toolbar\").hide();\n        }\n        if (isHotSearch) {\n            var hotGridClick = function (row) {\n                searchRow = row;\n                $(\"#\" + config.id).val(row[config.hotGrid.hotSearchField]);\n                searchGridReload();\n            };\n            var gridHotConfig = {\n                id: config.hotGrid.hotId,\n                pageSize: 21,\n                // searchbar: false,\n                multi: false,\n                // textEllipsis: true,\n                layout: config.hotGrid.hotData,\n                //行数据点击事件\n                rowevent: [{\n                        // field: \"msgTr\",\n                        click: function (e, data) {\n                            //获取当前行index\n                            var index = data.index;\n                            //获取当前行数据\n                            var row = data.row;\n                            //显示\n                            hotGridClick(row);\n                        }\n                    }],\n                //初始化表格数据,请求ajax服务地址\n                data: {\n                    type: \"URL\",\n                    value: getServer() + config.hotGrid.hotUrl\n                }\n            };\n            var hotGrid = new Grid(gridHotConfig);\n            hotGrid.init = function () {\n                this.createRow = myCreateRow;\n            };\n        }\n        /**\n         * 热词gird reload\n         */\n        var searchOnInput = function () {\n            var queryField = $(\"#\" + config.id).val().trim();\n            $(\"#\" + config.searchGrid.gridId).hide();\n            $(\"#toolbar\").hide();\n            /**画热词grid */\n            hotGrid.init();\n            var query = {};\n            query[config.hotGrid.hotSearchField] = queryField || \"\";\n            hotGrid.reload({\n                queryParam: query\n            });\n            $(\"#\" + config.hotGrid.hotId).show();\n        };\n        /**\n         * 搜索grid reload\n         */\n        var searchGridReload = function () {\n            var queryField = $(\"#\" + config.id).val().trim();\n            $(\"#\" + config.hotGrid.hotId).hide();\n            $(\"#\" + config.searchGrid.gridId).show();\n            if (typeof config.multi != \"undefined\" && config.multi) {\n                $(\"#toolbar\").show();\n            }\n            var query = {};\n            query[config.searchGrid.searchField] = queryField || \"\";\n            searchGrid.reload({\n                queryParam: (typeof searchRow != \"undefined\") ? searchRow : query\n            });\n        };\n        /** 搜索框*/\n        var search = new rxmSearch(config);\n        /**搜索框输入值发生变化事件重写 */\n        search.oninput = function () {\n            if (isHotSearch) {\n                searchOnInput();\n            }\n            else {\n                searchGridReload();\n            }\n        };\n        /**搜索框聚焦时 事件重写 */\n        search.onfocus = function () {\n            if (isHotSearch) {\n                searchOnInput();\n            }\n            else {\n                searchGridReload();\n            }\n        };\n        /**键盘确定按钮 */\n        search.onkeypress = function (e) {\n            if (e.keyCode == 13 || e.keyCode == 9) {\n                searchGridReload();\n            }\n        };\n        /**点击搜索按钮，搜索 */\n        $(\"#searchButton\").tap(function () {\n            searchGridReload();\n        });\n        var RxmSearchGrid = function (config) {\n        };\n        RxmSearchGrid.prototype.init = function () {\n            $(\"#\" + config.hotGrid.hotId).hide();\n            // $(\"#\"+config.gridId).height(\"450px\");\n            searchGrid.init();\n            search.init();\n        };\n        return new RxmSearchGrid(config);\n    };\n    return ClsFactory;\n});\n","define('RxmSearch', [], function () {\n    var clsdef = {};\n    var ClsFactory = function (config) {\n        var id = config.id;\n        /**\n         * @class\n         * @constructor\n         * @param {} config\n         */\n        var RxmSearch = function (config) {\n        };\n        /**表单项有转变 */\n        RxmSearch.prototype.onchange = function (e, data) {\n            ///<param name=\"e\" value=\"event\"></param>\n            console.log(\"change\");\n        };\n        RxmSearch.prototype.onfocus = function (e, data) {\n            ///<param name=\"e\" value=\"event\"></param>\n            console.log(\"focus\");\n        };\n        RxmSearch.prototype.onformchange = function (e, data) {\n            ///<param name=\"e\" value=\"event\"></param>\n            console.log(\"formchange\");\n        };\n        RxmSearch.prototype.onforminput = function (e, data) {\n            ///<param name=\"e\" value=\"event\"></param>\n            console.log(\"forminput\");\n        };\n        RxmSearch.prototype.oninput = function (e, data) {\n            ///<param name=\"e\" value=\"event\"></param>\n            console.log(\"input\");\n        };\n        RxmSearch.prototype.onselect = function (e, data) {\n            ///<param name=\"e\" value=\"event\"></param>\n            console.log(\"select\");\n        };\n        RxmSearch.prototype.onkeypress = function (e, data) {\n            if (e.keyCode == 13 || e.keyCode == 9) {\n                console.log(e.keyCode);\n            }\n        };\n        RxmSearch._inputEvtEnum = {\n            //onblur\tscript\t元素失去焦点时运行的脚本。\n            blur: \"blur\",\n            //onchange\tscript\t在元素值被改变时运行的脚本。\n            change: \"change\",\n            //oncontextmenu\tscript\t当上下文菜单被触发时运行的脚本,。\n            contextmenu: \"contextmenu\",\n            //onfocus\tscript\t当元素获得焦点时运行的脚本。,\n            focus: \"focus\",\n            //onformchange\tscript\t在表单改变时运行的脚本。\n            formchange: \"formchange\",\n            //onforminput\tscript\t当表单获得用户输入时运行的脚本。\n            forminput: \"forminput\",\n            //oninput\tscript\t当元素获得用户输入时运行的脚本。\n            input: \"input\",\n            //oninvalid\tscript\t当元素无效时运行的脚本。\n            invalid: \"invalid\",\n            //onreset\tscript\t当表单中的重置按钮被点击时触发。HTML5 中不支持。\n            reset: \"reset\",\n            //onselect\tscript\t在元素中文本被选中后触发。\n            select: \"select\",\n            //onsubmit\tscript\t在提交表单时触发。\n            submit: \"submit\",\n            //onbeforeunload\n            beforeunload: \"beforeunload\",\n            keypress: \"keypress\"\n        };\n        RxmSearch.prototype.init = function () {\n            // document.getElementById(id).addEventListener(RxmSearch._inputEvtEnum.change, $.proxy(this.onchange, this));\n            document.getElementById(id).addEventListener(RxmSearch._inputEvtEnum.focus, $.proxy(this.onfocus, this));\n            // document.getElementById(id).addEventListener(RxmSearch._inputEvtEnum.formchange, $.proxy(_onformchange, this));\n            // document.getElementById(id).addEventListener(RxmSearch._inputEvtEnum.forminput, $.proxy(_onforminput, this));\n            document.getElementById(id).addEventListener(RxmSearch._inputEvtEnum.input, $.proxy(this.oninput, this));\n            document.getElementById(id).addEventListener(RxmSearch._inputEvtEnum.select, $.proxy(this.onselect, this));\n            document.getElementById(id).addEventListener(RxmSearch._inputEvtEnum.keypress, $.proxy(this.onkeypress, this));\n        };\n        return new RxmSearch(config);\n    };\n    return ClsFactory;\n});\n","/**\n * 功能：给制定div、span、tbody等，包装一个block，可以block折叠、展开\n * 版本：v1.1\n * 参数：\n *      两种传值方式\n *      1. config 直接传入id（内容采用默认方式）\n *      2. config 传入config对象（可定义标题、标题处图标，展开、收缩图标，展开、收缩说明标题） 格式如：\n *      config = {\n *          // 元素id\n *          id: \"\",\n *          // 显示标题 ，默认为\"查询条件\"\n *          homeTitle: \"\"，\n *          // 标题左侧的图标\n *          homeIcon: \"\",\n *          // 展开图标\n *          expandIcon: \"\",\n *          // 展开提示\n *          expandTitle: \"\",\n *          // 折叠图标\n *          collapseIcon: \"\",\n *          // 折叠提示\n *          collapseTitle: \"\"\n *      }\n *\n * 调用方式：\n *      define([\"xxx/searchBlock\"], function (searchBlock){\n *          ...\n *          // 元素id\n *          var config = \"queryConditions\";\n *          searchBlock.init(config);\n *\n *          //\n *      })\n */\ndefine(\"RxmSearchBlock\", [], function () {\n    var util = require(require.rxm.PageBase);\n    var searchBlock = {};\n    //var _this;\n    //var $block;\n    searchBlock.init = function (config) {\n        var _this = this;\n        if (config === '' && !config.id) {\n            util.alert('请指定要绑定的id！');\n            return false;\n        }\n        // search块的id信息\n        this.id = config.id ? config.id : config;\n        // 如果已经加载了searchBlock，则不重复加载\n        if ($('#' + _this.id).parent('.pd-search-body').length > 0) {\n            return false;\n        }\n        // search块头部的标题\n        this.homeTitle = config.homeTitle ? config.homeTitle : '查询条件';\n        // search块头部右侧的图标\n        this.homeIcon = config.homeIcon ? config.homeIcon : 'fa fa-search';\n        // search块展开图标\n        this.expandIcon = config.expandIcon ? config.expandIcon : 'fa fa-angle-double-down';\n        // search块展开提示\n        this.expandTitle = config.expandTitle ? config.expandTitle : '展开';\n        // search块折叠图标\n        this.collapseIcon = config.collapseIcon ? config.collapseIcon : 'fa fa-angle-double-up';\n        // search块折叠提示\n        this.collapseTitle = config.collapseTitle ? config.collapseTitle : '折叠';\n        // 创建search块\n        createSearchBlock(_this);\n    };\n    // 创建search块\n    var createSearchBlock = function (_this) {\n        // search块主体\n        $('#' + _this.id).wrap('<div class=\"pd-search-body\"></div>');\n        var searchBody = $('#' + _this.id).parent('.pd-search-body');\n        // 默认块，作为search-body调整padding高度的临时div\n        searchBody.append('<div class=\"clearfix\"></div>');\n        // search块容器\n        searchBody.wrap('<div class=\"col-md-12 pd-search-container pd-expandMode\"></div>');\n        var $block = $('#' + _this.id).closest('.pd-search-container').wrap('<div class=\"col-md-12\"></div>');\n        // search标题\n        $('<div class=\"pd-search-title\"><i class=\"' + _this.homeIcon + '\"></i>' + _this.homeTitle + '&nbsp; <a class=\"pd-search-click\"><i class=\"' + _this.collapseIcon + '\" title=\"' + _this.collapseTitle + '\"></i></a></div>').insertBefore(searchBody);\n        // 展开/折叠searchBlock\n        toggleSearchBlock(_this, $block);\n    };\n    // 展开/折叠searchBlock\n    var toggleSearchBlock = function (_this, $block) {\n        // 点击箭头图标展开/折叠\n        $($block).find('.pd-search-click i').bind('click', function () {\n            // 展开折叠的实现函数\n            toggleSupport(this, _this);\n        });\n        // 标题栏双击展开/折叠功能\n        $($block).find('.pd-search-title').bind('dblclick', function () {\n            // 展开/折叠图标对象\n            var obj = $(this).find('.pd-search-click i');\n            // 展开折叠的实现函数\n            toggleSupport(obj, _this);\n        });\n        // 展开折叠的实现方法\n        function toggleSupport(obj, _this) {\n            // 切换展开/折叠图标\n            $(obj).toggleClass(_this.collapseIcon).toggleClass(_this.expandIcon);\n            // 切换展开/折叠的title提示\n            if ($(obj).attr('title') == _this.collapseTitle) {\n                $(obj).attr('title', _this.expandTitle);\n            }\n            else {\n                $(obj).attr('title', _this.collapseTitle);\n            }\n            // 搜索栏展开/折叠\n            $($block).find('.pd-search-body').slideToggle();\n            $($block).closest('.pd-search-container').toggleClass('pd-expandMode').toggleClass('pd-collapseMode');\n        }\n    };\n    return searchBlock;\n});\n","define(\"RxmSwitch\", [require.rxm.PageBase, \"css!RxmUtilDir/css/switch.css\"], function (ormWidget) {\n    function clsSwitch(config) {\n        this.config = $.extend(true, {\n            state: true,\n            animate: true,\n            disabled: false,\n            onColor: null,\n            offColor: null,\n            onText: '&nbsp',\n            offText: '&nbsp',\n            labelText: '&nbsp',\n            lineHeight: null,\n            width: null\n        }, config);\n    }\n    ;\n    clsSwitch.prototype._init = function () {\n        if (typeof this.config.id == \"string\") { //id\n            this._parent = this.config.id ? document.getElementById(this.config.id) : document.body;\n        }\n        if (typeof this.config.id == \"object\") { //dom\n            this._parent = this.config.id;\n        }\n    };\n    clsSwitch.msgEnum = {\n        changedStatus: \"changedStatus\"\n    };\n    clsSwitch.prototype._buildSwitch = function () {\n        var state = this.config.state ? \"switch-on\" : \"switch-off\";\n        var animate = this.config.animate ? \"switch-animate\" : \"\";\n        var disabled = this.config.disabled ? \"deactivate\" : \"\";\n        this.$innerWrap = $('<div class=\"' + animate + ' ' + state + '\"></div>');\n        this.$switchLeft = $('<span class=\"switch-left\"></span>').html(this.config.onText);\n        this.$label = $('<label class=\"\"></label>').html(this.config.labelText);\n        this.$switchRight = $('<span class=\"switch-right \"></span>').html(this.config.offText);\n        this.$switch = $('<div class=\"orm-switch  has-switch ' + disabled + '\"></div>').append(this.$innerWrap);\n        this.$innerWrap.append(this.$switchLeft).append(this.$label).append(this.$switchRight);\n        $(this._parent).append(this.$switch);\n        this.config.width ? this.$switch.css('min-width', this.config.width + 'px') : \"\";\n        if (this.config.lineHeight) {\n            this.$switchLeft.css('line-height', (this.config.lineHeight - 10) + 'px');\n            this.$label.css({ 'line-height': (this.config.lineHeight - 10) + 'px' });\n            this.$switchRight.css('line-height', (this.config.lineHeight - 10) + 'px');\n        }\n        else {\n        }\n        this.config.onColor ? this.$switchLeft.css('background-color', this.config.onColor) : \"\";\n        this.config.offColor ? this.$switchLeft.css('background-color', this.config.offColor) : \"\";\n        this.$switchLeft.on('tap', $.proxy(this._switchTap, this));\n        this.$switchRight.on('tap', $.proxy(this._switchTap, this));\n        this.$label.on('touchstart', $.proxy(this._touchStart, this));\n    };\n    clsSwitch.prototype._switchTap = function (event) {\n        event.stopImmediatePropagation();\n        this.$label.trigger('touchstart').trigger('tap');\n    };\n    clsSwitch.prototype._touchStart = function (event) {\n        this.config.moving = false;\n        event.stopImmediatePropagation();\n        if (this.$switch.hasClass('deactivate'))\n            this.$label.unbind('touchstart');\n        else {\n            this.$label.on('touchmove', $.proxy(this._touchMove, this));\n            this.$label.on('tap touchend touchcancel', $.proxy(this._touchEnd, this));\n        }\n    };\n    clsSwitch.prototype._touchMove = function (e, data) {\n        var $element = this.$switch, relativeX = (e.pageX || e.originalEvent.targetTouches[0].pageX) - $element.offset().left, percent = (relativeX / $element.width()) * 100, left = 25, right = 75;\n        this.config.moving = true;\n        if (percent < left)\n            percent = left;\n        else if (percent > right)\n            percent = right;\n        $element.find('>div').css('left', (percent - right) + \"%\");\n    };\n    clsSwitch.prototype._touchEnd = function (event) {\n        event.stopImmediatePropagation();\n        this._changeStatus();\n    };\n    clsSwitch.prototype._changeStatus = function (event, data) {\n        var $element = this.$innerWrap;\n        if (this.config.moving) {\n            var left = parseInt($element.css('left'));\n            if (left > -25) {\n                $element.removeClass('switch-off').addClass('switch-on');\n            }\n            else {\n                $element.removeClass('switch-on').addClass('switch-off');\n            }\n            $element.css('left', '');\n        }\n        else {\n            $element.css('left', '');\n            var state = $element.is('.switch-off');\n            if (state)\n                $element.removeClass('switch-off').addClass('switch-on');\n            else\n                $element.removeClass('switch-on').addClass('switch-off');\n        }\n        this.config.moving = false;\n        var d = {};\n        d.status = $element.is('.switch-on');\n        this.$switch.trigger(clsSwitch.msgEnum.changedStatus, d);\n    };\n    clsSwitch.prototype._layout = function () {\n        this._init();\n        this._buildSwitch();\n    };\n    clsSwitch.prototype.layout = function () {\n        this._layout();\n    };\n    //能否使用\n    clsSwitch.prototype.disabled = function (disabled) {\n        if (disabled && disabled === true)\n            this.$switch.addClass('deactivate');\n        else {\n            this.$switch.removeClass('deactivate');\n        }\n    };\n    //获取状态\n    clsSwitch.prototype.status = function () {\n        var status = this.$innerWrap.is('.switch-on');\n        return status;\n    };\n    //切换 状态\n    clsSwitch.prototype.callbackChangedStatus = function (arg, scope) {\n        if (typeof arg == \"undefined\") {\n            arg = {\n                fn: function () { },\n            };\n            scope = this;\n        }\n        var the = this;\n        if ($.isExist(scope)) {\n            the = scope;\n        }\n        this.$switch.on(clsSwitch.msgEnum.changedStatus, arg.data, $.proxy(arg.fn, the), arg.one);\n    };\n    clsSwitch.prototype.constructor = clsSwitch;\n    cssOrm.declare(\"clsSwitch\", clsSwitch);\n    return clsSwitch;\n});\n","define(\"RxmSlidebar\", [\"require\", \"exports\", \"RxmMd5Bulid\", \"RxmAppTool\"], function (require, exports, md5, appTool) {\n    \"use strict\";\n    var clsForctory = function (config, args) {\n        var RxmSlidebarImpl = /** @class */ (function () {\n            function RxmSlidebarImpl() {\n                this._router = config;\n                this._args = args;\n                args.target = '_blank';\n            }\n            RxmSlidebarImpl.prototype._parseConfig = function (config) {\n                var r = {};\n                var a = {};\n                var br = false;\n                var ba = false;\n                var rr = {\n                    //页面id 必填\n                    pageId: \"\",\n                    //页面名称\n                    pageName: \"\",\n                    //页面序号 \n                    pageOrder: 0,\n                    //父页面id  \n                    pagePid: \"\",\n                    //页面类型\n                    pageType: \"1\",\n                    //所在组\n                    pageCtrl: \"\",\n                    //页面控制  必填\n                    pageCtrlUrl: \"\",\n                    //页面描述\n                    pageDesc: \"\",\n                    //页面路由地址  必填\n                    pageRouter: \"\",\n                    //页面地址  必填\n                    pageUrl: \"\",\n                    //打开方式\n                    pageOpen: \"\"\n                };\n                var aa = {\n                    //可选 ，打开新窗口时传入参数\n                    data: {},\n                    //可选，标题，默认空\n                    title: \"\",\n                    //可选， title颜色\t#ffffff，title参数为空时无效 \n                    titleColor: \"\",\n                    // 可选， 是否隐藏导航栏  默认值 false\n                    hiddenTitleBar: \"\",\n                    // 可选，是否隐藏导航栏返回按钮,hiddenTitleBar参数为true时无效 \n                    hiddenBackBtn: \"\",\n                    // 可选，标题栏背景，支持图片和颜色值（#0088cc）,hiddenTitleBar参数为true时无效\n                    titleBarBg: \"\",\n                    //  可选，多个菜单项之间用逗号分隔\"完成,设置\",hiddenTitleBar参数为true时无效\n                    menu: \"\",\n                    // 可选，菜单项文字颜色值 ,hiddenTitleBar参数为true时无效 \t#ffffff\n                    menuTextColor: \"\",\n                    //可选，窗口关闭叫回函数 形如 function(arg)\n                    afterClose: function (e, arg) { }\n                };\n                var the = this;\n                // 解析  窗口相关参数 和回叫\n                $.each(aa, function (index, value) {\n                    if (!!config[index]) {\n                        the._args[index] = config[index];\n                    }\n                });\n                ///解析路由信息\n                $.each(rr, function (index, value) {\n                    if (!!config[index]) {\n                        br = true;\n                        rr[index] = config[index];\n                    }\n                });\n                if (br) {\n                    this._router = r;\n                    if (!!config.hash) {\n                        this._router.pageRouter = config.hash;\n                    }\n                    ;\n                    this._router.pageRouter = this._router.pageRouter || appTool.unid() + \"\";\n                    cssOrm.obj.objOrmPageAuth().addTempRouter(this._router);\n                }\n                if (!!config.hash && !!this._router) {\n                    this._router.pageRouter = config.hash;\n                }\n            };\n            RxmSlidebarImpl.prototype.render = function () {\n                var rqr = window;\n                var router = rqr.require('RxmRouterMgr');\n                router.load(this._router, this._args);\n            };\n            return RxmSlidebarImpl;\n        }());\n        return new RxmSlidebarImpl();\n    };\n    return clsForctory;\n});\n","define(\"RxmAjax\", [\"require\", \"exports\", \"RxmAppTool\", \"RxmUtil\"], function (require, exports, appTool, Util) {\n    \"use strict\";\n    var s = 0;\n    var AuthFlag = false;\n    function ajxSetting() {\n        /// <field name=\"options\" type=\"Object\"> 可选。AJAX 请求设置。所有选项都是可选的。</field>\n        /// <field name=\"async\" type=\"Boolean\">默认值: true。默认设置下，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为 false。</field>\n        /// <field name=\"beforeSend\" type=\"Function\">    beforeSend(XHR)  类型：Function 发送请求前可修改 XMLHttpRequest 对象的函数，如添加自定义 HTTP 头。XMLHttpRequest 对象是唯一的参数。   这是一个 Ajax 事件。如果返回 false 可以取消本次 ajax 请求。</field>\n        /// <field name=\"cache\" type=\"Boolean\">    默认值: true，dataType 为 script 和 jsonp 时默认为 false。设置为 false 将不缓存此页面。</field>\n        /// <field name=\"complete\" type=\"Function\"> complete(XHR, TS)  回叫函数    请求完成后回调函数 (请求成功或失败之后均调用)。参数： XMLHttpRequest 对象和一个描述请求类型的字符串。</field>\n        /// <field name=\"contentType\" type=\"String\">默认值: \"application/x-www-form-urlencoded\"。发送信息至服务器时内容编码类型。</field>\n        /// <field name=\"context\" type=\"Object\">这个对象用于设置 Ajax 相关回调函数的上下文。也就是说，让回调函数内 this 指向这个对象（如果不设定这个参数，那么 this 就指向调用本次 AJAX 请求时传递的 options 参数）。比如指定一个 DOM 元素作为 context 参数，这样就设置了 success 回调函数的上下文为这个 DOM 元素。</field>\n        /// <field name=\"data\" type=\"String\">发送到服务器的数据。将自动转换为请求字符串格式。GET 请求中将附加在 URL 后。查看 processData 选项说明以禁止此自动转换。必须为 Key/Value 格式。如果为数组，jQuery 将自动为不同值对应同一个名称</field>\n        /// <field name=\"dataFilter\" type=\"Function\">给 Ajax 返回的原始数据的进行预处理的函数。提供 data 和 type 两个参数：data 是 Ajax 返回的原始数据，type 是调用 jQuery.ajax 时提供的 dataType 参数。函数返回的值将由 jQuery 进一步处理。</field>\n        /// <field name=\"dataType\" type=\"String\">预期服务器返回的数据类型。如果不指定，jQuery 将自动根据 HTTP 包 MIME 信息来智能判断，比如 XML MIME 类型就被识别为 XML。在 1.4 中，JSON 就会生成一个 JavaScript 对象，而 script 则会执行这个脚本。随后服务器端返回的数据会根据这个值解析后，传递给回调函数。可用值:xml、html、script、json、jsonp、text </field>\n        /// <field name=\"headers\" type=\"String\"></field>\n        /// <field name=\"error\" type=\"Function\">默认值: 自动判断 (xml 或 html)。请求失败时调用此函数。    有以下三个参数：XMLHttpRequest 对象、错误信息、（可选）捕获的异常对象。如果发生了错误，错误信息（第二个参数）除了得到 null 之外，还可能是 \"timeout\", \"error\", \"notmodified\" 和 \"parsererror\"。</field>\n        /// <field name=\"global\" type=\"Boolean\">是否触发全局 AJAX 事件。默认值: true。设置为 false 将不会触发全局 AJAX 事件，如 ajaxStart 或 ajaxStop 可用于控制不同的 Ajax 事件。</field>\n        /// <field name=\"ifModified\" type=\"Boolean\">仅在服务器数据改变时获取新数据。默认值: false。使用 HTTP 包 Last-Modified 头信息判断。在 jQuery 1.4 中，它也会检查服务器指定的 'etag' 来确定数据没有被修改过。</field>\n        /// <field name=\"isLocal\" type=\"String\"></field>\n        /// <field name=\"method\" type=\"String\">The HTTP method to use for the request (e.g. POST, GET, PUT). (version added: 1.9.0)</field>\n        /// <field name=\"mimeType\" type=\"String\">A mime type to override the XHR mime type. (version added: 1.5.1)</field>\n        /// <field name=\"jsonp\" type=\"String\">在一个 jsonp 请求中重写回调函数的名字。这个值用来替代在 \"callback=?\" 这种 GET 或 POST 请求中 URL 参数里的 \"callback\" 部分，比如 {jsonp:'onJsonPLoad'} 会导致将 \"onJsonPLoad=?\" 传给服务器。</field>\n        /// <field name=\"jsonpCallback\" type=\"String\">为 jsonp 请求指定一个回调函数名。这个值将用来取代 jQuery 自动生成的随机函数名。这主要用来让 jQuery 生成度独特的函数名，这样管理请求更容易，也能方便地提供回调函数和错误处理。你也可以在想让浏览器缓存 GET 请求的时候，指定这个回调函数名。  </field>\n        /// <field name=\"password\" type=\"String\">用于响应 HTTP 访问认证请求的密码</field>\n        /// <field name=\"processData\" type=\"Boolean\">默认值: true。默认情况下，通过data选项传递进来的数据，如果是一个对象(技术上讲只要不是字符串)，都会处理转化成一个查询字符串，以配合默认内容类型 \"application/x-www-form-urlencoded\"。如果要发送 DOM 树信息或其它不希望转换的信息，请设置为 false。</field>\n        /// <field name=\"scriptCharset\" type=\"String\">只有当请求时 dataType 为 \"jsonp\" 或 \"script\"，并且 type 是 \"GET\" 才会用于强制修改 charset。通常只在本地和远程的内容编码不同时使用。</field>\n        /// <field name=\"success\" type=\"Function\">请求成功后的回调函数</field>\n        /// <field name=\"traditional\" type=\"Boolean\">如果你想要用传统的方式来序列化数据，那么就设置为 true。请参考工具分类下面的 jQuery.param 方法。</field>\n        /// <field name=\"timeout\" type=\"Number\">设置请求超时时间（毫秒）。此设置将覆盖全局设置。</field>\n        /// <field name=\"type\" type=\"String\">默认值: \"GET\")。请求方式 (\"POST\" 或 \"GET\")， 默认为 \"GET\"。注意：其它 HTTP 请求方法，如 PUT 和 DELETE 也可以使用，但仅部分浏览器支持。</field>\n        /// <field name=\"url\" type=\"String\">默认值: 当前页地址。发送请求的地址。</field>\n        /// <field name=\"username\" type=\"String\">用于响应 HTTP 访问认证请求的用户名。</field>\n        /// <field name=\"xhr\" type=\"Function\">    需要返回一个 XMLHttpRequest 对象。默认在 IE 下是 ActiveXObject 而其他情况下是 XMLHttpRequest 。用于重写或者提供一个增强的 XMLHttpRequest 对象。这个参数在 jQuery 1.3 以前不可用。 回调函数如果要处理 $.ajax() 得到的数据，则需要使用回调函数：beforeSend、error、dataFilter、success、complete。</field>\n    }\n    // function ajxSpical(){}\n    // ajxSpical.prototype.setup = function (data, namespaces, eventHandle) {\n    //    // split the arguments to necessary controll arguements\n    //    return true;\n    // };\n    // ajxSpical.prototype.add = function (event_) {\n    //    return false;\n    // };\n    // ajxSpical.prototype.remove = function (event_) {\n    //    // remove pseudo event: properties on $.data\n    //    return false;\n    // };\n    // ajxSpical.prototype.teardown = function () {\n    // };\n    // $.event.special['cssRequestEvt'] = new ajxSpical();\n    var SessionOutFlag = false;\n    function ormAjax(setting) {\n        var rxmret = {};\n        /// <summary></summary>\n        /// <param  name=\"setting\" type=\"ajxSetting\">选项 </param>\n        var uid = Math.round(Math.random() * 10000000) + '';\n        setting.uid = uid;\n        var requestDetachEvnt = function (e, d) {\n            var ajxOpt = e.data;\n            if (ajxOpt.uid + '' === d.uniqueId) {\n                var xhr = {};\n                xhr.responseJSON = { status: '400' };\n                xhr.status = 400;\n                xhr.responseText = d.data || '';\n                xhr.statusText = 'FAIL';\n                var xhrcode = 'fail';\n                var successCode = '200' || ajxOpt.successCode;\n                if (d.status === '200') {\n                    var j = ajxOpt.dataType || 'json';\n                    var data = d.data;\n                    if (j === 'json') {\n                        // eval(\"(\" + d.data + \")\")\n                        data = JSON.parse(d.data);\n                        xhr.responseJSON = data;\n                        var code = '' + (data.status || data.code || '200');\n                        // 如果是整形，转换为字符串\n                        // 状态码控制\n                        switch (code) {\n                            case successCode:\n                                if (ajxOpt.success) {\n                                    data = typeof (data.model) !== 'undefined' ? data.model : data;\n                                    xhrcode = 'success';\n                                    xhr.statusText = 'OK';\n                                    xhr.status = 200;\n                                    ajxOpt.success(data);\n                                }\n                                break;\n                            case '401':\n                                // if (ajxOpt.errorStatus) {\n                                //   var ret = ajxOpt.errorStatus(code)\n                                //   if (!ret) return\n                                // }\n                                if (cssOrm.default.ajaxErrorStatus) {\n                                    var ret = cssOrm.default.ajaxErrorStatus(code);\n                                    if (!ret)\n                                        return;\n                                }\n                                xhr.status = 401;\n                                // 需要认证：登录超时或未登录\n                                if (!SessionOutFlag) {\n                                    // 记录当前的地址，登录成功之后跳转至该地址\n                                    var redirectUrl = encodeURIComponent(window.location.href);\n                                    alert(\"登录过期，请重新登录<a href='\" + getServer() + \"/resoft/login?redirectUrl=\" + redirectUrl + \"'>点此登录</a>\");\n                                    Util.alert(cssOrm.default.prompt.sessionOutFlag, function () {\n                                        rxm_page.logout(1);\n                                    });\n                                    SessionOutFlag = true;\n                                    // 过一段时间再设置成false\n                                    setTimeout(function () {\n                                        SessionOutFlag = false;\n                                    }, 2000);\n                                }\n                                break;\n                            case '400':\n                                // if (ajxOpt.errorStatus) {\n                                //   var ret = ajxOpt.errorStatus(code)\n                                //   if (!ret) return\n                                // }\n                                if (cssOrm.default.ajaxErrorStatus) {\n                                    var ret = cssOrm.default.ajaxErrorStatus(code);\n                                    if (!ret)\n                                        return;\n                                }\n                                // 客户端错误：受到攻击或者请求异常\n                                xhr.status = 400;\n                                Util.alert(cssOrm.default.prompt.appError);\n                                break;\n                            case '403':\n                                // 未授权\n                                // if (ajxOpt.errorStatus) {\n                                //   var ret = ajxOpt.errorStatus(code)\n                                //   if (!ret) return\n                                // }\n                                if (cssOrm.default.ajaxErrorStatus) {\n                                    var ret = cssOrm.default.ajaxErrorStatus(code);\n                                    if (!ret)\n                                        return;\n                                }\n                                xhr.status = 403;\n                                if (!AuthFlag) {\n                                    Util.alert(cssOrm.default.prompt.unauthorised);\n                                    AuthFlag = true;\n                                    // 过一段时间再设置成false\n                                    setTimeout(function () {\n                                        AuthFlag = false;\n                                    }, 2000);\n                                }\n                                break;\n                            case '499':\n                                // 注销,重登录\n                                // if (ajxOpt.errorStatus) {\n                                //   var ret = ajxOpt.errorStatus(code)\n                                //   if (!ret) return\n                                // }\n                                if (cssOrm.default.ajaxErrorStatus) {\n                                    var ret = cssOrm.default.ajaxErrorStatus(code);\n                                    if (!ret)\n                                        return;\n                                }\n                                xhr.status = 499;\n                                Util.alert(cssOrm.default.prompt.reLogin, function () {\n                                    rxm_page.logout(1);\n                                });\n                                break;\n                            case '599':\n                                xhr.status = 599;\n                                // if (ajxOpt.errorStatus) {\n                                //   var ret = ajxOpt.errorStatus(code)\n                                //   if (!ret) return\n                                // }\n                                if (cssOrm.default.ajaxErrorStatus) {\n                                    var ret = cssOrm.default.ajaxErrorStatus(code);\n                                    if (!ret)\n                                        return;\n                                }\n                                // 退出app\n                                Util.alert(cssOrm.default.prompt.restart, function () {\n                                    rxm_page.logout(2);\n                                });\n                                break;\n                            case '500':\n                                // if (ajxOpt.errorStatus) {\n                                //   var ret = ajxOpt.errorStatus(code)\n                                //   if (!ret) return\n                                // }\n                                if (cssOrm.default.ajaxErrorStatus) {\n                                    var ret = cssOrm.default.ajaxErrorStatus(code);\n                                    if (!ret)\n                                        return;\n                                }\n                                xhr.status = 500;\n                                if (ajxOpt.error) {\n                                    ajxOpt.error(null, '500');\n                                }\n                                else {\n                                    Util.alert('500:' + cssOrm.default.prompt.serverError);\n                                }\n                                break;\n                            default:\n                                // if (ajxOpt.errorStatus) {\n                                //   var ret = ajxOpt.errorStatus(code)\n                                //   if (!ret) return\n                                // }\n                                if (ajxOpt.error) {\n                                    ajxOpt.error(null, code);\n                                }\n                                else if (cssOrm.default.ajaxErrorStatus) {\n                                    var ret = cssOrm.default.ajaxErrorStatus(code);\n                                    if (!ret)\n                                        return;\n                                }\n                                else {\n                                    Util.alert(code + ':' + cssOrm.default.prompt.serverError);\n                                }\n                        }\n                    }\n                    else {\n                    }\n                }\n                else {\n                    if (ajxOpt.error) {\n                        ajxOpt.error(null, d.status + '');\n                    }\n                    else {\n                        rxm_page.tip(cssOrm.default.prompt.noNetwork, 'center');\n                        // Util.alert(cssOrm.default.prompt.network);\n                    }\n                }\n                if (ajxOpt.complete) {\n                    ajxOpt.complete(xhr, xhrcode);\n                }\n                return false;\n            }\n            else {\n                return true;\n            }\n        };\n        cssOrm.on({\n            msgType: 'netMsg',\n            id: setting.uid,\n            data: setting,\n            callback: requestDetachEvnt,\n            one: true\n        });\n        var url = setting.url;\n        if (url && url.indexOf('http://') == -1) {\n            var host = appTool.getUpdateUrl();\n            if (host.length > 0) {\n                var server = appTool.getServer();\n                if (url.indexOf(server) === 0) {\n                    url = url.replace(server, host);\n                }\n            }\n        }\n        ;\n        var headers = '';\n        if (setting.contentType == 'application/json') {\n            var header = {\n                \"content-type\": \"application/json;charset=UTF-8\"\n            };\n            headers = JSON.stringify(header);\n            //if($.isPlainObject(setting.datadata)){}\n        }\n        ;\n        var data = setting.data || null;\n        if ($.isPlainObject(setting.data)) {\n            data = JSON.stringify(data);\n        }\n        //var header = JSON.stringify(setting.headers || '')\n        // cipCount.onEvent(\"count_ajax\");\n        //添加时间戳\n        var PD_T = \"RX__M=\" + uid;\n        if (url && url.indexOf(\"?\") != -1) {\n            url += \"&\" + PD_T;\n        }\n        else {\n            url += \"?\" + PD_T;\n        }\n        //请求超时时间\n        var timeout = 30;\n        if (!!setting.timeout) {\n            timeout = setting.timeout;\n        }\n        //是否加密\n        if (!!setting.encode && !!setting.encode.isEncode && setting.encode.isEncode) {\n            rxm_request.fetchData(url, uid, 1, '0', 'POST', data, headers, '', 0, timeout, 'true', setting.encode.key);\n        }\n        else {\n            rxm_request.fetchData(url, uid, 1, '0', 'POST', data, headers, '', 0, timeout);\n        }\n        return rxmret;\n    }\n    ;\n    // if(typeof  cipNetData!=\"undefined\") cipNetData.cbRequest =ajxSetting.requestEvt;\n    $.ajax = ormAjax;\n    return ormAjax;\n});\n","///<amd-dependency path=\"RxmCmdMgr\" name=\"rxmCmdMgr\"/>\n///<amd-module name='RxmPageBase'/>\n/////<reference path=\"../../../../typings/index.d.ts\"/>\ndefine(\"RxmPageBase\", [\"require\", \"exports\", \"RxmCmdMgr\", \"RxmRouterMgr\", \"RxmAppTool\", \"RxmUtil\"], function (require, exports, rxmCmdMgr, RouterMgr, AppTool, rxmUtil) {\n    \"use strict\";\n    /**\n     * 关闭按钮监听\n     * @param {Event} e\n     */\n    var _onRefresh = function () {\n        window.location.reload(true);\n    };\n    var widgetMsgNames = {\n        JumpPageMsg: 'JumpPageMsg',\n        GetJumpPageArgsMsg: 'GetJumpPageArgsMsg',\n        GetWindowBoundsMsg: 'GetWindowBoundsMsg',\n        GetGlobalConfigMsg: 'GetGlobalConfigMsg',\n        GetLoginStatusMsg: 'GetLoginStatusMsg',\n        GetKeyValue: '',\n        MenuMsg: 'MenuMsg',\n        BackBtnClickMsg: 'BackBtnClickMsg',\n        getSelectedTab: 'getSelectedTab',\n        GetAppInfo: \"GetAppInfo\",\n        GetForceSysDeviceID: \"GetForceSysDeviceID\",\n        NotifyCloseByOtherPage: 'NotifyCloseByOtherPage',\n        Logout: \"Logout\",\n        ShowLeftBtn: \"ShowLeftBtn\"\n    };\n    var util = rxmUtil;\n    var appTool = AppTool;\n    var allMenus;\n    allMenus = {};\n    var RxmPageBaseDImpl = /** @class */ (function () {\n        function RxmPageBaseDImpl() {\n            this.getSelectedTab = function (args) {\n                cssOrm.on({ callback: args.callback, data: args.data, msgType: widgetMsgNames.getSelectedTab, one: true, id: '' });\n                rxm_page && rxm_page.getSelectedTab();\n            };\n            /**\n          * 显示提示语\n          * @param message 必填 提示信息\n          * @param position 可选 显示位置\"top\",\"bottom\",\"center\",默认值center\n          * @param duration 可选 提示语显示时间 \"short\",\"long\",默认值short\n          */\n            this.tip = this.toast;\n        }\n        RxmPageBaseDImpl.prototype.jumpPage = function (actionID, url, args) {\n            !args && (args = {});\n            if (typeof rxm_page !== 'undefined') {\n                args._jump = true;\n                if (url.indexOf('http') !== 0) {\n                    if (appTool.isLocalLoad()) {\n                        url = 'citp://' + url;\n                    }\n                    else {\n                        url = appTool.getUpdateUrl() + url;\n                    }\n                }\n                args && args.afterClose && cssOrm.on({ msgType: widgetMsgNames.JumpPageMsg, data: args.data, id: actionID, one: true, callback: args.afterClose });\n                rxm_page && rxm_page.jump(actionID, url, JSON.stringify(args));\n            }\n        };\n        RxmPageBaseDImpl.prototype.closePage = function (args, pageIds) {\n            if (pageIds) {\n                this.postPageNotify(pageIds, { notifyType: widgetMsgNames.NotifyCloseByOtherPage });\n                return;\n            }\n            if (typeof rxm_page !== 'undefined' && AppTool.isJump()) {\n                if (!!args && !!args.key) {\n                    rxm_page && rxm_page.close(JSON.stringify(args), args.key);\n                }\n                else {\n                    rxm_page && rxm_page.close(JSON.stringify(args));\n                }\n            }\n        };\n        RxmPageBaseDImpl.prototype.bindClosePage = function (args, ctx) {\n            /// <param  name=\"args\"  value=\"cssArgs.cssOrm.on\"></param>\n            var tmp = args.callback || args.fn;\n            args.callback = tmp;\n            if (tmp) {\n                var clsId = args.id || appTool.uuid();\n                tmp._clsId = clsId;\n                tmp._ctx = ctx;\n                this._evts = this._evts || [];\n                this._evts.push(args);\n            }\n        };\n        RxmPageBaseDImpl.prototype.unBindClosePage = function (args) {\n            /// <param  name=\"args\"  value=\"cssArgs.cssOrm.on\"></param>\n            this._evts = this._evts || [];\n            var tmp = args.callback || args.fn;\n            for (var i = 0; i < this._evts.length(); i++) {\n                if (this._evts[i].callback._clsId === tmp._clsId) {\n                    this._evts.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        RxmPageBaseDImpl.prototype.jumpHome = function (arrHome, btnFire, args) {\n            if (typeof rxm_page !== 'undefined') {\n                $.each(arrHome, function (index, value) {\n                    if (value.pageUrl.indexOf('#') === 0) {\n                        if (appTool.isLocalLoad()) {\n                            value.pageArgs.hash = value.pageUrl;\n                            value.pageUrl = 'citp://' + appTool.getHomeUrl();\n                        }\n                        else {\n                            value.pageUrl = appTool.getUpdateUrl() + appTool.getHomeUrl(value.pageUrl);\n                        }\n                    }\n                    else if (value.pageUrl.indexOf('http') < 0) {\n                        if (appTool.isLocalLoad()) {\n                            value.pageUrl = 'citp://' + value.pageUrl;\n                        }\n                        else {\n                            console;\n                            value.pageUrl = getServer() == \"\" ? appTool.getUpdateUrl() + '/' + value.pageUrl :\n                                appTool.getUpdateUrl() + '/' + getServer() + '/' + value.pageUrl;\n                        }\n                    }\n                    ;\n                    value.tabSelectImg = value.tabSelectImg.indexOf('www/') === 0\n                        ? 'citp://' + value.tabSelectImg : value.tabSelectImg;\n                    value.tabUnSelectImg = value.tabUnSelectImg.indexOf('www/') === 0\n                        ? 'citp://' + value.tabUnSelectImg : value.tabUnSelectImg;\n                });\n                rxm_page && rxm_page.goHome(JSON.stringify(arrHome));\n                rxm_page && rxm_page.close({});\n            }\n        };\n        RxmPageBaseDImpl.prototype.jumpLogin = function () {\n            rxm_page && rxm_page.goLogin();\n        };\n        RxmPageBaseDImpl.prototype.jumpWelcome = function () {\n            rxm_page && rxm_page.goWelcome();\n        };\n        /**\n        * 隐藏 标题栏上的回退按钮\n        * @param {Boolean} isShow true 隐藏;false 显示,默认为false显示\n        */\n        RxmPageBaseDImpl.prototype.hiddenBackBtn = function (isShow) {\n            var value = isShow ? 1 : 0;\n            rxm_page && rxm_page.attrBackbtnHidden(value);\n        };\n        /**\n          * 设置标题及标题颜色\n          * @param {String} title  标题\n          * @param {String} textColor 标题颜色\n          */\n        RxmPageBaseDImpl.prototype.setTitle = function (title, textColor) {\n            rxm_page && rxm_page.attrTitleAndColor(title, textColor);\n        };\n        /**\n           * 设置菜单项\n           * @param {Array} menuItems 菜单项数组\n           * @param {String} menuTextColor 菜单项名字显示演示\n           */\n        RxmPageBaseDImpl.prototype.setMenu = function (menuItems, menuTextColor) {\n            var menuNames = menuItems[0].name;\n            allMenus[widgetMsgNames.MenuMsg + '_' + 0] = menuItems[0].callback;\n            cssOrm.on({ callback: menuItems[0].callback, id: 0 + '', msgType: widgetMsgNames.MenuMsg, one: true });\n            var f, msgId;\n            for (var i = 1; i < menuItems.length; i++) {\n                f = menuItems[i].callback;\n                msgId = i + '';\n                allMenus[widgetMsgNames.MenuMsg + '_' + msgId] = f;\n                menuNames += ',' + menuItems[i].name;\n                cssOrm.on({ callback: f, id: msgId, msgType: widgetMsgNames.MenuMsg, one: true });\n            }\n            rxm_page && rxm_page.attrMenuAndColor(menuNames, menuTextColor);\n        };\n        /**\n          * 清除菜单\n          */\n        RxmPageBaseDImpl.prototype.cleanMenu = function () {\n            $.each(allMenus, function (index, value) {\n                $(document).off(index, value);\n            });\n            allMenus = {};\n            rxm_page && rxm_page.cleanPageMenu();\n        };\n        /**\n           * 注销\n           * @param {int} finishPage 1:清除本地信息,跳转至gloabl.xml中配置的first页 ;0：清除本地信息,不结束页面,不跳转,调用cbLogout回调方法\n           */\n        RxmPageBaseDImpl.prototype.logout = function (finishPage, args) {\n            if (!!args) {\n                cssOrm.on({ callback: args.callback, data: args.data, msgType: widgetMsgNames.Logout, one: true, id: '' });\n            }\n            if (finishPage == '1' || finishPage == '0') {\n                $.ajax({\n                    url: getServer() + '/resoft/x/login/loginOut',\n                    success: function () {\n                        rxm_page && rxm_page.logout(finishPage);\n                    }\n                });\n            }\n        };\n        /**\n         * 隐藏标题栏\n         * @param {Boolean} isShow  true 隐藏;false 显示,默认为false显示\n         */\n        RxmPageBaseDImpl.prototype.hiddenTitleBar = function (isShow) {\n            var value = isShow ? 1 : 0;\n            rxm_page && rxm_page.attrTitleBarHidden(value);\n        };\n        /**\n           * 设置标题栏背景\n           * @param {String} bg  标题栏背景，颜色值或者图片\n           */\n        RxmPageBaseDImpl.prototype.setTitleBarBg = function (bg) {\n            rxm_page && rxm_page.attrTitleBarBg(bg);\n        };\n        /**\n           *\n           * @param {Number} scroll 1表示禁用，0表示不禁用\n           * @param {Number} bound  1表示禁用，0表示不禁用\n           */\n        RxmPageBaseDImpl.prototype.forbidWebViewAttr = function (scroll, bound) {\n            var scrollParam = scroll || cssOrm.default.forbidWebViewAttDefault.scroll;\n            var boundParam = bound || cssOrm.default.forbidWebViewAttDefault.bounce;\n            if (AppTool.isIOS()) {\n                rxm_page && rxm_page.forbidBounce(scrollParam, boundParam);\n            }\n        };\n        /**\n           * 显示提示语\n           * @param {String} message 必填 提示信息\n           * @param {String} position 可选 显示位置\"top\",\"bottom\",\"center\",默认值center\n           * @param {String} duration 可选 提示语显示时间 \"short\",\"long\",默认值short\n           */\n        RxmPageBaseDImpl.prototype.toast = function (message, position, duration) {\n            if ($.isPlainObject(message)) {\n                var tmp = message;\n                message = tmp.message;\n                position = tmp.position;\n                duration = tmp.duration;\n            }\n            rxm_page && rxm_page.tip(message, position, duration);\n        };\n        /**  检查当前widget是否有更新*/\n        RxmPageBaseDImpl.prototype.checkUpdate = function () {\n            rxm_page && rxm_page.checkUpdate();\n        };\n        /**启动第三方app\n           * @param {rxm.page.openApp} arg\n           */\n        RxmPageBaseDImpl.prototype.openApp = function (arg) {\n            if (AppTool.isIOS()) {\n                rxm_page && rxm_page.loadThirdApp(arg.appInforIos, arg.routeFailToast, arg.routeInstallUrl);\n            }\n            else {\n                rxm_page && rxm_page.startThirdApp(arg.startMode, arg.mainInfo, arg.addInfo, arg.optInfo);\n            }\n        };\n        /**\n         * ?\n         * 根据相关信息启动一个第三方应用 。假设应用A中有进行此UrlScheme配置，在另一个应用B中，通过引擎的JS方法rxm_page.loadApp('scheme1:');即可打开应用A（注意不要漏掉冒号!）</summary>\n         * @param {String} appInfo 必选 第三方应用的URLSchemes\n         */\n        RxmPageBaseDImpl.prototype.loadApp = function (appInfo) {\n            rxm_page && rxm_page.loadThirdApp(appInfo);\n        };\n        /** 根据相关信息启动一个第三方应用 */\n        RxmPageBaseDImpl.prototype.startApp = function (startMode, mainInfo, addInfo, optInfo) {\n            rxm_page && rxm_page.startThirdApp(startMode, mainInfo, addInfo, optInfo);\n        };\n        /**隐藏标题栏左侧按钮 */\n        RxmPageBaseDImpl.prototype.hiddenLeftBtn = function () {\n            rxm_page && rxm_page.attrLeftBtnHidden();\n        };\n        /**\n        * 设置标题栏左侧按钮（只能设置一个左侧按钮）\n        * @param args\n        */\n        RxmPageBaseDImpl.prototype.showLeftBtn = function (args) {\n            cssOrm.on({ callback: args.callback, data: {}, msgType: widgetMsgNames.ShowLeftBtn, one: true, id: '' });\n            rxm_page && rxm_page.showLeftBtn(args.text, args.textColor);\n        };\n        ;\n        RxmPageBaseDImpl.prototype.getJumpPageArgs = function () {\n        };\n        RxmPageBaseDImpl.prototype.installApp = function (appPath) {\n        };\n        RxmPageBaseDImpl.prototype.getGlobalConfig = function (key, callback) {\n            cssOrm.on({ msgType: widgetMsgNames.GetGlobalConfigMsg, callback: callback });\n            rxm_page && rxm_page.getAppCfg(key);\n        };\n        RxmPageBaseDImpl.prototype.setLoginStatus = function (loginStatus, recordLoginStatus) {\n            rxm_page && rxm_page.setLoginStatus(loginStatus, recordLoginStatus, appTool.getUserID());\n        };\n        RxmPageBaseDImpl.prototype.getLoginStatus = function (key, callback) {\n            cssOrm.on({ msgType: widgetMsgNames.GetLoginStatusMsg, callback: callback });\n            rxm_page && rxm_page.getLoginStatus(key);\n        };\n        RxmPageBaseDImpl.prototype.chgSelectedTab = function (pageId) {\n            rxm_page && rxm_page.chgSelectedTab(pageId);\n        };\n        /**\n           * 获取应用信息\n           * @param args 获取应用信息参数对象\n           */\n        RxmPageBaseDImpl.prototype.getAppInfo = function (args) {\n            cssOrm.on({ msgType: widgetMsgNames.GetAppInfo, callback: args.callback, one: true, id: \"\" });\n            rxm_page && rxm_page.getAppInfo();\n        };\n        /**\n        * 获取deviceId（Force）\n        * @param  args 获取deviceId参数对象\n        */\n        RxmPageBaseDImpl.prototype.getForceSysDeviceID = function (args) {\n            cssOrm.on({ msgType: widgetMsgNames.GetForceSysDeviceID, callback: args.callback, one: true, id: \"\" });\n            if (args.isTrigger) {\n                if (typeof rxm_force != 'undefined') {\n                    rxm_force.getForceSysDeviceID();\n                }\n            }\n        };\n        RxmPageBaseDImpl.prototype._onTabClk = function () {\n            $('.orm-frame').addClass('orm-frame-hidden');\n            var s = $(this).data('frame-id');\n            var $iframe = $('#' + s);\n            if ($iframe.find('iframe').attr('src').length < 1) {\n                var d = $iframe.data('item-data').pageUrl;\n                $iframe.find('iframe').attr('src', d);\n            }\n            $iframe.removeClass('orm-frame-hidden');\n            $('footer img').addClass('gray');\n            $(this).find('img').removeClass('gray');\n        };\n        /**\n        * 页面激活状态绑定函数\n        * @param args 页面激活参数对象\n        */\n        RxmPageBaseDImpl.prototype.bindPageActived = function (args) {\n            args.msgType = 'pageActived';\n            cssOrm.on(args);\n        };\n        // 监听方法\n        // 4.1. cbMenuCallback--标题栏菜单点击监听方法\n        RxmPageBaseDImpl.prototype.menuBlock = function (name, pos) {\n            /// 菜单叫回\n            var Msg = widgetMsgNames.MenuMsg + '_' + pos;\n            $(document).trigger(Msg, { name: name, pos: pos });\n        };\n        /**\n         * 提示对话框\n         * @param param  提示信息\n         * @param cb 可选\n         * @param modal 可选\n         */\n        RxmPageBaseDImpl.prototype.alert = function (param, cb, modal) {\n            util.alert(param, cb, modal);\n        };\n        /**\n         *\n         * @param {rxm.page.confirm} param\n         * @param {function} okCallback\n         * @param {function} cancelCallback\n         * @param {*} modal\n         */\n        RxmPageBaseDImpl.prototype.confirm = function (param, okCallback, cancelCallback, modal) {\n            // 整合回调函数成一个,利用回传参数判断是否成功\n            util.confirm(param, okCallback, cancelCallback, modal);\n        };\n        /**\n         * 打开 Dialog\n         * @param config 全部参数对象\n         */\n        RxmPageBaseDImpl.prototype.contentDialog = function (config) {\n            return util.contentDialog(config);\n        };\n        /**\n         * 打开侧边栏\n         * @param {rxm.router} router\n         * @param {rxm.page.loadargs2}  args\n         */\n        RxmPageBaseDImpl.prototype.slidebar = function (router, args) {\n            util.slidebar(router, args);\n        };\n        /**\n         * 打开form页面\n         */\n        RxmPageBaseDImpl.prototype.openForm = function (args) {\n            var _args = $.extend({}, args.args, { form: args.form });\n            util.slidebar(args.router, _args);\n        };\n        RxmPageBaseDImpl.prototype.loading = function (config) {\n            return util.loading(config);\n        };\n        /**\n          * 显示可提示用户输入的对话框\n          * @param config 显示可提示用户输入的对话框参数对象\n          */\n        RxmPageBaseDImpl.prototype.prompt = function (config) {\n            util.prompt(config);\n        };\n        /**\n         * 加载router 指定的页面\n         * @param {rxm.router} router\n         * @param {rxm.page.loadargs2} widgetArgs\n         */\n        RxmPageBaseDImpl.prototype.load = function (router, widgetArgs) {\n            var routers = RouterMgr;\n            routers.load(router, widgetArgs);\n        };\n        /**\n           * 组织人员选择\n           * @param  cfg 组织人员选择参数对象\n           */\n        RxmPageBaseDImpl.prototype.OrgSelect = function (cfg) {\n            util.OrgSelect(cfg);\n        };\n        /**\n         * 高级搜索\n         * @param  cfg  高级搜索参数对象\n         * @param  router  可选 页面路由参数对象\n         */\n        RxmPageBaseDImpl.prototype.rxmSearch = function (cfg, router) {\n            var loadPage = {\n                pageId: \"rxmSearchGrid\",\n                pageUrl: \"www/rxm/widget/search/views/search.html\",\n                pageType: \"10\",\n                pageRouter: 'rxmSearchGrid',\n            };\n            if (typeof router !== 'undefined') {\n                loadPage = $.extend({}, loadPage, router);\n            }\n            var cfgDefault = {\n                title: \"\",\n                titleColor: \"\",\n                hiddenTitleBar: \"\",\n                hiddenBackBtn: \"\",\n                titleBarBg: \"\"\n            };\n            cfg = $.extend({}, cfgDefault, cfg);\n            this.slidebar(loadPage, {\n                title: cfg.title,\n                titleColor: cfg.titleColor,\n                /**可选， 是否隐藏导航栏  默认值 false*/\n                hiddenTitleBar: cfg.hiddenTitleBar,\n                /** 可选，是否隐藏导航栏返回按钮,hiddenTitleBar参数为true时无效*/\n                hiddenBackBtn: cfg.hiddenBackBtn,\n                /** 可选，标题栏背景，支持图片和颜色值（#0088cc）,hiddenTitleBar参数为true时无效*/\n                titleBarBg: cfg.titleBarBg,\n                data: cfg,\n                afterClose: cfg.afterClose\n            });\n        };\n        /**\n         * 向其他窗口发送通知\n         * @param  pageIds 接收notify的窗口id,多个以英文逗号分隔\n         * @param  notifyObj 发送的消息\n         */\n        RxmPageBaseDImpl.prototype.postPageNotify = function (pageIds, notifyObj) {\n            (!pageIds || pageIds.length == 0) && function () {\n                console.error('pageIds内容不能为空');\n                return;\n            }();\n            if (!notifyObj || !notifyObj.notifyType) {\n                console.error('notify内容和类型不能为空');\n                return;\n            }\n            var notifyString = JSON.stringify(notifyObj);\n            rxm_page && rxm_page.sendNotifyTo(pageIds, notifyString);\n        };\n        /**\n          * 绑定bodyready函数,触发回调\n          * @param  args  绑定bodyready参数对象\n          */\n        RxmPageBaseDImpl.prototype.bindPageReady = function (args) {\n            if (!args.callback) {\n                return;\n            }\n            $(\"rxmPageBodyReady\").rxmBindCmd(args);\n        };\n        RxmPageBaseDImpl.prototype.__rxmbgn = function () {\n            var ret = this.init ? this.init() : false;\n            $(\"rxmPageBodyReady\").rxmTriggerCmd({ data: { idsTrgger: \"self\" } });\n        };\n        /**\n         * 绑定函数，接受来自其他窗口页面的消息\n         * @param args 绑定函数接受来自其他窗口页面消息参数对象\n         */\n        RxmPageBaseDImpl.prototype.bindPageNotify = function (args) {\n            cssOrm.on({ msgType: args.notifyType, callback: args.callback, one: args.one, id: 'pgntfy' });\n        };\n        return RxmPageBaseDImpl;\n    }());\n    var thisObj = new RxmPageBaseDImpl();\n    var _onTapClose = function (e) {\n        thisObj.closePage();\n    };\n    thisObj.bindPageNotify({ notifyType: 'NotifyCloseByOtherPage', callback: $.proxy(_onTapClose, thisObj) });\n    $('rxmPageClose').rxmBindCmd({ callback: $.proxy(_onTapClose, thisObj) });\n    $('rxmPageRefresh').rxmBindCmd({ callback: $.proxy(_onRefresh, thisObj) });\n    // 回调方法\n    if (typeof rxm_page !== 'undefined') {\n        thisObj.forbidWebViewAttr();\n        rxm_page.menuBlock = thisObj.menuBlock;\n        rxm_page.getAppInfoBlock = function (data) {\n            $(document).trigger(widgetMsgNames.GetAppInfo, JSON.parse(data));\n        };\n        /** 3.1. cbJumpPage--jumpPage回调方法   actionID 永远是CI,前提，一个窗口只有一个弹出窗口 相当于Dialog*/\n        rxm_page.jumpBlock = function (actionID, url, args) {\n            var Msg = widgetMsgNames.JumpPageMsg + '_' + actionID;\n            args && typeof args !== 'object' && (args = JSON.parse(args));\n            $(document).trigger(Msg, args);\n        };\n        /** 3.2. cbGetJumpPageArgs--getJumpPageArgs回调方法*/\n        rxm_page.getJumpPageArgsBlock = function (args) {\n        };\n        /**?\n        *3.3. cbGetWindowBounds--getWindowBounds回调方法\n        * @param  {Number} w 宽度\n        * @param  {Number} h 高度\n         */\n        rxm_page.getWindowBoundsBlock = function (w, h) { };\n        /**3.4. cbGetGlobalConfig--getGlobalConfig回调方法\n         * @param  {String}  key global.xml 中定义的key\n         * @param  {String} value key 对应的值\n         */\n        rxm_page.getAppCfgBlock = function (key, value) {\n        };\n        /**\n         *cbGetLoginStatus--getLoginStatus回调方法\n         *@param  {String} key getLoginStatus方法中定义的key\n         *@param  {String } value 对应的值\n         */\n        rxm_page.getLoginStatusBlock = function (key, value) {\n            var a = {\n                key: key,\n                value: value\n            };\n            $(document).trigger(widgetMsgNames.GetLoginStatusMsg, a);\n        };\n        /**\n         *cbLogout--logout回调方法\n         */\n        rxm_page.logoutBlock = function () {\n            $(document).trigger(widgetMsgNames.Logout, '');\n        };\n        /**\n         * 3.6. cbGetKeyValue--getKeyV alue回调方法\n         * @param {String} key  key值 用于h5和插件共同使用的一个变量 设置key－value,key由本地定义。 仅在h5中使用的key ，value，请使用【cipLocalStorage】实现。回调方法\n         * @param {String} value  key 对应的值\n         */\n        rxm_page.getKeyAndValueBlock = function (key, value) {\n        };\n        /**\n         * 4.2. cbBackBtnClick--标题栏返回按钮点击监听方法\n         */\n        rxm_page.backBtnClickBlock = function () {\n        };\n        rxm_page.leftBtnClickBlock = function () {\n            cssOrm.trigger(widgetMsgNames.ShowLeftBtn, '');\n        };\n        rxm_page.getSelectedTabBlock = function (pageId) {\n            $(document).trigger(widgetMsgNames.getSelectedTab, pageId);\n        };\n        if (typeof rxm_force != 'undefined') {\n            rxm_force.getForceSysDeviceIDBlock = function (key, forceId) {\n                $(document).trigger(widgetMsgNames.GetForceSysDeviceID, forceId);\n            };\n        }\n        /**\n         * 2018-06-29\n         * rxmPage.sendNotifyTo 向其他窗口发送消息\n         */\n        rxm_page.sendNotifyBlock = function (from, notifyObj) {\n            notifyObj = JSON.parse(from);\n            cssOrm.trigger(notifyObj.notifyType, 'pgntfy', notifyObj);\n        };\n    }\n    return thisObj;\n});\n","define(\"RxmFileReader\", ['RxmAppTool', \"RxmFileMgr\"], function (appTool, nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsFileMgrBase\"><param>\n    var clsFileMgr = cssOrm.obj.clsFileMgr().constructor;\n    var clsFileReader = function (args) {\n        ///<param  name=\"args\" type=\"clsFileReaderArgs\">参数类型为clsFileReaderArgs </param>  \n        this.option = args || {};\n        this.uid = appTool.unid();\n        if (args.len) {\n            cssOrm.on({\n                msgType: clsFileMgr.msg.openFile,\n                data: this, id: this.uid, one: true, callback: $.proxy(this._onOpen, this)\n            });\n            cssOrm.obj.clsFileMgr().openFile(this.uid, args.path, clsFileMgr.openMode.readOnly);\n        }\n    };\n    clsFileReader.prototype._onOpen = function (e, data) {\n        if (data == 1) { //成功\n            cssOrm.on({ data: this, id: this.uid, msgType: clsFileMgr.msg.readFile, one: true, callback: $.proxy(this._onReader, this) });\n            cssOrm.obj.clsFileMgr().readFile(this.uid, -1);\n        }\n        else {\n            this.option.error(\"打开失败\", data);\n        }\n    };\n    clsFileReader.prototype._onReader = function (e, data) {\n        this.option.success(data);\n    };\n    clsFileReader.prototype.read = function (len) {\n        ///<summary> 读len长度文件,没完成</summary>\n        ///<returns  type=\"String\"></returns>\n        return \"\";\n    };\n    return clsFileReader;\n});\n","define('RxmDownload', [\"RxmOpenFile\"], function (objOrmOpenFile) {\n    ///<param name=\"objOrmOpenFile\" value=\"objOrmOpenFile\"></param>\n    if (typeof rxm_download == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.cls.clsOrmDownloadExt != \"undefined\") {\n        return cssOrm.cls.clsOrmDownloadExt;\n    }\n    var cls = function cls(arg) {\n        ///<param name=\"arg\" value=\"cssArgs.clsOrmDownloadExt.addFile\"></param>\n        this._curFile = {\n            pos: -1,\n            id: \"\"\n        };\n        //记录用户数据\n        this._config = arg;\n        //这次把回叫放在本类内部\n        this._onProgressCallback = function (e, data) {\n            var sizeTotal = 0;\n            var sizeAlready = Number(data.downloadSize);\n            var totalPercent = '';\n            for (var i = 0; i < this._config.files.length; i++) {\n                if (this._config.files[i].fileSize) {\n                    sizeTotal = sizeTotal + Number(this._config.files[i].fileSize);\n                    if ((this._config.files[i].filePath != \"\") && (this._config.files[i].fileId.indexOf(data.resId) == -1)) {\n                        sizeAlready = sizeAlready + Number(this._config.files[i].fileSize);\n                    }\n                }\n                else {\n                    sizeTotal = 0;\n                    break;\n                }\n            }\n            //            console.log(\"sizeTotal===\"+sizeTotal);\n            //            console.log(\"sizeAlready===\" + sizeAlready);\n            if (sizeTotal > 0) {\n                totalPercent = sizeAlready / sizeTotal * 100;\n            }\n            var thisFilePercent = data.downloadSize / data.fileSize * 100;\n            //            console.log(\" thisFilePercent====\" + thisFilePercent);\n            //            console.log(\"totalPercent===\" + totalPercent)\n            if (!!arg.progressCallback) {\n                arg.progressCallback(\"\", {\n                    file: this._config.files[this._curFile.pos],\n                    totalPercent: totalPercent,\n                    thisFilePercent: thisFilePercent\n                });\n            }\n        };\n        this._onStatusCallback = function (e, data) {\n            var arg = e.data;\n            //          console.log(\"data.status==\"+data.status);\n            //          console.log(\"data.fileSize==\"+data.fileSize);\n            //          console.log(\"data.localFilePath==\"+data.localFilePath);\n            if (data.fileSize <= 0) {\n                data.status = 4;\n            }\n            if (!!this._config.singleFileStatusCallback) {\n                var json = {\n                    file: this._config.files[this._curFile.pos],\n                    status: data.status\n                };\n                this._config.singleFileStatusCallback(\"\", json);\n            }\n            if (data.status == 3) { //成功  找到下一个文件\n                if (this._config.files[this._curFile.pos].filePath != data.localFilePath) {\n                    if (data.fileSize > 0) {\n                        this._config.files[this._curFile.pos].filePath = data.localFilePath;\n                        this._config.files[this._curFile.pos].fileSize = data.fileSize;\n                    }\n                    else {\n                        this._config.files[this._curFile.pos].filePath = '';\n                    }\n                    this.startDown();\n                }\n            }\n            else if (data.status == 4) {\n                this._config.files[this._curFile.pos].filePath = '';\n                this.startDown();\n                if (!!this._config.errorCallback) {\n                    this._config.errorCallback(\"\", this._config.files[this._curFile.pos]);\n                }\n            }\n            ;\n        };\n        this._cbAddDownloadTask = function (e, data) {\n        };\n    };\n    cls.prototype.startDown = function () {\n        if (this._curFile.pos < this._config.files.length - 1) {\n            //移动到下一个文件\n            this._curFile.pos++;\n            this._curFile.id = this._config.files[this._curFile.pos].fileId;\n            var curFile = this._config.files[this._curFile.pos];\n            var herf = this._curFile.id;\n            if (herf.indexOf(\"http://\") == -1 && herf.indexOf(\"https://\") == -1) {\n                var host = require(\"RxmAppTool\").getUpdateUrl() + \"/resoft/x/file/down?fileId=\";\n                if (host.length > 0) {\n                    if (herf.indexOf(\"resoft/x/file/down\") == -1) {\n                        herf = host + herf;\n                    }\n                    else {\n                        var server = require(\"RxmAppTool\").getServer();\n                        if (herf.indexOf(server) === 0) {\n                            herf = herf.replace(server, host);\n                        }\n                    }\n                }\n            }\n            else {\n                this._curFile.id = herf.split(\"=\")[1];\n            }\n            this._addEvent();\n            cls.addDownloadTask(herf, curFile.title || \"\", curFile.picUrl || \"\", this._curFile.id, curFile.fileType);\n        }\n        else {\n            //发完成的消息\n            if (!!this._config.completedCallback) {\n                this._config.completedCallback(\"\", this._config.files);\n            }\n            if (this._config.openDowned) {\n                if ($.isString(this._config.openDowned)) {\n                    for (var i = 0; i < this._config.files.length; i++) {\n                        if (this._config.files[i].fileId == this._config.openDowned) {\n                            objOrmOpenFile.openFile(this._config.files[i].filePath);\n                        }\n                    }\n                }\n                else {\n                    objOrmOpenFile.openFile(this._config.files[0].filePath);\n                }\n            }\n        }\n    };\n    cls.prototype.endDown = function () {\n    };\n    cls.prototype._addEvent = function () {\n        ///<summary>主要是初始化消息队列 </summary>\n        cssOrm.on({\n            //必填 消息类型\n            msgType: cls.msg.cbAddDownloadTask,\n            // 可选 消息id 用于返回时识别  \n            id: this._curFile.id,\n            //可选\n            data: this._config,\n            //必填,回叫函数\n            callback: $.proxy(this._cbAddDownloadTask, this),\n            //Boolean ,可选 是否只是运行一次\n            one: true\n        });\n        cssOrm.on({\n            //必填 消息类型\n            msgType: cls.msg.onProgressCallback,\n            // 可选 消息id 用于返回时识别  \n            id: this._curFile.id,\n            //可选\n            data: this._config,\n            //必填,回叫函数\n            callback: $.proxy(this._onProgressCallback, this),\n            //Boolean ,可选 是否只是运行一次\n            one: false\n        });\n        cssOrm.on({\n            //必填 消息类型\n            msgType: cls.msg.onStatusCallback,\n            // 可选 消息id 用于返回时识别  \n            id: this._curFile.id,\n            //可选\n            data: this._config,\n            //必填,回叫函数\n            callback: $.proxy(this._onStatusCallback, this),\n            //Boolean ,可选 是否只是运行一次\n            one: false\n        });\n    };\n    ///以下为全局函数，主要是对rxm_download的函数封装和消息定义\n    cls.msg = {\n        cbAddDownloadTask: \"cbAddDownloadTask\",\n        //下载状态改变的监听方法\n        onStatusCallback: \"onStatusCallback\",\n        //下载进度的监听方法\n        onProgressCallback: \"onProgressCallback\"\n    };\n    cls.prototype.downFlies = function (arg) {\n        ///<summary> 下载入口<summary>\n        ///<param name=\"arg\" value=\"cssArgs.clsOrmDownloadExt.addFile\"></param>\n        ///<returns type=\"cls\"></returns>\n        var r = new cls(arg);\n        r.startDown();\n        return r;\n    };\n    cls.prototype.reload = function (args) {\n        for (var i = 0; i < args.files.length; i++) {\n            var href = args.files[i].fileId;\n            args.files[i].filePath = \"\";\n            if (href.indexOf(\"http://\") == -1 && href.indexOf(\"https://\") == -1) {\n                var host = require(\"RxmAppTool\").getUpdateUrl();\n                if ((host.length > 0) && (href.indexOf(\"resoft/x/file/down\") > -1)) {\n                    var server = require(\"RxmAppTool\").getServer();\n                    if (href.indexOf(server) === 0) {\n                        href = href.replace(server, host + \"//\");\n                    }\n                }\n                var host = require(\"RxmAppTool\").getUpdateUrl() + \"/resoft/x/file/down?fileId=\";\n                if (host.length > 0) {\n                    if (href.indexOf(\"resoft/x/file/down\") == -1) {\n                        href = host + href;\n                    }\n                    else {\n                        var server = require(\"RxmAppTool\").getServer();\n                        if (href.indexOf(server) === 0) {\n                            href = href.replace(server, host);\n                        }\n                    }\n                }\n            }\n            ;\n            rxm_download.deleteDownloadByUrl(href);\n        }\n        this.downFlies(args);\n    };\n    cls.prototype.getFilepath = function () {\n        if (arr.length == pathArr.length) {\n            return pathArr;\n        }\n    };\n    cls.addDownloadTask = function (url, title, picUrl, resId, fileType) {\n        ///<summary>添加一条下载记录并启动</summary>\n        rxm_download.addDownloadTask(url, title, picUrl, resId, fileType);\n    };\n    cls.pauseAllDownloadTask = function (arg) {\n        ///<summary>暂停所有下载</summary>\n        rxm_download.pauseAllDownloadTask();\n    };\n    cls.deleteAllDownloadTask = function (arg) {\n        ///<summary>删除所有任务</summary>\n        rxm_download.deleteAllDownloadTask();\n    };\n    cls.deleteAllDownloadTaskAndFile = function (arg) {\n        ///<summary>删除所有任务同时删除本地文件</summary>\n        //        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.deleteAllDownloadTaskAndFile, one: true });\n        rxm_download.deleteAllDownloadTaskAndFile();\n    };\n    cls.openDownloadManager = function (type) {\n        ///<summary>打开下载管理器</summary>\n        //        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.openDownloadManager, one: true });\n        if (type) {\n            rxm_download.openDownloadManager(type);\n        }\n        else {\n            rxm_download.openDownloadManager();\n        }\n    };\n    cls.getDownloadStatus = function (arg) {\n        ///<summary>获取下载状态</summary>\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getDownloadStatus, one: true });\n        rxm_download.getDownloadStatus(arg.args);\n    };\n    rxm_download.addDownloadTaskBlock = function (resId, downloadId) {\n        ///<summary> 添加下载队列回调</summary>\n        cssOrm.trigger(cls.msg.cbAddDownloadTask, resId, {\n            resId: resId,\n            downloadId: downloadId\n        });\n    };\n    rxm_download.onStatusCallback = function (resId, downloadId, status, fileSize, localFilePath) {\n        ///<summary>下载状态改变的监听方法</summary>\n        cssOrm.trigger(cls.msg.onStatusCallback, resId, {\n            resId: resId,\n            downloadId: downloadId,\n            status: status,\n            fileSize: fileSize,\n            localFilePath: localFilePath\n        });\n    };\n    rxm_download.onProgressCallback = function (resId, downloadId, fileSize, downloadSize) {\n        ///<summary>下载进度的监听方法</summary>\n        //        console.log(\"onStatusCallback resId==\" + resId);\n        //        console.log(\"onStatusCallback fileSize==\" + fileSize);\n        //        console.log(\"onStatusCallback downloadSize==\" + downloadSize);\n        cssOrm.trigger(cls.msg.onProgressCallback, resId, {\n            resId: resId,\n            downloadId: downloadId,\n            fileSize: fileSize,\n            downloadSize: downloadSize\n        });\n    };\n    rxm_download.getDownloadStatusBlock = function (jsonArray) {\n        cssOrm.trigger(cls.msg.getDownloadStatus, jsonArray);\n    };\n    return new cls();\n});\n","define(\"RxmMessageListener\", ['RxmMessage'], function (ormMsg) {\n    ///<param  name=\"ormMsg\" type=\"objOrmMessage\"></param>\n    var cls = function () {\n    };\n    cls.prototype.callbackMsg = function (arg, scope) {\n        ///<param  name=\"arg\" value=\"cssArgs.clsOrmMessageListener.callbackMsg\"></param>\n        cssOrm.on({\n            //必填 消息类型\n            msgType: arg.when,\n            // 可选 消息id 用于返回时识别  \n            id: arg.msgType,\n            //可选\n            data: arg.data,\n            //必填,回叫函数\n            callback: arg.callback,\n            //Boolean ,可选 是否只是运行一次\n            one: false\n        });\n    };\n    return cls;\n});\n","define('RxmActionSheet', [\"RxmActionSheetBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsActionSheetBase\"><param>\n    if (cssOrm.obj.objOrmActionSheet) {\n        return cssOrm.obj.objOrmActionSheet();\n    }\n    ;\n    function clsActionSheet() {\n        ///<summary>打开菜单</summary>\n    }\n    clsActionSheet.prototype.openListSheet = function (args) {\n        ///<summary>打开列表型菜单</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var uid = Math.round(Math.random() * 10000000) + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"openListSheet\", one: true, id: uid });\n        nativeCls.openListSheet(uid, JSON.stringify(args.json), args.title);\n    };\n    clsActionSheet.prototype.openGridSheet = function (args) {\n        ///<summary>根据文本创建对应二维码图片</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var uid = Math.round(Math.random() * 10000000) + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"openGridSheet\", one: true, id: uid });\n        nativeCls.openGridSheet(uid, JSON.stringify(args.json), args.title);\n    };\n    cssOrm.declare(\"objOrmActionSheet\", clsActionSheet, true);\n    return cssOrm.obj.objOrmActionSheet();\n});\n","define('RxmAudio', [\"RxmAudioBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsAudioBase\"><param>\n    if (cssOrm.obj.objOrmAudio) {\n        return cssOrm.obj.objOrmAudio();\n    }\n    ;\n    function clsAudio() {\n        ///<summary>本地音频播放插件</summary>\n    }\n    clsAudio.prototype.openPlayer = function (args) {\n        ///<summary>打开音频播放器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ data: args.data, msgType: \"audioOpen\", one: true, id: \"\" });\n        if (args.param) {\n            nativeCls.openPlayer(args.param);\n        }\n        else if (args.paths) {\n            if (args.index) {\n                nativeCls.openPlayer(args.paths, args.index);\n            }\n            else {\n                nativeCls.openPlayer(args.paths);\n            }\n        }\n    };\n    clsAudio.prototype.openOnlineAudio = function (args) {\n        ///<summary>在线打开音频</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var herf = args.url;\n        if (herf.indexOf(\"http://\") == -1 && herf.indexOf(\"https://\") == -1) {\n            var host = require(\"RxmAppTool\").getUpdateUrl() + \"/resoft/x/file/down?fileId=\";\n            if (host.length > 0) {\n                if (herf.indexOf(\"resoft/x/file/down\") == -1) {\n                    herf = host + herf;\n                }\n                else {\n                    var server = require(\"RxmAppTool\").getServer();\n                    if (herf.indexOf(server) === 0) {\n                        herf = herf.replace(server, host);\n                    }\n                }\n            }\n        }\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"audioOpenBackground\", one: true, id: \"\" });\n        nativeCls.open(herf, 0);\n    };\n    clsAudio.prototype.open = function (args) {\n        ///<summary>后台打开音频播放器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"audioOpenBackground\", one: true, id: \"\" });\n        nativeCls.open(args.path, args.repeats);\n    };\n    clsAudio.prototype.closePlayer = function (args) {\n        ///<summary>关闭音频播放器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"audioClose\", one: true, id: \"\" });\n        nativeCls.closePlayer();\n    };\n    clsAudio.prototype.record = function (args) {\n        ///<summary>录制音频</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"audioCbRecord\", one: true, id: \"\" });\n        delete args.callback;\n        delete args.data;\n        nativeCls.record(args);\n    };\n    clsAudio.prototype.startBackgroundRecord = function (args) {\n        ///<summary>开始后台录音</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"audioStartBackgroundRecord\", one: true, id: \"\" });\n        delete args.callback;\n        delete args.data;\n        nativeCls.startBackgroundRecord(args);\n    };\n    clsAudio.prototype.stopBackgroundRecord = function () {\n        ///<summary>停止后台录音</summary>\n        nativeCls.stopBackgroundRecord();\n    };\n    clsAudio.prototype.pause = function () {\n        ///<summary>暂停</summary>\n        nativeCls.pause();\n    };\n    clsAudio.prototype.replay = function () {\n        ///<summary>重播</summary>\n        nativeCls.replay();\n    };\n    clsAudio.prototype.stop = function () {\n        ///<summary>停止</summary>\n        nativeCls.stop();\n    };\n    cssOrm.declare(\"objOrmAudio\", clsAudio, true);\n    return cssOrm.obj.objOrmAudio();\n});\n","define('RxmCamera', [\"RxmCameraBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsCameraBase\"><param>\n    if (typeof rxm_camera == 'undefined') {\n        return;\n    }\n    if (cssOrm.obj.objOrmCamera) {\n        return cssOrm.obj.objOrmCamera();\n    }\n    function clsCamera() {\n        ///<summary>摄像头</summary>\n    }\n    clsCamera.prototype.open = function (arg) {\n        ///<summary>调用系统相机,进入拍照界面。</summary>\n        ///<param name=\"arg\" value=\"cssArgs.objOrmCamera.open\"></param>\n        cssOrm.on({ callback: arg.callback, data: arg.data, msgType: \"cameraOpen\", one: true, id: \"\" });\n        delete arg.callback;\n        delete arg.data;\n        nativeCls.openCamera(arg);\n    };\n    // clsCamera._oncameraOpenBlock = function (data) {\n    //     cssOrm.trigger(\"cameraOpen\", \"\",data);\n    // }\n    // clsCamera.enumAppMsg={\n    //     cameraOpen: \"cameraOpen\"\n    // }\n    // rxm_camera.cameraOpenBlock = clsCamera._oncameraOpenBlock;\n    cssOrm.declare(\"objOrmCamera\", clsCamera, true);\n    return cssOrm.obj.objOrmCamera();\n});\n","define(\"RxmClip\", [\"RxmClipBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsClipBase\"><param>\n    function clsClip() {\n        ///<summary>系统剪贴板插件</summary>\n    }\n    clsClip.prototype.copyToClip = function (args) {\n        ///<summary>复制内容到剪切板</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param  name=\"text\"  type=\"String\">必选 内容</param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"clipCopy\", one: true, id: \"\" });\n        nativeCls.copyToClip(args.text);\n    };\n    clsClip.prototype.copyFromClip = function (args) {\n        ///<summary>获取剪切板的内容</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"clipGet\", one: true, id: \"\" });\n        nativeCls.copyFromClip();\n    };\n    cssOrm.declare(\"clsOrmClip\", clsClip);\n    return clsClip;\n});\n","define('RxmContact', [\"RxmContactBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsContactBase\"><param>\n    if (cssOrm.obj.objOrmContact) {\n        return cssOrm.obj.objOrmContact();\n    }\n    function clsContact() {\n        ///<summary>联系人</summary>\n    }\n    clsContact.prototype.open = function (args) {\n        ///<summary>打开联系人 callback回叫函数 ，multi 是否打开多人</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"multi\",type=\"Boolean\">可选 是否打开多人 undefined  和false 是单选</param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var m = args.multi || false;\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"contactGet\", one: true, id: \"\" });\n        if (m) {\n            nativeCls.multiOpenContact();\n        }\n        else {\n            nativeCls.openContact();\n        }\n    };\n    clsContact.prototype.addItem = function (args) {\n        ///<summary>添加联系人</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"name\",type=\"String\">必选  名称</param>\n        ///<param name=\"num\",type=\"Object\">必选  电话号码</param>\n        ///<param name=\"email\",type=\"Object\">必选  邮件</param>\n        ///<param name=\"hiddenAlertDialog\",type=\"Object\">可选  添加过程中是否隐藏弹出”确认添加”提示框，1：需要隐藏；0或者不传：不需要隐藏:</param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"contactAdd\", one: true, id: \"\" });\n        nativeCls.addContact(args.name, args.num, args.email, args.hiddenAlertDialog);\n    };\n    clsContact.prototype.deleteItem = function (args) {\n        ///<summary>删除联系人</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"name\",type=\"String\">必选  名称</param> \n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"contactDel\", one: true, id: \"\" });\n        nativeCls.deleteContact(args.name);\n    };\n    clsContact.prototype.searchItem = function (args) {\n        ///<summary>查询联系人</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"name\",type=\"String\">必选  名称</param> \n        ///<param name=\"name\",type=\"Number\">可选  一次最多返回的结果条数,默认为50条,-1表示一次返回所有结果</param> \n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"contactSearch\", one: true, id: \"\" });\n        nativeCls.searchContact(args.nameKey, args.pageSize);\n    };\n    clsContact.prototype.modifyItem = function (args) {\n        ///<summary>修改联系人 回调方法modifyContactBlock</summary>\n        ///<param name=\"name\",type=\"String\">必选  名称</param>\n        ///<param name=\"num\",type=\"Object\">必选  电话号码</param>\n        ///<param name=\"email\",type=\"Object\">必选  邮件</param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"contactModify\", one: true, id: \"\" });\n        nativeCls.modifyContact(args.name, args.num, args.email);\n    };\n    cssOrm.declare(\"objOrmContact\", clsContact, true);\n    return cssOrm.obj.objOrmContact();\n});\n","define('RxmControl', [\"RxmControlBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsControlBase\"><param>\n    if (cssOrm.obj.objOrmControl) {\n        return cssOrm.obj.objOrmControl();\n    }\n    ;\n    function clsControl() {\n        ///<summary>日期选择器插件</summary>\n    }\n    clsControl.prototype.openDatePicker = function (args) {\n        ///<summary>打开日期选择器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var uid = Math.round(Math.random() * 10000000) + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"openDatePicker\", one: true, id: uid });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openDatePicker(uid, args.withDay, args.year, args.day, args.startyear, args.endyear);\n    };\n    clsControl.prototype.openTimePicker = function (args) {\n        ///<summary>打开时间选择器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var uid = Math.round(Math.random() * 10000000) + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"openTimePicker\", one: true, id: uid });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openTimePicker(uid, args.hour, args.minute);\n    };\n    clsControl.prototype.openDateAndTimePicker = function (args) {\n        ///<summary>打开年月日时分选择器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var uid = Math.round(Math.random() * 10000000) + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"openDateAndTimePicker\", one: true, id: uid });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openDateAndTimePicker(uid, args.year, args.month, args.day, args.hour, args.min);\n    };\n    clsControl.prototype.openTimeAndSecondPicker = function (args) {\n        ///<summary>打开时间选择器(包含秒)</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var uid = Math.round(Math.random() * 10000000) + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"openTimeAndSecondPicker\", one: true, id: uid });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openTimeAndSecondPicker(uid, args.hour, args.minute, args.second);\n    };\n    clsControl.prototype.openInputDialog = function (args) {\n        ///<summary>打开输入对话框</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        var uid = Math.round(Math.random() * 10000000) + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"openInputDialog\", one: true, id: uid });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openInputDialog(uid, args.type, args.inputHint, args.btnText, args.dialogbg, args.dialogInputBg, args.dialogBtnBg);\n    };\n    cssOrm.declare(\"objOrmControl\", clsControl, true);\n    return cssOrm.obj.objOrmControl();\n});\n","define('RxmDataBaseMgr', [\"RxmDbConnect\"], function (clsDbConnect) {\n    ///<param name=\"clsDbConnect\" type=\"clsDbConnect\"></param>\n    if (typeof rxm_sqlite == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsDatabaseMgr != \"undefined\") {\n        return cssOrm.obj.clsDatabaseMgr();\n    }\n    var dbMsg = {};\n    dbMsg.openDataBase = \"openDataBase\";\n    dbMsg.executeSql = \"executeSql\";\n    dbMsg.executeTransactionSql = \"executeTransactionSql\";\n    dbMsg.selectSql = \"selectSql\";\n    dbMsg.closeDataBase = \"closeDataBase\";\n    rxm_sqlite.connectBlock = function (opId, data) {\n        ///<summary>openDataBase回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">数据库对象的唯一标识符</param>\n        ///<param  name=\"data\" type=\" Number\">1成功，0失败</param>\n        var ret;\n        if (data + \"\" == \"1\") {\n            ret = cssOrm.obj.clsDatabaseMgr()._getConnect(opId);\n            ret.opId = opId;\n        }\n        cssOrm.trigger(dbMsg.openDataBase, \"\", ret);\n    };\n    rxm_sqlite.runSqlBlock = function (opId, data) {\n        ///<summary> executeSql回调方法 </summary>\n        ///<param  name=\"opId\" type=\"Number\">数据库对象的唯一标识符</param>\n        ///<param  name=\"data\" type=\" String\">1成功，0失败</param>\n        var cbData = {\n            opId: opId,\n            success: data + \"\" == \"1\" ? true : false\n        };\n        cssOrm.trigger(dbMsg.executeSql, opId, cbData);\n    };\n    rxm_sqlite.runTransactionSqlBlock = function (opId, data) {\n        ///<summary> executeTransactionSql回调方法 </summary>\n        ///<param  name=\"opId\" type=\"Number\">数据库对象的唯一标识符</param>\n        ///<param  name=\"data\" type=\" Number\">1成功，0失败</param>\n        var cbData = {\n            opId: opId,\n            success: data + \"\" == \"1\" ? true : false\n        };\n        cssOrm.trigger(dbMsg.executeTransactionSql, opId, cbData);\n    };\n    rxm_sqlite.runSelectBlock = function (opId, data, value) {\n        ///<summary> selectSql回调方法 </summary>\n        ///<param  name=\"opID\" type=\"Number\">数据库对象的唯一标识符</param>\n        ///<param  name=\"data\" type=\" Number\">1成功，0失败</param>\n        ///<param  name=\"value\" type=\"Json\">查询结果 json数据</param>\n        var s = value || \"\";\n        var cbData = {\n            opId: opId,\n            success: data + \"\" == \"1\" ? true : false,\n            value: s.length > 0 ? JSON.parse(value) : []\n        };\n        cssOrm.trigger(dbMsg.selectSql, opId, cbData);\n    };\n    rxm_sqlite.disconnectBlock = function (opId, data) {\n        ///<summary> 通过路径获取文件大小的回调方法 </summary>\n        ///<param  name=\"opId\" type=\" Number\">数据库对象的唯一标识符</param>\n        ///<param  name=\"data\" type=\" Number\">1成功，0失败</param>\n        var cbData = {\n            opId: opId,\n            success: data + \"\" == \"1\" ? true : false\n        };\n        cssOrm.trigger(dbMsg.closeDataBase, opId, cbData);\n    };\n    function db() {\n    }\n    ;\n    db.prototype.connect = function (dbName, callback) {\n        ///<summary> 获得一个数据库连接</summary>\n        ///<param  name=\"dbName\" type=\"String\"> </param>\n        ///<param  name=\"callback\"  type=\"Function\">回叫函数  function (data)  </param>\n        ///<returns  type=\"clsDbConnect\"></returns>\n        this.dbName = dbName;\n        cssOrm.on({\n            callback: callback,\n            id: \"\",\n            msgType: dbMsg.openDataBase,\n            one: true\n        });\n        rxm_sqlite.connect(dbName);\n    };\n    db.prototype._getConnect = function (name) {\n        if (typeof this[name] == \"undefined\") {\n            this[name] = new clsDbConnect(name);\n        }\n        return this[name];\n    };\n    cssOrm.declare(\"clsDatabaseMgr\", db, true);\n    return cssOrm.obj.clsDatabaseMgr();\n});\n","define('RxmDevice', [], function () {\n    ///<param  name=\"nativeCls\"  type=\"clsAudioBase\"><param>\n    if (cssOrm.obj.objOrmDevice) {\n        return cssOrm.obj.objOrmDevice();\n    }\n    ;\n    function cls() {\n        ///<summary>设备信息</summary>\n    }\n    cls.deviceOpEnum = {\n        getDeviceInfo: \"getDeviceInfo\"\n    };\n    cls.prototype.vibrate = function (args) {\n        ///<summary>开启设备震动</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        // rxm_device.vibrate(milliseconds)\n    };\n    cls.prototype.getDeviceInfo = function (args) {\n        ///<summary>获取设备信息</summary>\n        ///<param name=\"args\" value=\"cssArgs.objOrmDevice.getDeviceInfo\">参数</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: cls.deviceOpEnum.getDeviceInfo, one: true, id: \"\" });\n        rxm_device.curDeviceInfo();\n    };\n    cssOrm.declare(\"objOrmDevice\", cls, true);\n    if (typeof rxm_device == \"undefined\")\n        return cssOrm.obj.objOrmDevice();\n    rxm_device.curDeviceInfoBlock = function (data) {\n        var arg = JSON.parse(data);\n        cssOrm.trigger(cls.deviceOpEnum.getDeviceInfo, \"\", arg);\n    };\n    return cssOrm.obj.objOrmDevice();\n});\n","define('RxmNativeDialog', [], function () {\n    if (typeof rxm_dialog == 'undefined') {\n        return;\n    }\n    function clsCipDialog() {\n    }\n    ;\n    clsCipDialog.prototype.alert = function (args) {\n        ///<summary>显示带有一段消息和一个确认按钮的警告框</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"message\",type=\"String\">必选  要在 window 上弹出的对话框中显示的纯文本</param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: clsCipDialog.enumAppMsg.dialogAlert, one: true, id: \"\" });\n        rxm_dialog.alert(args.message);\n    };\n    clsCipDialog.prototype.confirm = function (args) {\n        ///<summary>显示带有一段消息以及确认按钮和取消按钮的对话框。</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"message\",type=\"String\">必选  要在 window 上弹出的对话框中显示的纯文本</param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: clsCipDialog.enumAppMsg.dialogConfirm, one: true, id: \"\" });\n        rxm_dialog.confirm(args.message);\n    };\n    clsCipDialog.prototype.prompt = function (args) {\n        ///<summary>显示可提示用户输入的对话框</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param  name=\"text\"  type=\"String\">可选 要在对话框中显示的纯文本（而不是 HTML 格式的文本）。</param>\n        ///<param  name=\"defaultText\"  type=\"String\">可选 默认的输入文本</param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: clsCipDialog.enumAppMsg.dialogPrompt, one: true, id: \"\" });\n        rxm_dialog.prompt(args.message, args.text, args.placeholder, args.title, args.btnok, args.btncancel);\n    };\n    clsCipDialog._oncbConfirm = function (data) {\n        var a = {\n            data: data\n        };\n        cssOrm.trigger(clsCipDialog.enumAppMsg.dialogConfirm, a);\n    };\n    clsCipDialog._oncbPrompt = function (data) {\n        var a = {\n            data: data\n        };\n        cssOrm.trigger(clsCipDialog.enumAppMsg.dialogPrompt, \"\", data);\n    };\n    clsCipDialog.enumAppMsg = {\n        dialogConfirm: \"dialogConfirm\",\n        dialogPrompt: \"dialogPrompt\",\n        dialogAlert: \"dialogAlert\"\n    };\n    //    clsCipDialog.enumAppMsg[\"dialogConfirm\"] = \"dialogConfirm\";\n    //    clsCipDialog.enumAppMsg.dialogPrompt = \"dialogPrompt\";\n    //    clsCipDialog.enumAppMsg.dialogAlert = \"dialogAlert\";\n    rxm_dialog.confirmBlock = clsCipDialog._oncbConfirm;\n    rxm_dialog.promptBlock = clsCipDialog._oncbPrompt;\n    return new clsCipDialog();\n});\n","define('RxmDownloadA', [\"RxmDownload\"], function (clsOrmDownloadExt) {\n    ///<param name=\"clsOrmDownloadExt\" value=\"clsOrmDownloadExt\"></param>\n    if (typeof cssOrm.obj.objOrmDownloadExt != \"undefined\") {\n        return cssOrm.obj.objOrmDownloadExt();\n    }\n    function cls() {\n    }\n    ;\n    cls.prototype._onTap = function () {\n        var o = event.target;\n        var href = $(o).attr(\"href\");\n        if (href.indexOf(\"http://\") == -1 && href.indexOf(\"https://\") == -1) {\n            var host = require(\"RxmAppTool\").getUpdateUrl();\n            if ((host.length > 0) && (href.indexOf(\"resoft/x/file/down\") > -1)) {\n                var server = require(\"RxmAppTool\").getServer();\n                if (href.indexOf(server) === 0) {\n                    href = href.replace(server, host + \"//\");\n                }\n            }\n        }\n        ;\n        var fileName = $(o).attr(\"fileName\");\n        var fileType = $(o).attr(\"fileType\");\n        var picUrl = $(o).attr(\"picUrl\");\n        var args = {\n            files: [{\n                    fileId: href,\n                    title: fileName,\n                    picUrl: picUrl,\n                    fileType: fileType\n                }],\n            completedCallback: function (e, arg) {\n                var path = [];\n                //                console.log(arg);\n            },\n            openDowned: true\n        };\n        clsOrmDownloadExt.downFlies(args);\n    };\n    cls.prototype.reload = function (url) {\n        //\t   var href = url;\n        //       if (href.indexOf(\"http://\") == -1) {\n        //           var host = require(\"RxmAppTool\").getUpdateUrl();\n        //           if ((host.length > 0) && (href.indexOf(\"resoft/x/file/down\") > -1)) {\n        //               var server = require(\"RxmAppTool\").getServer();\n        //               if (href.indexOf(server) === 0) {\n        //                   href = href.replace(server, host+\"//\");\n        //               }\n        //           }\n        //           var host = require(\"RxmAppTool\").getUpdateUrl() + \"/resoft/x/file/down?fileId=\";\n        //           if (host.length > 0) {\n        //        \t   if(href.indexOf(\"resoft/x/file/down\") == -1){\n        //        \t\t   href=host+href;\n        //        \t   }else{\n        //        \t\t   var server = require(\"RxmAppTool\").getServer();\n        //                   if (href.indexOf(server) === 0) {\n        //                \t   href = href.replace(server, host);\n        //                   }\n        //        \t   }\n        //              \n        //           }\n        //       };\n        //\n        //       cipDownloadExt.deleteDownloadByUrl(href);\n        var args = {\n            files: [{\n                    fileId: url\n                }],\n            openDowned: true\n        };\n        clsOrmDownloadExt.reload(args);\n    };\n    cssOrm.declare(\"objOrmDownloadExt\", cls, true);\n    $(\".rxm-body\").on(\"tap\", \"a.orm-file-down\", $.proxy(cls.prototype._onTap, cssOrm.obj.objOrmDownloadExt()));\n    $(\".rxm-body\").on(\"click\", \"a.orm-file-down\", function () { event.preventDefault(); event.stopPropagation(); return false; });\n    return cssOrm.obj.objOrmDownloadExt();\n});\n","define(\"RxmDownloadMuliti\", [\"\"], function () {\n    if (typeof rxm_download == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.objOrmDownloadExtMulti != \"undefined\") {\n        return cssOrm.obj.objOrmDownloadExtMulti();\n    }\n    function cls() {\n    }\n    ;\n    cls.msg = {\n        cbAddDownloadTask: \"cbAddDownloadTask\",\n        //下载状态改变的监听方法\n        onStatusCallback: \"onStatusCallback\",\n        //下载进度的监听方法\n        onProgressCallback: \"onProgressCallback\"\n    };\n    cls.prototype.addDownloadTask = function (href) {\n        ///<summary>添加一条下载记录并启动</summary>\n        rxm_download.addDownloadTask(href);\n    };\n    cls.prototype.addFlie = function (arg) {\n        var files = [];\n        files = arg.files;\n        var curFile = files[0];\n        function _addFlie(curFile) {\n            cssOrm.on({\n                //必填 消息类型\n                msgType: cls.msg.cbAddDownloadTask,\n                // 可选 消息id 用于返回时识别  \n                id: curFile.fileId,\n                //可选\n                data: arg,\n                //必填,回叫函数\n                callback: function (e, data) {\n                    e.data;\n                    data;\n                },\n                //Boolean ,可选 是否只是运行一次\n                one: true\n            });\n            cssOrm.on({\n                //必填 消息类型\n                msgType: cls.msg.onProgressCallback,\n                // 可选 消息id 用于返回时识别  \n                id: curFile.fileId,\n                //可选\n                data: arg,\n                //必填,回叫函数\n                callback: function (e, data) {\n                    if (!!arg.progressCallback) {\n                        arg.progressCallback();\n                    }\n                },\n                //Boolean ,可选 是否只是运行一次\n                one: false\n            });\n            cssOrm.on({\n                //必填 消息类型\n                msgType: cls.msg.onStatusCallback,\n                // 可选 消息id 用于返回时识别  \n                id: curFile.fileId,\n                //可选\n                data: arg,\n                //必填,回叫函数\n                callback: function (e, data) {\n                    var arg = e.data;\n                    if (!!arg.singleFileStatusCallback) {\n                        arg.singleFileStatusCallback(data);\n                    }\n                    ;\n                    if (data.status == 3) { //成功  找到下一个文件\n                        arg.files[0].path = data.localFilePath;\n                        files.splice(0, 1);\n                        if (files.length == 0) {\n                            //全部文件被完成，激活 \n                            arg.completedCallback(arg.files);\n                        }\n                        else {\n                            var curFile = files[0];\n                            _addFlie(curFile);\n                        }\n                    }\n                },\n                //Boolean ,可选 是否只是运行一次\n                one: false\n            });\n            this.addDownloadTask(curFile.fileId);\n        }\n    };\n    //cls.prototype.download = function () {\n    //    if (arr.length == 0) return;\n    //    var href = require(\"RxmAppTool\").getUpdateUrl() + \"/resoft/x/file/down?fileId=\" + arr[0];\n    //    this.addDownloadTask(href);\n    //}\n    cls.prototype.getFilepath = function () {\n        //        console.log(arr);\n        //        console.log(pathArr);\n        if (arr.length == pathArr.length) {\n            return pathArr;\n        }\n    };\n    cls.prototype.addDownloadTask = function (href) {\n        ///<summary>添加一条下载记录并启动</summary>\n        //cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.addDownloadTask, one: true });\n        var href = require(\"RxmAppTool\").getUpdateUrl() + \"/sword/x/file/down?fileId=\" + href;\n        rxm_download.addDownloadTask(href);\n    };\n    cls.prototype.pauseAllDownloadTask = function (arg) {\n        ///<summary>暂停所有下载</summary>\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.pauseAllDownloadTask, one: true });\n        rxm_download.pauseAllDownloadTask();\n    };\n    cls.prototype.deleteAllDownloadTask = function (arg) {\n        ///<summary>删除所有任务</summary>\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.deleteAllDownloadTask, one: true });\n        rxm_download.deleteAllDownloadTask();\n    };\n    cls.prototype.deleteAllDownloadTaskAndFile = function (arg) {\n        ///<summary>删除所有任务同时删除本地文件</summary>\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.deleteAllDownloadTaskAndFile, one: true });\n        rxm_download.deleteAllDownloadTaskAndFile();\n    };\n    cls.prototype.openDownloadManager = function (arg) {\n        ///<summary>打开下载管理器</summary>\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.openDownloadManager, one: true });\n        rxm_download.openDownloadManager();\n    };\n    cls.prototype.getDownloadStatus = function (arg) {\n        ///<summary>获取下载状态</summary>\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getDownloadStatus, one: true });\n        rxm_download.getDownloadStatus(arg.args);\n    };\n    rxm_download.addDownloadTaskBlock = function (resId, downloadId) {\n        ///<summary> 添加下载队列回调</summary>\n        cssOrm.trigger(cls.msg.cbAddDownloadTask, resId, {\n            resId: resId,\n            downloadId: downloadId\n        });\n    };\n    rxm_download.onStatusCallback = function (resId, downloadId, status, fileSize, localFilePath) {\n        ///<summary>下载状态改变的监听方法</summary>\n        cssOrm.trigger(cls.msg.onStatusCallback, resId, {\n            resId: resId,\n            downloadId: downloadId,\n            status: status,\n            fileSize: fileSize,\n            localFilePath: localFilePath\n        });\n    };\n    rxm_download.onProgressCallback = function (resId, downloadId, fileSize, downloadSize) {\n        ///<summary>下载进度的监听方法</summary>\n        cssOrm.trigger(cls.msg.onProgressCallback, resId, {\n            resId: resId,\n            downloadId: downloadId,\n            fileSize: fileSize,\n            downloadSize: downloadSize\n        });\n    };\n    rxm_download.getDownloadStatusBlock = function (jsonArray) {\n        cssOrm.trigger(cls.msg.getDownloadStatus, jsonArray);\n    };\n    cssOrm.declare(\"objOrmDownloadExtMulti\", cls, true);\n    return cssOrm.obj.objOrmDownloadExtMulti();\n});\n","define('RxmFile', ['RxmAppTool'], function (appTool) {\n    if (typeof rxm_file == 'undefined') {\n        return;\n    }\n    if (cssOrm.obj.objOrmFile) {\n        return cssOrm.obj.objOrmFile();\n    }\n    cls.msg = {\n        getFileTypeByPath: \"getFileTypeByPath\",\n        deleteFileByPath: \"deleteFileByPath\",\n        explorer: \"explorer\",\n        multiExplorer: \"multiExplorer\",\n        getFileLastModifiedTime: \"getFileLastModifiedTime\",\n        renameFile: \"renameFile\",\n        search: \"search\",\n        getFileListByPath: \"getFileListByPath\",\n        getFileSizeByPath: \"getFileSizeByPath\",\n        copyFile: \"copyFile\",\n        getFileMD5: \"getFileMD5\",\n        getImageThumb: \"getImageThumb\",\n        isFileExistByPath: \"isFileExistByPath\",\n        getSystemCacheSize: \"getSystemCacheSize\",\n        cleanSystemCache: \"cleanSystemCache\",\n        cleanSystemCacheFile: \"cleanSystemCacheFile\"\n    };\n    function cls() {\n    }\n    ;\n    cls.prototype.getFileExt = function (filePath) {\n        ///<summary> 获取扩展名  </summary>\n        ///<param name=\"filePath\" type=\"String\"> 路径</param>\n        ///<returns type=\"String\">返回扩展名</returns>\n        var a = filePath.lastIndexOf(\".\");\n        var ret = (a >= 0) ? filePath.substr(a + 1) : \"\";\n        return ret;\n    };\n    cls.prototype.getFileName = function (filePath) {\n        ///<param name=\"filePath\" type=\"String\"> 路径</param>\n        ///<returns type=\"String\">返回名字</returns>\n        var a = -1;\n        var end = (a = filePath.lastIndexOf(\".\")) > -1 ? a : filePath.length;\n        var start = (a = filePath.lastIndexOf(\"/\")) > -1 ? a + 1 : 0;\n        return filePath.substring(start, end);\n    };\n    cls.prototype.getFileNameWithExt = function (filePath) {\n        ///<summary> 获取全名  </summary>\n        ///<param name=\"filePath\" type=\"String\"> 路径</param>\n        ///<returns type=\"String\">返回名字</returns>\n        var a;\n        var start = (a = filePath.lastIndexOf(\"/\")) > -1 ? a + 1 : 0;\n        return filePath.substr(start);\n    };\n    cls.prototype.isFileExistByPath = function (arg) {\n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.isFileExistByPath\"> </param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.isFileExistByPath, one: true });\n        rxm_file.isExistByPath(id, arg.filePath);\n    };\n    cls.prototype.getFileTypeByPath = function (arg) {\n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.getFileTypeByPath\"> </param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getFileTypeByPath, one: true });\n        rxm_file.getTypeByPath(id, arg.filePath);\n    };\n    cls.prototype.deleteFileByPath = function (arg) {\n        ///<param  name=\"arg\" value=\"cssOrm.default.objOrmFile.deleteFileByPath\"></param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.deleteFileByPath, one: true });\n        rxm_file.deleteByPath(id, arg.filePath);\n    };\n    cls.prototype.getFileAtrr = function (file) {\n        ///<summary>获取文件属性</summary>\n        ///<param  name=\"file\" value=\"cssArgs.objOrmFile.explorer\"></param>\n        var arr = [];\n        if ($.isArray(file)) {\n            arr = file;\n        }\n        else {\n            arr.push(file);\n        }\n        file.AttrCallback = function (evt, arg) {\n            //到此\n            switch (this.curOp) {\n                case 'fileSize':\n                    {\n                    }\n                    ;\n                    break;\n                case \"\":\n                    {\n                    }\n                    ;\n                    break;\n            }\n        };\n        var ormfile = cssOrm.obj.objOrmFile();\n        $.each(arr, function (index, item) {\n            for (var it in item) {\n                item.fileExt = ormfile.getFileExt(item.filePath);\n                item.fileName = ormfile.getFileName(item.filePath);\n                item.ecallback = item.callback;\n                item.callback = file.AttrCallback;\n                item.curOp = \"fileSize\";\n                ormfile.getFileSizeByPath(item);\n            }\n        });\n    };\n    var explorer = {\n        ///初始路径，及选择后的全路径\n        filePath: \"\",\n        multiOption: false,\n        fileName: \"\",\n        fileExt: \"\",\n        fileSize: -1,\n        ///<field type=\"String\">文件缩略图Url地址</field>\n        thumbnailUrl: undefined,\n        /*{\n            width: 100,\n            heith: 100,\n            quality: 70,\n            type:\"\"\n        }*/\n        lastModifiedDate: undefined,\n        md5: undefined,\n        httpType: undefined,\n        callback: function (arg) {\n            ///<param name=\"arg\" value=\"cssArgs.objOrmFile.explorer\"></param>\n        }, cbExplorer: function (data) {\n            this.callback(data);\n        },\n        cbMultiExplorer: function (data) {\n            var the = this;\n            var r = JSON.parse(data);\n            var ret = [];\n            $.each(r, function (index, item) {\n                ///<param name =\"item\" type=\"String\"> </param>\n                var a = $.extend({}, the, { filePath: item });\n                ret.push(a);\n                // cssOrm.obj.objOrmFile().getFileAtrr(a);\n            });\n            this.callback(ret);\n        }\n    };\n    cls.prototype.openFileDlg = function (arg) {\n        ///<summary>文件管理器,回调方法cbExplorer</summary>\n        ///<param  name=\"arg\" value=\"cssArgs.objOrmFile.explorer\">必选 文件路径 </param>\n        var id = appTool.unid() + \"\";\n        if (arg.multiOption) {\n            rxm_file.openFilesDlgBlock = $.proxy(explorer.cbMultiExplorer, arg);\n            //  rxm_file.cbExplorer = $.proxy(explorer.cbExplorer, arg);\n            if (arg.ends) {\n                if (arg.ends == \"*\") {\n                    rxm_file.openFilesDlg(\"\");\n                }\n                else {\n                    rxm_file.openFilesDlg(\"\", arg.ends);\n                }\n            }\n            else {\n                rxm_file.openFilesDlg(arg.filePath);\n            }\n        }\n        else {\n            rxm_file.openFileDlgBlock = $.proxy(explorer.cbExplorer, arg);\n            if (arg.ends) {\n                if (arg.ends == \"*\") {\n                    rxm_file.openFileDlg(\"\");\n                }\n                else {\n                    rxm_file.openFileDlg(\"\", arg.ends);\n                }\n            }\n            else {\n                rxm_file.openFileDlg(arg.filePath);\n            }\n        }\n    };\n    //cls.prototype.multiExplorer = function (arg) {\n    //    var id=appTool.unid()+\"\";\n    //    rxm_file.getFileLastModifiedTime(id, 'ci://test.txt');\n    //}\n    cls.prototype.getFileLastModifiedTime = function (arg) {\n        ///<summary>获取文件或文件夹的最后修改时间, 回调方法cbGetFileLastModifiedTime<summary>\n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.getFileLastModifiedTime\"> </param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getFileLastModifiedTime, one: true, data: arg });\n        rxm_file.getFileLastModifiedTime(id, arg.filePath);\n    };\n    cls.prototype.renameFile = function (arg) {\n        ///<summary>重命名文件</summary>\n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.renameFile\"> </param>\n        var id = appTool.unid() + \"\";\n        var param = {\n            oldFilePath: arg.oldFilePath,\n            newFilePath: arg.newFilePath\n        };\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.renameFile, one: true });\n        rxm_file.renameFile(id, param);\n    };\n    cls.prototype.search = function (arg) {\n        ///<summary>搜索文件</summary>\n    };\n    cls.prototype.getAllByPath = function (arg) {\n        ///<summary>2.30 getFileListByPath 获取某路径下的所有文件</summary>\n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.getFileListByPath\"> </param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getFileListByPath, one: true });\n        rxm_file.getAllByPath(id, arg.filePath);\n    };\n    cls.prototype.getSizeByPath = function (arg) {\n        ///<summary>通过路径获取文件大小</summary>\n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.getFileSizeByPath\"> </param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getFileSizeByPath, one: true, data: arg.data });\n        rxm_file.getSizeByPath(id, arg.filePath);\n    };\n    cls.prototype.copyOneFile = function (arg) {\n        ///<summary>复制单个文件</summary>\n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.copyFile\"> </param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.copyFile, one: true });\n        rxm_file.copyOneFile(id, arg.srcPath, arg.desPath);\n    };\n    cls.prototype.getMD5 = function (arg) {\n        ///<summary>获取文件md5</summary> \n        ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.getFileMD5\"> </param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getFileMD5, one: true });\n        rxm_file.getMD5(id, arg.filePath);\n    };\n    // cls.prototype.getImageThumb=function(arg){\n    //     ///<summary>获取图片缩略图（Base64）</summary>\n    //     ///<param name=\"arg\"  value=\"cssArgs.objOrmFile.getImageThumb\"> </param>\n    //     var id = appTool.unid() + \"\";\n    //     cssOrm.on({ callback: arg.callback, id: id, msgType: cls.msg.getImageThumb, one: true });\n    //     rxm_file.getImageThumb(id, arg.filePath, arg.thumbWidth, arg.thumbHight, arg.quality, arg.type);\n    // }\n    cls.prototype.getSystemCacheSize = function (arg) {\n        ///<summary>获取系统缓存大小</summary>\n        ///<param  name=\"arg\" value=\"cssArgs.objOrmFile.getSystemCacheSize\">空或0 获取所有缓存大小，1 视频，2音频，3图片，4浏览器缓存 </param>\n        cssOrm.on({ callback: arg.callback, msgType: cls.msg.getSystemCacheSize, one: true, id: arg.type });\n        rxm_file.getSystemCacheSize(arg.type);\n    };\n    cls.prototype.cleanSystemCache = function (arg) {\n        ///<summary>清除系统缓存</summary>\n        ///<param  name=\"arg\" value=\"cssArgs.objOrmFile.cleanSystemCache\">空或0 获取所有缓存大小，1 视频，2音频，3图片，4浏览器缓存 </param>\n        if (arg.type == \"5\") {\n            rxm_download.deleteAllDownloadTaskAndFile();\n            var data = {\n                type: 5,\n                stauts: 1\n            };\n            arg.callback(\"\", data);\n        }\n        else if (arg.type == \"0\") {\n            cssOrm.on({ callback: arg.callback, msgType: cls.msg.cleanSystemCache, one: true, id: arg.type });\n            rxm_file.cleanSystemCache(arg.type);\n            rxm_download.deleteAllDownloadTaskAndFile();\n        }\n        else {\n            cssOrm.on({ callback: arg.callback, msgType: cls.msg.cleanSystemCache, one: true, id: arg.type });\n            rxm_file.cleanSystemCache(arg.type);\n        }\n    };\n    if (typeof rxm_file !== 'undefined') {\n        rxm_file.deleteByPathBlock = function (opId, data) {\n            ///<summary>根据路径删除文件的回调方法</summary>\n            ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n            ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 </param>\n            var sucesss = data == \"1\" ? true : false;\n            cssOrm.trigger(cls.msg.deleteFileByPath, opId, sucesss);\n        };\n        rxm_file.isExistByPathBlock = function (opId, data) {\n            ///<summary>根据路径判断文件是否存在的回调方法</summary>\n            ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n            ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 0 文件不存在1，文件存在</param>\n            var sucesss = data == \"1\" ? true : false;\n            cssOrm.trigger(cls.msg.isFileExistByPath, opId, sucesss);\n        };\n        rxm_file.getTypeByPathBlock = function (opId, data) {\n            ///<summary> 根据路径获取文件类型的回调方法</summary>\n            ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n            ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 0 文件，1文件夹</param>\n            //var sucesss = data == \"1\" ? true : false;\n            cssOrm.trigger(cls.msg.getFileTypeByPath, opId, data);\n        };\n        rxm_file.getSizeByPathBlock = function (opId, data) {\n            ///<summary> 获取文件大小的回调方法</summary>\n            ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n            ///<param  name=\"data\" type=\"Number\">返回文件的内容</param>\n            if (data > -1) {\n                data = data + \"\";\n                var a;\n                data = (a = data.indexOf(\".\")) > -1 ? data.substring(0, a) : data;\n                data = data * 1;\n            }\n            ;\n            cssOrm.trigger(cls.msg.getFileSizeByPath, opId, data);\n        };\n        rxm_file.getFileLastModifiedTimeBlock = function (opId, data) {\n            cssOrm.trigger(cls.msg.getFileLastModifiedTime, opId, data);\n        };\n        //getFileTypeByPath: \"getFileTypeByPath\",\n        //deleteFileByPath: \"deleteFileByPath\",\n        //getFileLastModifiedTime: \"getFileLastModifiedTime\",\n        rxm_file.renameFileBlock = function (opId, result) {\n            var success = result == \"1\" ? true : false;\n            cssOrm.trigger(cls.msg.renameFile, opId, success);\n        },\n            rxm_file.searchFileBlock = function (result, data) {\n                cssOrm.trigger(cls.msg.search, opId, data);\n            },\n            rxm_file.getAllByPathBlock = function (opId, json) {\n                var obj = JSON.parse(json);\n                cssOrm.trigger(cls.msg.getFileListByPath, opId, obj);\n            },\n            //getFileSizeByPath: \"getFileSizeByPath\",\n            rxm_file.copyOneFileBlock = function (opCode, data) {\n                var ret = data == \"1\" ? true : false;\n                cssOrm.trigger(cls.msg.copyFile, opCode, ret);\n            },\n            rxm_file.getMD5Block = function (opId, data) {\n                cssOrm.trigger(cls.msg.getFileMD5, opId, data);\n            };\n        rxm_file.getImageThumbBlock = function (opId, data) {\n            cssOrm.trigger(cls.msg.getImageThumb, opId, data);\n        };\n        rxm_file.getSystemCacheSizeBlock = function (type, size) {\n            var data = {\n                type: type,\n                size: size\n            };\n            cssOrm.trigger(cls.msg.getSystemCacheSize, data);\n        };\n        rxm_file.cleanSystemCacheBlock = function (type, stauts) {\n            var data = {\n                type: type,\n                stauts: stauts\n            };\n            cssOrm.trigger(cls.msg.cleanSystemCache, data);\n        };\n    }\n    //isFileExistByPath: \"isFileExistByPath \"\n    cssOrm.declare(\"objOrmFile\", cls, true);\n    return cssOrm.obj.objOrmFile();\n});\n","define('RxmImage', [\"RxmImageBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsImageBase\"><param>\n    if (cssOrm.obj.objOrmImage) {\n        return cssOrm.obj.objOrmImage();\n    }\n    function clsImage() {\n        ///<summary>本地图片插件</summary>\n    }\n    clsImage.prototype.openPicker = function (args) {\n        ///<summary>打开照片选择器</summary>\n        ///<param name=\"min\",type=\"Number\">可选 最小选择数量 ,传0表示无限制，默认值1</param>\n        ///<param name=\"max\",type=\"Number\">可选 最大选择数量 ,传0表示无限制，默认值0</param>\n        ///<param name=\"quality\",type=\"Number\">可选 PG压缩质量 取值范围 0-1 越大表示质量越好，默认值0.5</param>\n        ///<param name=\"usePng\",type=\"Number\">可选 用png格式导出图片 ,此参数为1时,quality参数无效，默认值0</param>\n        ///<param name=\"detailedInfo\",type=\"Number\">可选 此参数为1时,回调中会包含图片的额外信息，默认值0</param>\n        ///<param name=\"param\",type=\"Object\">可选 </param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"imagePickerClosed\", one: true, id: \"\" });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openImgPicker(args);\n    };\n    clsImage.prototype.openBrowser = function (args) {\n        ///<summary>打开一个可以浏览图片的浏览器</summary>\n        ///<param name=\"data\",type=\"Array\">必选 图片资源构成的数组 </param>\n        ///<param name=\"startIndex\",type=\"Number\">可选 非负整数 起始图片位置，默认值0</param>\n        ///<param name=\"displayActionButton\",type=\"Number\">可选 1:显示分享按钮 ,0 隐藏，默认值0</param>\n        ///<param name=\"enableGrid\",type=\"Number\">可选 1:允许九宫格视图 ,0 不允许，默认值1</param>\n        ///<param name=\"startOnGrid\",type=\"Number\">可选 1:以九宫格视图起始，默认值0</param>\n        ///<param name=\"displayNavArrows\",type=\"Number\">可选 显示切换箭头(仅iOS支持此参数)，默认值0</param>\n        args.data = JSON.stringify(args.data);\n        nativeCls.openImgBrowser(args);\n    };\n    clsImage.prototype.openImgOnline = function (args) {\n        ///<summary>打开在线图片</summary>\n        ///<param name=\"data\",type=\"Array\">必选 图片资源构成的数组 </param>\n        ///<param name=\"startIndex\",type=\"Number\">可选 非负整数 起始图片位置，默认值0</param>\n        ///<param name=\"displayActionButton\",type=\"Number\">可选 1:显示分享按钮 ,0 隐藏，默认值0</param>\n        ///<param name=\"enableGrid\",type=\"Number\">可选 1:允许九宫格视图 ,0 不允许，默认值1</param>\n        ///<param name=\"startOnGrid\",type=\"Number\">可选 1:以九宫格视图起始，默认值0</param>\n        ///<param name=\"displayNavArrows\",type=\"Number\">可选 显示切换箭头(仅iOS支持此参数)，默认值0</param>\n        var href = args.href;\n        if (href.indexOf(\"http://\") == -1 && href.indexOf(\"https://\") == -1) {\n            var host = require(\"RxmAppTool\").getUpdateUrl() + \"/resoft/x/file/down?fileId=\";\n            if (host.length > 0) {\n                if (href.indexOf(\"resoft/x/file/down\") == -1) {\n                    href = host + href;\n                }\n                else {\n                    var server = require(\"RxmAppTool\").getServer();\n                    if (href.indexOf(server) === 0) {\n                        href = href.replace(server, host);\n                    }\n                }\n            }\n        }\n        var data = [{\n                src: href\n            }];\n        args.data = JSON.stringify(data);\n        nativeCls.openImgBrowser(args);\n    };\n    clsImage.prototype.openCropper = function (args) {\n        ///<summary>打开一个图片裁剪器,导出裁剪后的图片,并返回图片路径</summary>\n        ///<param name=\"src\",type=\"String\">可选 图片路径 支持wgt:// wgts:// file:// res://</param>\n        ///<param name=\"quality\",type=\"Number\">可选 JPG压缩质量 取值范围 0-1 越大表示质量越好，默认值0.5</param>\n        ///<param name=\"usePng\",type=\"Number\">可选 1:用png格式导出图片 ,此参数为1时,quality参数无效，默认值0</param>\n        ///<param name=\"mode\",type=\"Number\">可选 正方型裁剪 2- 圆形裁剪(仅iOS支持圆形裁剪)，默认值1</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"imageCropperClosed\", one: true, id: \"\" });\n        nativeCls.openImgCropper(args.src, args.quality, args.usePng, args.mode);\n    };\n    clsImage.prototype.saveToPhotoAlbum = function (args) {\n        ///<summary>将本地图片储存到系统相册</summary>\n        ///<param name=\"localPath\",type=\"String\">必选 图片路径 支持res:// wgt:// wgts:// file://</param>\n        ///<param name=\"extraInfo\",type=\"String\">可选 任意字符串,设置后会随cbSaveToPhotoAlbum传出,extraInfo 可作唯一标识符用</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"imageSaveToPhotoAlbum\", one: true, id: \"\" });\n        nativeCls.saveToPhotoAlbum(args.localPath, args.extraInfo);\n    };\n    clsImage.prototype.clearOutputImages = function () {\n        ///<summary>清除由本插件的openPicker、openCropper接口所生成的图片文件 若您的APP有多个widget,则只会清除由当前widget所生成的图片文件</summary>\n        nativeCls.clearOutputImages();\n    };\n    clsImage.prototype.setIpadPopEnable = function (args) {\n        ///<summary>插件在iPad上默认用pop窗口展示插件页面,通过调用此接口,可以选择是否禁用pop窗口,改用全屏展示插件页面。</summary>\n        nativeCls.setIpadPopEnable(args.flag);\n    };\n    clsImage.prototype.openVideoPicker = function (args) {\n        ///<summary> 打开视频选择器</summary>\n        ///<param name=\"needBase64\",type=\"int\">1返回视频缩略图的 base64，0 不返回</param>\n        ///<param name=\"param\",type=\"Object\">可选 </param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"videoPickerClosed\", one: true, id: \"\" });\n        nativeCls.openVideoPicker(args.needBase64);\n    };\n    cssOrm.declare(\"objOrmImage\", clsImage, true);\n    return cssOrm.obj.objOrmImage();\n});\n","define(\"RxmLocalNotification\", [\"RxmLocalNotificationBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsLocalNotificationBase\"><param>\n    function clsLocalNotification() {\n        ///<summary>本地通知插件</summary>\n    }\n    clsLocalNotification.prototype.addNotice = function (args) {\n        ///<summary>本地通知功能,可以做到本地定时推送消息提醒,设置提醒消息时会在通知栏收到消息,提醒声音与系统设置的系统默认铃声提醒一致</summary>\n        ///<param  name=\"args\"  type=\"clsNotificationArgs\">添加通知参数对象</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"notificationAdd\", one: true, id: \"\" });\n        nativeCls.addNotice(args);\n    };\n    clsLocalNotification.prototype.removeNotice = function (id) {\n        ///<summary>移除指定唯一标示符的通知</summary>\n        ///<param name=\"id\",type=\"String\">必选  通知的唯一标示符</param>\n        nativeCls.removeNotice(id);\n    };\n    clsLocalNotification.prototype.removeAllNotice = function () {\n        ///<summary>移除所有通知</summary>\n        nativeCls.removeAllNotice();\n    };\n    cssOrm.declare(\"clsLocalNotification\", clsLocalNotification);\n    return clsLocalNotification;\n});\n","define('RxmLoaction', [\"RxmLocationBase\", 'RxmAppTool'], function (nativeCls, appTool) {\n    ///<param  name=\"nativeCls\"  type=\"clsLocationBase\"><param>\n    if (cssOrm.obj.objOrmLoaction) {\n        return cssOrm.obj.objOrmLoaction();\n    }\n    ;\n    this._open = false;\n    function clsLocation() {\n        ///<summary>本地定位插件</summary>\n    }\n    clsLocation.prototype.openLocation = function (args) {\n        ///<summary>打开定位功能</summary>\n        ///<param  name=\"args\"  type=\"clsNotificationArgs\">添加通知参数对象</param>\n        if (args.onChange) {\n            cssOrm.on({ callback: args.callback, data: args.data, msgType: \"locationOnChange\", one: false, id: \"\" });\n        }\n        else {\n            cssOrm.on({ callback: args.callback, data: args.data, msgType: \"locationOnChange\", one: true, id: \"\" });\n        }\n        cssOrm.on({ callback: args.callbackOpen, data: args.data, msgType: \"locationOpen\", one: true, id: \"\" });\n        if (!this._open) {\n            nativeCls.open();\n            this._open = true;\n        }\n    };\n    clsLocation.prototype.closeLocation = function (args) {\n        ///<summary>关闭定位功能,不再监听位置信息。</summary>\n        ///<param  name=\"args\"  type=\"clsNotificationArgs\">添加通知参数对象</param>\n        //cssOrm.on({ data: args.data, msgType: \"locationClose\", one: true, id: \"\" });\n        nativeCls.close();\n        this._open = false;\n    };\n    clsLocation.prototype.getAddress = function (args) {\n        ///<summary>根据经纬度获取对应的地址信息 </summary>\n        ///<param  name=\"args\"  type=\"clsNotificationArgs\">添加通知参数对象</param>\n        var id = appTool.unid() + \"\";\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"locationGetAddress\", one: true, id: id });\n        nativeCls.getAddressByPosition(id, args.lat, args.log, args.flag);\n    };\n    clsLocation.prototype.navigationByApps = function (args) {\n        ///<summary>调用手机安装的地图 app 进行导航，默认驾车模式，进入第三方 app 后可以自行切换导航模式。 </summary>\n        nativeCls.navigationByApps(args.startName, args.startLng, args.startLat, args.endName, args.endLng, args.endLat, args.coorType);\n    };\n    cssOrm.declare(\"objOrmLoaction\", clsLocation, true);\n    return cssOrm.obj.objOrmLoaction();\n});\n","define('RxmMessage', [], function () {\n    if (typeof rxm_msg_jpush == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.objOrmMessage != \"undefined\") {\n        return cssOrm.obj.objOrmMessage();\n    }\n    ;\n    var cls = function () {\n    };\n    //页面切到后台时保持推送监听\n    cls.prototype.keepPushOnPause = function (flag) {\n        rxm_msg_jpush.keepPushOnPause(flag);\n    };\n    //停止推送服务\n    cls.prototype.stopPush = function () {\n        if (require(\"RxmAppTool\").isAndriod()) {\n            rxm_msg_jpush.stopPush();\n        }\n        else if (require(\"RxmAppTool\").isIOS()) {\n            var params = { alias: \"\" };\n            var data = JSON.stringify(params);\n            rxm_msg_jpush.setAlias(data);\n            rxm_msg_jpush.setTags(data);\n        }\n    };\n    //resumePush 恢复推送服务\n    cls.prototype.resumePush = function () {\n        if (require(\"RxmAppTool\").isAndriod()) {\n            rxm_msg_jpush.resumePush();\n        }\n        else if (require(\"RxmAppTool\").isIOS()) {\n            //重新登陆即可\n        }\n    };\n    //设置别名\n    cls.prototype.setAlias = function (alias, callback) {\n        rxm_msg_jpush.setAliasBLock = function (data) {\n            callback && callback(data);\n        };\n        var params = { alias: alias };\n        var data = JSON.stringify(params);\n        rxm_msg_jpush.setAlias(data);\n    };\n    //设置标签  例如：var tags=new Array(\"tag1\",\"tag2\",\"tag3\");为字符串数组\n    cls.prototype.setTags = function (tags, callback) {\n        rxm_msg_jpush.setTagsBlock = function (data) {\n            callback && callback(data);\n        };\n        var params = { tags: tags };\n        var data = JSON.stringify(params);\n        rxm_msg_jpush.setTags(data);\n    };\n    //同时设置别名与标签   tags为字符串数组\n    cls.prototype.setAliasAndTags = function (alias, tags, callback) {\n        rxm_msg_jpush.setAliasAndTagsBlock = function (data) {\n            callback && callback(data);\n        };\n        var params = { alias: alias, tags: tags };\n        var data = JSON.stringify(params);\n        rxm_msg_jpush.setAliasAndTags(data);\n    };\n    //取得应用程序对应的 RegistrationID\n    cls.prototype.getRegistrationID = function (callback) {\n        rxm_msg_jpush.getRegistrationIDBlock = function (data) {\n            callback && callback(data);\n        };\n        rxm_msg_jpush.getRegistrationID();\n    };\n    //清除所有通知 for android\n    cls.prototype.clearAllNotifications = function (callback) {\n        if (require(\"RxmAppTool\").isAndriod()) {\n            rxm_msg_jpush.clearAllNotifications();\n        }\n    };\n    //根据Id清除某条通知 for android\n    cls.prototype.clearNotificationById = function (notificationId) {\n        if (require(\"RxmAppTool\").isAndriod()) {\n            var params = { notificationId: notificationId };\n            var data = JSON.stringify(params);\n            rxm_msg_jpush.clearNotificationById(data);\n        }\n    };\n    //连接状态发生变化\n    cls.prototype.onReceiveConnectionChange = function (callback) {\n        rxm_msg_jpush.onReceiveConnectionChange = function (data) {\n            callback && callback(data);\n            /*var json = JSON.parse(data);\n            switch(json.connect)\n            {\n                case '0':\n                alert('已连接上');\n                break;\n                case '1':\n                alert('未连接');\n                break;\n            }*/\n        };\n    };\n    //连接状态变化\n    cls.prototype.getConnectionState = function (callback) {\n        rxm_msg_jpush.getConnectionStateBlock = function (data) {\n            callback && callback(data);\n        };\n        rxm_msg_jpush.getConnectionState();\n    };\n    //添加一个本地通知 var params = { builderId:0, title:\"这是title\", content:\"这是内容\", extras:{\"key\":\"value\"},notificationId:3, broadCastTime:10000 };\n    cls.prototype.addLocalNotification = function (params) {\n        var data = JSON.stringify(params);\n        rxm_msg_jpush.addLocalNotification(data);\n    };\n    //移除一个本地通知\n    cls.prototype.removeLocalNotification = function (notificationId) {\n        var params = {\n            notificationId: notificationId\n        };\n        var data = JSON.stringify(params);\n        rxm_msg_jpush.removeLocalNotification(data);\n    };\n    //移除所有的通知\n    cls.prototype.clearLocalNotifications = function (notificationId) {\n        rxm_msg_jpush.clearLocalNotifications();\n    };\n    //设置badge值\n    cls.prototype.setBadgeNumber = function (badgeNumber) {\n        if (require(\"RxmAppTool\").isIOS()) {\n            rxm_msg_jpush.setBadgeNumber(badgeNumber);\n        }\n    };\n    //禁止前台本地通知提示框    参数：1-禁止 其他-允许\n    //和Android系统不同，在iOS系统中，当APP处于前台时，收到本地通知后，系统不会在屏幕顶部弹出气泡显示通知内容。 于是极光SDK自己设置了一个本地通知提示框，在APP在前台收到本地通知后弹出，显示通知内容。 通过调用此接口，可以禁止或者重新启动此本地通知提示框\n    cls.prototype.disableLocalNotificationAlertView = function (param) {\n        if (require(\"RxmAppTool\").isIOS()) {\n            rxm_msg_jpush.disableLocalNotificationAlertView(param);\n        }\n    };\n    //收到了自定义消息\n    rxm_msg_jpush.onReceiveMessage = function (data) { };\n    //当用户收到通知后，修改该用户对应该条通知的状态\n    function changeUserMsgStatus(sendno) {\n        var userId = require(\"RxmAppTool\").getUserID();\n        if (sendno && userId) {\n            $.ajax({\n                url: getServer() + \"/resoft/origianl/message/updateRecMsgforDb\",\n                type: \"post\",\n                data: { msgId: sendno, userUuid: userId },\n                success: function (data) {\n                }\n            });\n        }\n    }\n    //收到了通知\n    rxm_msg_jpush.onReceiveNotification = function (data) {\n        var id = \"\";\n        var myData = {};\n        var sendno = \"\";\n        if (require(\"RxmAppTool\").isAndriod()) {\n            data = JSON.parse(data);\n            id = data.extras.msgType;\n            sendno = data.extras.sendno;\n            myData = { title: data.title,\n                content: data.content,\n                msgType: data.extras.msgType,\n                data: data.extras,\n                notificationId: data.notificationId\n            };\n            changeUserMsgStatus(sendno);\n        }\n        else if (require(\"RxmAppTool\").isIOS()) {\n            data = JSON.parse(data);\n            id = data.extras.msgType;\n            sendno = data.extras.sendno;\n            myData = { title: data.title,\n                content: data.content,\n                msgType: data.extras.msgType,\n                data: data.extras\n            };\n            if (data.isAPNs) {\n                changeUserMsgStatus(sendno);\n            }\n        }\n        cssOrm.trigger(cls.Msg.receiveMsg, id, myData);\n    };\n    cls.Msg = {\n        receiveMsg: \"receiveMsg\",\n        openMsg: \"openMsg\"\n    };\n    //用户点击了通知\n    rxm_msg_jpush.onReceiveNotificationOpen = function (data) {\n        var id = \"\";\n        var myData = {};\n        var sendno = \"\";\n        if (require(\"RxmAppTool\").isAndriod()) {\n            data = JSON.parse(data);\n            id = data.extras.msgType;\n            sendno = data.extras.sendno;\n            myData = { title: data.title,\n                content: data.content,\n                msgType: data.extras.msgType,\n                data: data.extras,\n                notificationId: data.notificationId\n            };\n            changeUserMsgStatus(sendno);\n        }\n        else if (require(\"RxmAppTool\").isIOS()) {\n            data = JSON.parse(data);\n            id = data.extras.msgType;\n            sendno = data.extras.sendno;\n            myData = { title: data.title,\n                content: data.content,\n                msgType: data.extras.msgType,\n                data: data.extras\n            };\n            if (data.isAPNs) {\n                changeUserMsgStatus(sendno);\n            }\n        }\n        cssOrm.trigger(cls.Msg.openMsg, id, myData);\n    };\n    //应用程序注册监听\n    rxm_msg_jpush.onReceiveRegistration = function (data) {\n        //data 更具消息类型 发  \n    };\n    cssOrm.declare(\"objOrmMessage\", cls, true);\n    return cssOrm.obj.objOrmMessage();\n});\n","define('RxmOpenFile', [\"\"], function () {\n    if (typeof rxm_docReader == 'undefined' || typeof rxm_video_player == 'undefined'\n        || typeof rxm_audio == 'undefined' || typeof rxm_image == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.objOrmOpenFile != \"undefined\") {\n        return cssOrm.obj.objOrmOpenFile();\n    }\n    function cls() {\n    }\n    ;\n    cls.prototype.openFile = function (localFilePath) {\n        var a = localFilePath.lastIndexOf(\".\");\n        var fileExt = localFilePath.substring(a + 1).toLowerCase();\n        if ((fileExt == \"pdf\") || (fileExt == \"txt\") || (fileExt == \"doc\") || (fileExt == \"xls\")\n            || (fileExt == \"ppt\") || (fileExt == \"docx\") || (fileExt == \"xlsx\")\n            || (fileExt == \"pptx\")) {\n            rxm_docReader.openDocReader(localFilePath);\n        }\n        else if (fileExt == \"mp4\") {\n            //cipVideoExt.openSystemPlayer(localFilePath);\n            /*var param = {\n                src: localFilePath,\n                showCloseButton: true,\n                autoStart: true,\n                forceFullScreen: true\n\r\n            }\n            cipVideo.openPlayer(JSON.stringify(param));*/\n            rxm_video_player.openSystemPlayer(localFilePath);\n        }\n        else if (fileExt == \"mp3\") {\n            rxm_audio.openPlayer(localFilePath, 0);\n        }\n        else if ((fileExt == \"jpg\") || (fileExt == \"jpeg\") || (fileExt == \"png\")) {\n            var data = [{\n                    src: localFilePath,\n                }];\n            var json = JSON.stringify(data);\n            rxm_image.openImgBrowser(json);\n        }\n    };\n    cssOrm.declare(\"objOrmOpenFile\", cls, true);\n    return cssOrm.obj.objOrmOpenFile();\n});\n","define('RxmOpenPdf', [\"\"], function () {\n    if (typeof rxm_pdf == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.objOrmOpenPdf != \"undefined\") {\n        return cssOrm.obj.objOrmOpenPdf();\n    }\n    function cls() {\n    }\n    ;\n    cls.prototype.openPdf = function (args) {\n        var url = args.url;\n        var title = !!args.title ? args.title : \"PDF查看\";\n        var hasPrint = !!args.hasPrint ? args.hasPrint : \"false\";\n        var printWord = !!args.printWord ? args.printWord : \"保密文件，切勿外泄\";\n        var color = !!args.color ? args.color : \"#B5B5B5\";\n        var fontSize = !!args.fontSize ? args.fontSize : \"35\";\n        var opacity = !!args.opacity ? args.opacity : \"0.8\";\n        var degree = !!args.degree ? args.degree : \"30\";\n        var horizontalSpacing = !!args.horizontalSpacing ? args.horizontalSpacing : \"260\";\n        var verticalSpacing = !!args.verticalSpacing ? args.verticalSpacing : \"200\";\n        rxm_pdf.openPdf(url, title, hasPrint, printWord, color, fontSize, opacity, degree, horizontalSpacing, verticalSpacing);\n    };\n    cssOrm.declare(\"objOrmOpenPdf\", cls, true);\n    return cssOrm.obj.objOrmOpenPdf();\n});\n","define('RxmPhone', [], function () {\n    if (typeof rxm_sms == 'undefined' || typeof rxm_phone == 'undefined') {\n        return;\n    }\n    //var obj = cssOrm || {};\n    if (typeof cssOrm.obj.objOrmPhone != \"undefined\") {\n        return cssOrm.obj.objOrmPhone();\n    }\n    var cls = function () { };\n    cls.prototype.sms = function (phoneNum, content) {\n        if (typeof rxm_sms != \"undefined\") {\n            // 调用cip\n            rxm_sms.showEditor(phoneNum, content);\n        }\n        else {\n            window.location = \"sms:\" + phoneNum + \"&body=\" + content;\n        }\n    };\n    /**\n    * 打电话\n    */\n    cls.prototype.call = function (number) {\n        if (typeof rxm_phone != \"undefined\") {\n            // 调用cip\n            rxm_phone.call(number);\n        }\n        else {\n            window.location = \"tel:\" + number;\n        }\n    };\n    cssOrm.declare(\"objOrmPhone\", cls, true);\n    return cssOrm.obj.objOrmPhone();\n});\n","define('RxmScanner', [\"RxmScannerBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsScannerBase\"><param>\n    if (typeof rxm_scanner == 'undefined') {\n        return;\n    }\n    if (cssOrm.obj.objOrmScanner) {\n        return cssOrm.obj.objOrmScanner();\n    }\n    ;\n    function clsScanner() {\n        ///<summary>二维码插件</summary>\n    }\n    clsScanner.prototype.open = function (args) {\n        ///<summary>打开扫描仪</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        //        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"scannerOpen\" one: true, id: \"\" });\n        //\n        //        nativeCls.open();\n        rxm_scanner.beginBlock = function ScannerSuccessCallBack(status, data) {\n            var widget = require(require.rxm.PageBase);\n            if ((args != undefined) && (args.callback != undefined)) {\n                args.callback(\"\", data);\n            }\n            if (status == '1') {\n                if ((args != undefined) && (args.args != undefined)) {\n                    widget.jumpPage(\"CI\", data, args.args);\n                }\n                else {\n                    widget.jumpPage(\"CI\", data, {});\n                }\n            }\n        };\n        rxm_scanner.begin();\n    };\n    clsScanner.prototype.createQR = function (args) {\n        ///<summary>根据文本创建对应二维码图片</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"scannerCreateQR\", one: true, id: \"\" });\n        nativeCls.createQR(args.content);\n    };\n    cssOrm.declare(\"objOrmScanner\", clsScanner, true);\n    return cssOrm.obj.objOrmScanner();\n});\n","define('RxmSpeech', [\"RxmSpeechBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsCameraBase\"><param>\n    if (require(\"RxmAppTool\").isIOS()) {\n        return;\n    }\n    if (cssOrm.obj.objOrmSpeech) {\n        return cssOrm.obj.objOrmSpeech();\n    }\n    function clsSpeech() {\n        ///<summary>语音识别</summary>\n    }\n    clsSpeech.prototype.start = function (arg) {\n        ///<summary>调用语音识别</summary>\n        ///<param name=\"arg\" value=\"cssArgs.objOrmCamera.open\"></param>\n        cssOrm.on({ callback: arg.callback, data: arg.data, msgType: \"speechStop\", one: true, id: \"\" });\n        delete arg.callback;\n        delete arg.data;\n        nativeCls.start();\n    };\n    // clsSpeech.prototype.stop = function (arg) {\n    //     ///<summary>结束语音识别</summary>\n    //     ///<param name=\"arg\" value=\"cssArgs.objOrmCamera.open\"></param>\n    //     cssOrm.on({ callback: arg.callback, data: arg.data, msgType: \"speechStop\", one: true, id: \"\" });\n    //     nativeCls.stop();\n    // }\n    cssOrm.declare(\"objOrmSpeech\", clsSpeech, true);\n    return cssOrm.obj.objOrmSpeech();\n});\n","define('RxmVideo', [\"RxmVideoBase\"], function (nativeCls) {\n    ///<param  name=\"nativeCls\"  type=\"clsVideoBase\"><param>\n    if (cssOrm.obj.objOrmVideo) {\n        return cssOrm.obj.objOrmVideo();\n    }\n    ;\n    function clsVideo() {\n        ///<summary>本地视频播放插件</summary>\n    }\n    clsVideo.prototype.openSystemPlayer = function (args) {\n        ///<summary>打开视频播放器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"videoOpen\", one: true, id: \"\" });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openSystemPlayer(args);\n    };\n    clsVideo.prototype.openOrmPlayer = function (args) {\n        ///<summary> 打开自定义视频播放器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"videoOpenOrmPlayer\", one: true, id: \"\" });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openOrmPlayer(args);\n    };\n    clsVideo.prototype.openOnlineVideo = function (herf) {\n        ///<summary>打开在线视频</summary>\n        if (herf.indexOf(\"http://\") == -1 || herf.indexOf(\"https://\") == -1) {\n            var host = require(\"RxmAppTool\").getUpdateUrl() + \"/resoft/x/file/down?fileId=\";\n            if (host.length > 0) {\n                if (herf.indexOf(\"resoft/x/file/down\") == -1) {\n                    herf = host + herf;\n                }\n                else {\n                    var server = require(\"RxmAppTool\").getServer();\n                    if (herf.indexOf(server) === 0) {\n                        herf = herf.replace(server, host);\n                    }\n                }\n            }\n        }\n        var json = {\n            src: herf\n        };\n        nativeCls.open(json);\n    };\n    clsVideo.prototype.openPlayer = function (args) {\n        ///<summary>打开自定义视频播放器，支持界面定制</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"videoOpenPlayer\", one: true, id: \"\" });\n        delete args.callback;\n        delete args.data;\n        nativeCls.openPlayer(args);\n    };\n    clsVideo.prototype.closePlayer = function (args) {\n        ///<summary>关闭视频播放器</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        //cssOrm.on({ callback: args.callback, data: args.data, msgType: \"videoClose\", one: true, id: \"\" });\n        nativeCls.closePlayer();\n    };\n    clsVideo.prototype.record = function (args) {\n        ///<summary>录制视频</summary>\n        ///<param name=\"callback\",type=\"Function\">callback回叫函数  function(e,data){} </param>\n        ///<param name=\"param\",type=\"Object\">比选 </param>\n        ///<param name=\"data\",type=\"Object\">可选  用户数据</param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"videoRecordFinish\", one: true, id: \"\" });\n        delete args.callback;\n        delete args.data;\n        nativeCls.record(args);\n    };\n    cssOrm.declare(\"objOrmVideo\", clsVideo, true);\n    return cssOrm.obj.objOrmVideo();\n});\n","define(\"RxmFileInfo\", ['', 'RxmDataObjectBase', 'RxmInherit'], function (baiduWebUploader, dataBase, declare) {\n    ///<summary></summary>\n    ///<param name=\"baiduWebUploader\" value=\"baiduFile\"></param>\n    ///<param name=\"dataBase\" value=\"PdwebDataBase\"></param>\n    ///<param name=\"declare\"  value=\"cssOrm.inherit\"></param>\n    var fileInfo = declare([dataBase], {\n        constructor: function (file) {\n            ///<field name=\"id\" type=\"String\">id</field>\n            ///<field name=\"opType\" type=\"String\">opType</field>\n            ///<field name=\"fileName\" type=\"String\">文件名</field>\n            ///<field name=\"fileExt\" type=\"String\">文件扩展名</field>\n            ///<field name=\"fileSize\" type=\"Number\">文件大小</field>\n            ///<field name=\"orderNum\" type=\"Number\">序号</field>\n            ///<field name=\"thumbnailUrl\" type=\"String\">文件缩略图Url地址</field>\n            ///<field name=\"lastModifiedDate\" type=\"String\">文件本身的Url地址</field>\n            ///<field name=\"_uploaderFile\" type=\"baiduFile\">uploader对象文件</field>\n            ///<field name=\"httpType\"  type=\"String\">文件传输类型</field>\n        }\n    });\n    fileInfo.prototype._constructor = function (file) {\n        ///<summary></summary>\n        ///<param name=\"file\" type=\"File\"></param>\n        this.opType = \"new\";\n        if ((typeof baiduWebUploader != \"undefined\") && (file instanceof baiduWebUploader.File)) {\n            this.fileExt = file.ext;\n            this.fileName = file.name.substring(0, file.name.lastIndexOf(\".\"));\n            this.fileSize = file.size;\n            this.id = createID();\n            this.fileRemarks = file.name;\n            this._uploaderFile = file;\n            this.lastModifiedDate = file.lastModifiedDate;\n            this.httpType = file.type;\n            file.uuid = this.id;\n        }\n        else {\n            $.extend(this, file);\n            if (!this.fileName) {\n                this.fileName = this.id;\n            }\n        }\n    };\n    fileInfo.prototype.submitSuccess = function () {\n        this.opType = \"\";\n        this._uploaderFile = undefined;\n    };\n    var createID = function () {\n        /// <summary >产生32位uuid</summary>\n        /// <returns type=\"String\"></returns>\n        var UUID = {};\n        // INSTANCE SPECIFIC METHODS\n        //\n        UUID.createUUID = function () {\n            var dg = new Date(1582, 10, 15, 0, 0, 0, 0);\n            var dc = new Date();\n            var t = dc.getTime() - dg.getTime();\n            var tl = UUID.getIntegerBits(t, 0, 31);\n            var tm = UUID.getIntegerBits(t, 32, 47);\n            var thv = UUID.getIntegerBits(t, 48, 59) + '1'; // version 1, security version is 2\n            var csar = UUID.getIntegerBits(UUID.rand(4095), 0, 7);\n            var csl = UUID.getIntegerBits(UUID.rand(4095), 0, 7);\n            // since detection of anything about the machine/browser is far to buggy,\n            // include some more random numbers here\n            // if NIC or an IP can be obtained reliably, that should be put in\n            // here instead.\n            var n = UUID.getIntegerBits(UUID.rand(8191), 0, 7) +\n                UUID.getIntegerBits(UUID.rand(8191), 8, 15) +\n                UUID.getIntegerBits(UUID.rand(8191), 0, 7) +\n                UUID.getIntegerBits(UUID.rand(8191), 8, 15) +\n                UUID.getIntegerBits(UUID.rand(8191), 0, 15); // this last number is two octets long\n            return tl + tm + thv + csar + csl + n;\n        };\n        // Pull out only certain bits from a very large integer, used to get the time\n        // code information for the first part of a UUID. Will return zero's if there\n        // aren't enough bits to shift where it needs to.\n        UUID.getIntegerBits = function (val, start, end) {\n            var base16 = UUID.returnBase(val, 16);\n            var quadArray = new Array();\n            var quadString = '';\n            var i = 0;\n            for (i = 0; i < base16.length; i++) {\n                quadArray.push(base16.substring(i, i + 1));\n            }\n            for (i = Math.floor(start / 4); i <= Math.floor(end / 4); i++) {\n                if (!quadArray[i] || quadArray[i] == '') {\n                    quadString += '0';\n                }\n                else {\n                    quadString += quadArray[i];\n                }\n            }\n            return quadString;\n        };\n        // Replaced from the original function to leverage the built in methods in\n        // JavaScript. Thanks to Robert Kieffer for pointing this one out\n        UUID.returnBase = function (number, base) {\n            return (number).toString(base).toUpperCase();\n        };\n        // pick a random number within a range of numbers\n        // int b rand(int a); where 0 <= b <= a\n        UUID.rand = function (max) {\n            return Math.floor(Math.random() * (max + 1));\n        };\n        return UUID.createUUID();\n    };\n    return fileInfo;\n});\n","define('RxmFileUploader', [\"RxmAppUploader\", \"RxmFileInfo\", \"RxmDataCollectionBase\",\n    \"RxmUtil\"], function (appUploader, fileInfo, dataArr, util) {\n    ///<param name=\"dataArr\" value=\"PdwebDataCollectionBase\"></param>\n    ///<param name=\"appUploader\" value=\"ClsGdclUploader\"></param>\n    var ClsFactory = function (config) {\n        var _compress = false;\n        var _chunked = true;\n        var _chunkSize = 1024 * 1024;\n        var _chunkRetry = 2;\n        var _fileNumLimit = 1;\n        var _fileSingleSizeLimit = 100 * 1024 * 1024;\n        var _auto = false;\n        var _title = \"\";\n        var _extensions = \"*\";\n        var _mimeTypes = \"\";\n        var $uploadWrap = $(\"#\" + config.id);\n        var RxmFileUploader = function () {\n            // this._config={\n            //     compress:false,\n            //     chunked:true,\n            //     chunkSize:1024 * 1024,\n            //     chunkRetry:2,\n            //     fileNumLimit:1,\n            //     fileSingleSizeLimit:100 * 1024 * 1024,\n            //     auto:false\n            // }\n            if (typeof config != undefined) {\n                this.attrAuto(config.auto);\n                this.attrChunked(config.chunked);\n                this.attrChunkRetry(config.chunkRetry);\n                this.attrChunkSize(config.chunkSize);\n                this.attrCompress(config.compress);\n                this.attrFileNumLimit(config.fileNumLimit);\n                this.attrFileSingleSizeLimit(config.fileSingleSizeLimit);\n                if (typeof config.accept != 'undefined') {\n                    this.attrTitle(config.accept.title);\n                    this.attrMimeTypes(config.accept.mimeTypes);\n                    this.attrExtensions(config.accept.extensions);\n                }\n            }\n            //获取html定义属性生成config对象\n            getHtmlAttr();\n            // this._config = $.extend(true, this._config, cssOrm.default.clsGridMobile, htmlCfg, cfg);\n            this.dataArr = new dataArr();\n            itemClass = fileInfo.prototype.constructor;\n            this._onlyRead = false;\n            //默认的缩略图后缀\n            this.defaultThumbSuffix = \"\";\n            this.uploader = new appUploader({\n                accept: {\n                    title: _title,\n                    extensions: _extensions,\n                    mimeTypes: _mimeTypes\n                },\n                compress: _compress,\n                chunked: _chunked,\n                chunkSize: _chunkSize,\n                chunkRetry: _chunkRetry,\n                fileNumLimit: _fileNumLimit,\n                fileSingleSizeLimit: _fileSingleSizeLimit,\n                auto: _auto,\n                server: ClsFactory.urlUpload(),\n                disableGlobalDnd: true,\n            });\n            //添加文件\n            this.uploader.on(appUploader.enumEvt.fileQueued, this._onAfterFileAdd, this);\n            //文件上传进度\n            this.uploader.on(appUploader.enumEvt.uploadProgress, this._onUploadProgress, this);\n            //文件在队列中删除\n            this.uploader.on(appUploader.enumEvt.fileDequeued, this.delFile, this);\n            //单个文件上传开始\n            this.uploader.on(appUploader.enumEvt.uploadStart, this._onUploadStart, this);\n            //单个文件上传结束\n            this.uploader.on(appUploader.enumEvt.uploadSuccess, this._onAfterUploadSuccess, this);\n            //所有文件上传结束\n            this.uploader.on(appUploader.enumEvt.uploadFinished, this._onUploadFinished, this);\n            this.uploader.on(appUploader.enumEvt.error, this._onError, this);\n            this.uploader.on(\"beforeFileQueued\", this._onbeforeFileQueued, this);\n            this._auto = true;\n        };\n        function getRadioValue(arg) {\n            var radioValue = false;\n            if (typeof arg == \"boolean\") {\n                radioValue = arg;\n            }\n            else if (typeof arg == \"string\") {\n                radioValue = (arg == \"true\");\n            }\n            return radioValue;\n        }\n        /**\n         * 设置上传title\n         * @param {String} arg\n         * @returns {String}  - 上传title\n         */\n        RxmFileUploader.prototype.attrTitle = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _title = arg;\n                $uploadWrap.attr(\"rxmtitle\", _title);\n            }\n            return _title;\n        };\n        /**设置上传文件类型限制\n         * @param {String} arg\n         * @returns {String}  - 上传文件类型\n         */\n        RxmFileUploader.prototype.attrExtensions = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _extensions = arg;\n                $uploadWrap.attr(\"rxmextensions\", _extensions);\n            }\n            return _extensions;\n        };\n        RxmFileUploader.prototype.attrMimeTypes = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _mimeTypes = arg;\n                $uploadWrap.attr(\"rxmmimeTypes\", _mimeTypes);\n            }\n            return _mimeTypes;\n        };\n        /**\n         * 设置是否压缩\n         * @param {Boolean} arg - 是否压缩\n         * @returns {Boolean}  - 压缩状态\n         */\n        RxmFileUploader.prototype.attrCompress = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _compress = getRadioValue(arg);\n                $uploadWrap.attr(\"rxmcompress\", _compress);\n            }\n            return _compress;\n        };\n        /**\n         * 设置是否分片上传\n         * @param {Boolean} arg - 是否分片\n         * @returns {Boolean}  - 分片状态\n         */\n        RxmFileUploader.prototype.attrChunked = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _chunked = getRadioValue(arg);\n                $uploadWrap.attr(\"rxmchunked\", _chunked);\n            }\n            return _chunked;\n        };\n        /**\n         * 设置分片大小\n         * @param {Number} arg - 分片大小\n         * @returns {Number}  - 分片大小\n         */\n        RxmFileUploader.prototype.attrChunkSize = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _chunkSize = arg;\n                $uploadWrap.attr(\"rxmchunkSize\", _chunkSize);\n            }\n            return _chunkSize;\n        };\n        /**\n         * 分片重传次数\n         * @param {Number} arg - 分片重传次数\n         * @returns {Number}  - 分片重传次数\n         */\n        RxmFileUploader.prototype.attrChunkRetry = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _chunkRetry = arg;\n                $uploadWrap.attr(\"rxmchunkRetry\", _chunkRetry);\n            }\n            return _chunkRetry;\n        };\n        /**\n         * 文件数量限制\n         * @param {Number} arg - 文件数量限制\n         * @returns {Number}  - 文件数量限制\n         */\n        RxmFileUploader.prototype.attrFileNumLimit = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _fileNumLimit = arg;\n                $uploadWrap.attr(\"rxmfileNumLimit\", _fileNumLimit);\n            }\n            return _fileNumLimit;\n        };\n        /**\n         * 单文件大小限制\n         * @param {Number} arg - 单文件大小限制\n         * @returns {Number}  - 单文件大小限制\n         */\n        RxmFileUploader.prototype.attrFileSingleSizeLimit = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _fileSingleSizeLimit = arg;\n                $uploadWrap.attr(\"rxmfileSingleSizeLimit\", _fileSingleSizeLimit);\n            }\n            return _fileSingleSizeLimit;\n        };\n        /**\n        * 自动上传\n        * @param {Boolean} arg - 自动上传\n        * @returns {Boolean}  - 自动上传\n        */\n        RxmFileUploader.prototype.attrAuto = function (arg) {\n            if (typeof arg != \"undefined\") {\n                _auto = getRadioValue(arg);\n                $uploadWrap.attr(\"rxmauto\", _auto);\n            }\n            return _auto;\n        };\n        /**\n         * 根据hmtl标签设置属性值\n         */\n        function getHtmlAttr() {\n            if (typeof ($uploadWrap.attr(\"rxmcompress\")) != \"undefined\") {\n                _compress = $uploadWrap.attr(\"rxmcompress\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmchunked\")) != \"undefined\") {\n                _chunked = $uploadWrap.attr(\"rxmchunked\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmchunkSize\")) != \"undefined\") {\n                _chunkSize = $uploadWrap.attr(\"rxmchunkSize\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmchunkRetry\")) != \"undefined\") {\n                _chunkRetry = $uploadWrap.attr(\"rxmchunkRetry\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmfileNumLimit\")) != \"undefined\") {\n                _fileNumLimit = $uploadWrap.attr(\"rxmfileNumLimit\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmfileSingleSizeLimit\")) != \"undefined\") {\n                _fileSingleSizeLimit = $uploadWrap.attr(\"rxmfileSingleSizeLimit\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmauto\")) != \"undefined\") {\n                _auto = $uploadWrap.attr(\"rxmauto\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmtitle\")) != \"undefined\") {\n                _title = $uploadWrap.attr(\"rxmtitle\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmextensions\")) != \"undefined\") {\n                _extensions = $uploadWrap.attr(\"rxmextensions\");\n            }\n            if (typeof ($uploadWrap.attr(\"rxmmimeTypes\")) != \"undefined\") {\n                _mimeTypes = $uploadWrap.attr(\"rxmmimeTypes\");\n            }\n        }\n        /**\n         * 根据config重置html\n         */\n        function setHtmlAttr() {\n            if (typeof (config.compress) != \"undefined\") {\n                $uploadWrap.attr(\"rxmcompress\", config.compress);\n            }\n            if (typeof (config.chunked) != \"undefined\") {\n                $uploadWrap.attr(\"rxmchunked\", config.chunked);\n            }\n            if (typeof (config.chunkSize) != \"undefined\") {\n                $uploadWrap.attr(\"rxmchunkSize\", config.chunkSize);\n            }\n            if (typeof (config.chunkRetry) != \"undefined\") {\n                $uploadWrap.attr(\"rxmchunkRetry\", config.chunkRetry);\n            }\n            if (typeof (config.fileNumLimit) != \"undefined\") {\n                $uploadWrap.attr(\"rxmfileNumLimit\", config.fileNumLimit);\n            }\n            if (typeof (config.fileSingleSizeLimit) != \"undefined\") {\n                $uploadWrap.attr(\"rxmfileSingleSizeLimit\", config.fileSingleSizeLimit);\n            }\n            if (typeof (config.auto) != \"undefined\") {\n                $uploadWrap.attr(\"rxmauto\", config.auto);\n            }\n        }\n        RxmFileUploader.prototype.addFile = function (fileOrFiles, who, ipos) {\n            ///<param name=\"fileOrFiles\" type=\"clsFileInfo\"></param>\n            if (who === 'filedlg') {\n                this.dataArr.addData(fileOrFiles, who, ipos);\n            }\n            else {\n                this.dataArr.addData(fileOrFiles, who, ipos);\n            }\n        };\n        RxmFileUploader.prototype.addOrmFile = function (addOrmFile) {\n            this.uploader.addOrmFile(addOrmFile);\n        };\n        RxmFileUploader.prototype.getFileNum = function () {\n            return this.dataArr.getData().length;\n        };\n        RxmFileUploader.prototype.delFile = function (fileOrFiles) {\n            if ($.isArray(fileOrFiles)) {\n            }\n            else {\n                if (fileOrFiles._uploaderFile) {\n                    this.uploader.removeFile(fileOrFiles._uploaderFile);\n                }\n                this.dataArr.removeData(fileOrFiles);\n            }\n        };\n        RxmFileUploader.prototype.getChangedFiles = function () {\n            return this.dataArr.getDataChanged();\n        };\n        RxmFileUploader.prototype.submitSuccess = function () {\n            this.dataArr.submitSuccess();\n        };\n        RxmFileUploader.prototype.option = function (key, opt) {\n            this.uploader.option(key, opt);\n        };\n        RxmFileUploader.prototype.OpenFileDlg = function (IdReplaced) {\n            if (!$.isExist(IdReplaced)) {\n                //不是通过appexplore 打开\n                this.modifiedObj = IdReplaced;\n            }\n            this.uploader._openFileDlg(IdReplaced);\n            //event.stopPropagation();\n            event.preventDefault();\n            return false;\n        };\n        //accept {Arroy} [可选] [默认值：null] 指定接受哪些类型的文件。 由于目前还有ext转mimeType表，所以这里需要分开指定。\n        //title {String} 文字描述\n        //extensions {String} 允许的文件后缀，不带点，多个用逗号分割。\n        //mimeTypes {String} 多个用逗号分割。\n        //如：\n        //{\n        //    title: 'Images',\n        //    extensions: 'gif,jpg,jpeg,bmp,png',\n        //    mimeTypes: 'image/*'\n        //}\n        RxmFileUploader.prototype.accept = function (fileExt) {\n            ///<summary>指定接受哪些类型的文件</summary>\n            ///<param name=\"fileExt\" type=\"clsBaiduAccept\"></param>\n            this.option({ accept: fileExt });\n            // this.uploader.options.accept = [fileExt];\n        };\n        RxmFileUploader.prototype.enableAdd = function () {\n            ///<summary>能不能继续添加文件</summary>\n            ///<return type=\"Boolean\"></return>\n            var num = this.getFileNum();\n            return num < this.uploader.options.fileNumLimit;\n        };\n        RxmFileUploader.prototype.enableModify = function () {\n            ///<summary>能不能修改文件</summary>\n            ///<return type=\"Boolean\"></return>\n            return this.getFileNum() > 0;\n        };\n        RxmFileUploader.prototype.enableDel = function () {\n            ///<summary>能不能删除文件</summary>\n            ///<return type=\"Boolean\"></return>\n            return this.getFileNum() > 0;\n        };\n        RxmFileUploader.prototype.makeThumb = function (file, func) {\n            ///<summary>产生文件缩略图，填充到image  src字段，</summary>\n            ///<param name=\"fileOrFileId\" type=\"Object\" >文件对象，或者文件id</param>\n            ///<param>产生文件缩略图参数，一般不用填写</param>\n            ///<return type=\"String\">返回 img  src 属性值</return>\n            var ths = this;\n            function MakeThumb(error, src) {\n                if (!error) {\n                    file.thumbnail = src;\n                }\n                func(error, src);\n                if (ths._auto)\n                    ths.uploader.upload(file);\n            }\n            ;\n            this.uploader.makeThumb(file, MakeThumb, this.uploader.options.thumb.width, this.uploader.options.thumb.height);\n        };\n        RxmFileUploader.prototype.beginUpload = function (fileOrFileId) {\n            ///<summary>调用baiduWebUpload  upload 函数开始上传，</summary>\n            ///<param name=\"fileOrFileId\" type=\"Object\" >文件对象，或者文件id,undefined为全部上传</param>\n            ///<return type=\"String\">返回 img  src 属性值</return>\n            this.uploader.upload(fileOrFileId);\n        };\n        RxmFileUploader.prototype.bindFileAdded = function (callbackFunc) {\n            ///<summary>添加文件回叫函数</sumary>\n            this.on(ClsFactory.enumEvt.added, callbackFunc, this);\n        };\n        RxmFileUploader.prototype.callbackFileAdded = RxmFileUploader.prototype.bindFileAdded;\n        RxmFileUploader.prototype.bindFileDeleted = function (callbackFunc) {\n            ///<summary>删除文件回叫函数</sumary>\n            this.on(ClsFactory.enumEvt.deleted, callbackFunc, this);\n        };\n        RxmFileUploader.prototype.callbackFileDeleted = RxmFileUploader.prototype.bindFileDeleted;\n        RxmFileUploader.prototype.bindFileModified = function (callbackFunc) {\n            ///<summary>修改文件回叫函数</sumary>\n            this.on(ClsFactory.enumEvt.modifed, callbackFunc, this);\n        };\n        RxmFileUploader.prototype.callbackFileModified = RxmFileUploader.prototype.bindFileModified;\n        RxmFileUploader.prototype.bindFileUpSuccess = function (callbackFunc) {\n            ///<summary>单文件上传成功回叫函数</sumary>\n            this.on(ClsFactory.enumEvt.uploadSuccess, callbackFunc, this);\n        };\n        RxmFileUploader.prototype.callbackFileUpSuccess = RxmFileUploader.prototype.bindFileUpSuccess;\n        RxmFileUploader.prototype.bindFileUpStart = function (callbackFunc) {\n            this.on(ClsFactory.enumEvt.uploadStart, callbackFunc, this);\n        };\n        RxmFileUploader.prototype.callbackFileUpStart = RxmFileUploader.prototype.bindFileUpStart;\n        RxmFileUploader.prototype.bindFileUpError = function (callbackFunc) {\n            ///<summary>单文件上传失败回叫函数</sumary>\n            this.on(ClsFactory.enumEvt.uploadError, this);\n        };\n        RxmFileUploader.prototype.callbackFileUpError = RxmFileUploader.prototype.bindFileUpError;\n        RxmFileUploader.prototype.bindFileUpAllCompleted = function (callbackFunc) {\n            ///<summary>文件全部上传成功回叫函数</sumary>\n            this.on(ClsFactory.enumEvt.uploadFinished, callbackFunc, this);\n        };\n        RxmFileUploader.prototype.callbackFileUpAllCompleted = RxmFileUploader.prototype.bindFileUpAllCompleted;\n        RxmFileUploader.prototype.bindFileUpProgress = function (callbackFunc) {\n            this.on(ClsFactory.enumEvt.uploadProgress, callbackFunc, this);\n        };\n        RxmFileUploader.prototype.callbackFileUpProgress = RxmFileUploader.prototype.bindFileUpProgress;\n        RxmFileUploader.prototype.on = function (msgType, callback, thisArg) {\n            this.dataArr.on(msgType, callback, thisArg);\n        };\n        RxmFileUploader.prototype.trigger = function (msgType, a1, a2, a3, a4, a5, a6) {\n            this.dataArr.trigger(msgType, a1, a2, a3, a4, a5, a6);\n        };\n        RxmFileUploader.prototype._onAfterFileAdd = function (file) {\n            if ($.isExist(arguments[1]))\n                file = arguments[1];\n            if (typeof this.modifiedObj === \"undefined\") {\n                this.addFile(new fileInfo(file), 'filedlg');\n            }\n            else {\n                //修改\n            }\n        };\n        //function(file){};\n        RxmFileUploader.prototype._onUploadStart = function (file) {\n            if ($.isExist(arguments[1]))\n                file = arguments[1];\n            //console.info(file,\"start\");\n            this.trigger(ClsFactory.enumEvt.uploadStart, file);\n        };\n        RxmFileUploader.prototype._onUploadProgress = function (file, percentage) {\n            ///<summary>上传过程中触发，携带上传进度。</summary>\n            ///<param name=\"file\" type=\"clsBaiduFile\">File对象</param>\n            ///<param name=\"percentage\" type=\"Number\"\">进度百分比</param>\n            if (percentage.file) {\n                file = percentage.file;\n                percentage = percentage.data;\n            }\n            var theFileSize = file.fileSize || file.size;\n            var size = this._fileSize();\n            if (typeof percentage == \"number\") {\n                percentage *= 1.0;\n                i = percentage;\n                size.already += theFileSize * percentage;\n                percentage *= 100;\n            }\n            else {\n                i = Number(percentage) * 1.0 / 100;\n                size.already += theFileSize * i;\n                if (size.already > size.total) {\n                    size.already = size.total;\n                }\n            }\n            //console.log(size.already + \"=====\" + size.total);\n            var thisFilePercent = \"\" + percentage;\n            var totalPercent = \"\" + (size.already * 1.0 / size.total) * 100;\n            // console.log(file.fileName, totalPercent, thisFilePercent);\n            this.trigger(ClsFactory.enumEvt.uploadProgress, file, totalPercent, thisFilePercent);\n        };\n        RxmFileUploader.prototype._fileSize = function () {\n            var total = 0;\n            var already = 0;\n            var d = this.dataArr.getData();\n            for (i = 0; i < d.length; i++) {\n                var it = d[i];\n                total += it.fileSize;\n                //console.log(it);\n                if (typeof (it._uploaderFile) === \"undefined\") {\n                    already += it.fileSize;\n                }\n                ;\n            }\n            // console.log(\"_fileSize\", total, already);\n            return {\n                total: total,\n                already: already\n            };\n        };\n        //function(file,reason){};\n        RxmFileUploader.prototype._onUploadError = function (file, reason) {\n            ///<summary>当文件上传出错时触发</summary>\n            ///<param name=\"file\" type=\"File\"\">File对象</param>\n            ///<param name=\")\" type=\"String\"\">出错的code</param>\n            if (reason.file) {\n                file = reason.file;\n                reason = reason.data;\n            }\n        };\n        //function(file,responseData){};\n        RxmFileUploader.prototype._onAfterUploadSuccess = function (file, responseData) {\n            ///<summary>当文件上传成功时触发</summary>\n            ///<param name=\"file\" type=\"File\">File对象</param>\n            ///<param name=\"responseData\" type=\"Object\"\">服务端返回的数据</param>\n            var fileId = \"\";\n            if (responseData.file) {\n                file = responseData.file;\n                responseData = responseData.data;\n                fileId = file.id;\n            }\n            else {\n                fileId = file.uuid;\n            }\n            $.each(this.dataArr.getData(), function (index, it) {\n                ///<param  name=\"it\"  type=\"RxmFileUploaderFileInfo\"></param>\n                if (it.id == fileId) {\n                    it._uploaderFile = undefined;\n                    file = it;\n                    return false;\n                }\n            });\n            this.trigger(ClsFactory.enumEvt.uploadSuccess, file, responseData);\n            //console.info(file);\n        };\n        RxmFileUploader.prototype._onUploadFinished = function () {\n            ///<summary>当所有文件上传结束时触发。</summary>\n            //this.setState('confirm');\n            //this._setSubmitBtnEnable(true);\n            this.trigger(ClsFactory.enumEvt.uploadFinished, this.dataArr);\n        };\n        //function(type){};\n        RxmFileUploader.prototype._onError = function (type) {\n            ///<summary>当validate不通过时，会以派送错误事件的形式通知调用者。通过upload.on('error', handler)可以捕获到此类错误，目前有以下错误会在特定的情况下派送错来。<br/>Q_EXCEED_NUM_LIMIT 在设置了fileNumLimit且尝试给uploader添加的文件数量超出这个值时派送。<br/>Q_EXCEED_SIZE_LIMIT 在设置了Q_EXCEED_SIZE_LIMIT且尝试给uploader添加的文件总大小超出这个值时派送。<br/>Q_TYPE_DENIED 当文件类型不满足时触发<br/>});</summary>\n            ///<param name=\"type\" type=\"String\"\">错误类型</param>     \n            var error;\n            switch (type) {\n                case \"Q_EXCEED_NUM_LIMIT\":\n                    {\n                        error = \"文件数量不能超过\" + this.uploader.options.fileNumLimit + \"个\";\n                    }\n                    ;\n                    break;\n                case \"F_EXCEED_SIZE\":\n                    {\n                        error = \"文件大小不能超过\" + this.uploader.options.fileSingleSizeLimit;\n                    }\n                    ;\n                    break;\n                case \"Q_TYPE_DENIED\":\n                    {\n                        error = \"文件种类错误\";\n                    }\n                    ;\n                    break;\n                case \"F_DUPLICATE\":\n                    {\n                        error = \"不可选择相同的照片\";\n                    }\n                    ;\n                    break;\n                default: {\n                    error = type;\n                }\n            }\n            alert(error);\n        };\n        RxmFileUploader.prototype._onFileDequeued = function (file) {\n            ///<summary>移除文件</summary>\n            ///<param name=\"file\"  type=\"File\"> 文件</param>\n            this.trigger(ClsFactory.enumEvt.fileChanged);\n        };\n        RxmFileUploader.prototype._onbeforeFileQueued = function (file) {\n            if (!this.enableAdd()) {\n                var s = \"上传文件数量不能超过\" + this.getFileNum() + \"个\";\n                util.alert(s);\n                return false;\n            }\n            return true;\n        };\n        return new RxmFileUploader(config);\n    };\n    ClsFactory.enumEvt = $.extend({}, dataArr.enumEvt, {\n        //数据被转变事件\n        //function({data:file,reasion:string})\n        changed: \"changed\",\n        //function({file:fileinfo,fileprogress:number,total:number}\n        //文件上传进度\n        uploadProgress: \"uploadProgress\",\n        uploadStart: \"uploadStart\",\n        uploadSuccess: \"uploadSuccess\",\n        uploadFinished: \"uploadFinished\"\n    }, appUploader.enumEvt);\n    //读取文件的缩略图\n    ClsFactory.urlThumb = function (fileId, width, height) {\n        var path = getServer() + '/resoft/x/file/thumb?fileId=' + fileId;\n        return path;\n    };\n    ClsFactory.urlOpen = function (fileId) {\n        ///<summary>打开文件，在浏览器中显示</summary>\n        ///<param  name=\"fileId\"  type=\"String\">打开文件ID</param>\n        var path = getServer() + '/resoft/x/file/open?fileId=' + fileId;\n        return path;\n    };\n    ClsFactory.urlDown = function (fileId) {\n        ///<summary> //下载文件，通过文件保存对话框选择路径，文件名称进行保存 </summary>\n        var path = getServer() + '/resoft/x/file/down?fileId=' + fileId;\n        return path;\n    };\n    ClsFactory.urlDownApk = function (fileId) {\n        var path = getServer() + '/resoft/x/file/downApk?fileId=' + fileId;\n        return path;\n    };\n    ClsFactory.urlDownH5 = function (fileId) {\n        var path = getServer() + '/resoft/x/file/downH5?filePath=' + fileId;\n        return path;\n    };\n    ClsFactory.urlUpload = function (fileId) {\n        var path = getServer() + \"/resoft/x/file/add\";\n        return path;\n    };\n    return ClsFactory;\n});\n","define(\"RxmDbConnect\", ['RxmAppTool'], function (appTool) {\n    if (typeof rxm_sqlite == 'undefined') {\n        return;\n    }\n    function clsDbConnect(name) {\n        this.dbName = name;\n    }\n    clsDbConnect.prototype.runSql = function (sql, callback) {\n        ///<summary>Sql语句的执行,对数据库数据的增删改。</summary>\n        ///<param  name=\"sql\"  type=\"String\">必选 要执行的sql语句</param>\n        var id = appTool.unid() + \"\";\n        //        cssOrm.on({\n        //            callback: callback,\n        //            data: sql,\n        //            id: id,\n        //            msgType: cssOrm.evt.enumAppMsg.executeSql,\n        //            one: true\n        //        });\n        rxm_sqlite.runSqlBlock = callback;\n        rxm_sqlite.runSql(this.dbName, id, sql);\n    };\n    clsDbConnect.prototype.runTransactionSql = function (sql, callback) {\n        ///<summary>事务Sql语句的执行,对数据库数据的增删改。</summary>\n        ///<param  name=\"sql\"  type=\"String\">必选 JSON，要执行的sql语句JSON数组</param>\n        var id = appTool.unid() + \"\";\n        //        cssOrm.on({\n        //            callback: callback,\n        //            data: sql,\n        //            id: id,\n        //            msgType: cssOrm.evt.enumAppMsg.executeTransactionSql,\n        //            one: true\n        //        });\n        rxm_sqlite.runTransactionSqlBlock = callback;\n        rxm_sqlite.runTransactionSql(this.dbName, id, sql);\n    };\n    clsDbConnect.prototype.runSelect = function (sql, callback) {\n        ///<summary>数据查询</summary>\n        ///<param  name=\"sql\"  type=\"String\">可选 要执行的sql语句</param>\n        var id = appTool.unid() + \"\";\n        //        cssOrm.on({\n        //            callback: callback,\n        //            data: sql,\n        //            id: id,\n        //            msgType: cssOrm.evt.enumAppMsg.selectSql,\n        //            one: true\n        //        });\n        rxm_sqlite.runSelectBlock = callback;\n        rxm_sqlite.runSelect(this.dbName, id, sql);\n    };\n    clsDbConnect.prototype.disconnect = function (dbName, callback) {\n        ///<summary>关闭数据库</summary>\n        cssOrm.on({\n            callback: callback,\n            id: \"\",\n            msgType: 'closeDataBase',\n            one: true\n        });\n        rxm_sqlite.disconnect(this.dbName);\n    };\n    return clsDbConnect;\n});\n","define(\"RxmOrmFileUploader\", [], function () {\n    if (typeof rxm_uploader == 'undefined') {\n        return;\n    }\n    if (cssOrm.cls.clsOrmFileUploader) {\n        return cssOrm.cls.clsOrmFileUploader;\n    }\n    ;\n    var cls = function (arg) {\n        ///<summary>单文件文件上传</summary>\n        ///<param  name=\"arg\"  value=\"cssArgs.clsOrmFileUploader.constructorArg\">上传参数</param>\n        ///<field  name=\"option\"  value=\"cssArgs.clsOrmFileUploader.constructorArg\"></field>\n        // cssOrm.default.clsAppUploader.appUploader.serverURL=require('RxmAppTool').getUpdateUrl()+cssOrm.default.clsAppUploader.appUploader.serverURL\n        this.option = $.extend({}, cssOrm.default.clsAppUploader.appUploader, arg);\n        this.option.serverURL = require('RxmAppTool').getUpdateUrl() + cssOrm.default.clsAppUploader.appUploader.serverURL;\n        if ((!this.option.realName) || (this.option.realName.length < 1)) {\n            this.option.realName = this.option.filePath.substr(this.option.filePath.lastIndexOf(\"/\"));\n        }\n    };\n    cls.prototype.upload = function (arg) {\n        this.option.formData.realName = this.option.realName;\n        rxm_uploader.upload(this.option.id, this.option.filePath, this.option.serverURL, this.option.startOffset, this.option.Length, this.option.chunked, this.option.chunkSize, this.option.chunkRetry, JSON.stringify(this.option.fomedata), this.option.threads);\n    };\n    cls.prototype.close = function () {\n        rxm_uploader.close(this.id);\n    };\n    cls.prototype.onStart = function (callback) {\n        cssOrm.on({ id: this.option.id, msgType: cls.msg.start, callback: callback, one: true, data: this });\n    };\n    cls.prototype.onStop = function (callback) {\n        //        console.log(this.option.id);\n        cssOrm.on({ msgType: cls.msg.stop, id: this.option.id, callback: callback, data: this });\n        //应该移除他，根据错误的次数\n    };\n    cls.prototype.onProgress = function (callback) {\n        cssOrm.on({ msgType: cls.msg.progress, id: this.option.id, callback: callback, data: this });\n    };\n    cls.msg = {\n        start: \"startOrmFileUploader\",\n        stop: \"endOrmFileUploader\",\n        progress: \"progressOrmFileUploader\"\n    };\n    rxm_uploader.uploadStatusBlock = function (id, status, responseData) {\n        // if(status==)\n        //        console.info(\"cbUploadStatus\", status + \":\" + this.toString())\n        if (status == \"0\") {\n            cssOrm.trigger(cls.msg.start, id, responseData);\n            return;\n        }\n        var ret = {\n            success: true\n        };\n        if (status === \"2\") {\n            //失败\n            ret.success = false;\n            var r;\n            try {\n                r = JSON.parse(responseData);\n            }\n            catch (e) {\n                r = {\n                    success: false,\n                    msg: responseData\n                };\n            }\n            if ($.isExist(r.model)) {\n                ret.result = r.model;\n            }\n            else {\n                ret.result = r;\n            }\n        }\n        else if (status == \"1\") {\n            //成功\n            ret.result = JSON.parse(responseData).model;\n        }\n        if (ret.result) {\n            // console.info('cssOrm.trigger(cls.msg.end, id, ret);',id)\n            cssOrm.trigger(cls.msg.progress, id, \"100\");\n            cssOrm.trigger(cls.msg.stop, id, ret);\n        }\n    };\n    rxm_uploader.uploadProgressBlock = function (id, progress) {\n        //        console.info(\"cbUploadProgress\",id +\":\"+ progress);\n        //cssOrm.trigger(cls.msg.progress, id, progress);\n        if (progress != 100) {\n            cssOrm.trigger(cls.msg.progress, id, progress);\n        }\n    };\n    return cls;\n});\n","define('RxmOrmPhone', [], function () {\n    var cls = function () { };\n    cls.prototype.sms = function (phoneNum, content) {\n        if (typeof cipSMS != \"undefined\") {\n            // 调用cip\n            cipSMS.open(phoneNum, content);\n        }\n        else {\n            window.location = \"sms:\" + phoneNum + \"&body=\" + content;\n        }\n    };\n    /**\n    * 打电话\n    */\n    cls.prototype.Call = function (number) {\n        if (typeof cipCall != \"undefined\") {\n            // 调用cip\n            cipCall.dial(number);\n        }\n        else {\n            window.location = \"tel:\" + number;\n        }\n    };\n    return new cls();\n});\n","define(\"RxmActionSheetBase\", [], function () {\n    if (typeof rxm_actionSheet == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsActionSheetBase === \"undefined\") {\n        function clsActionSheetBase() {\n            ///<summary> 二维码插件</summary>\n        }\n        clsActionSheetBase.prototype.openListSheet = function (opId, json, title) {\n            rxm_actionSheet.openListSheet(opId, json, title);\n        };\n        clsActionSheetBase.prototype.openGridSheet = function (opId, json, title) {\n            if (!title) {\n                title = \"\";\n            }\n            rxm_actionSheet.openGridSheet(opId, json, title);\n        };\n        clsActionSheetBase._cbOpenListSheet = function (opId, index) {\n            cssOrm.trigger(\"openListSheet\", opId, index);\n        };\n        clsActionSheetBase._cbOpenGridSheet = function (opId, index) {\n            cssOrm.trigger(\"openGridSheet\", opId, index);\n        };\n        rxm_actionSheet.openListSheetBlock = clsActionSheetBase._cbOpenListSheet;\n        rxm_actionSheet.openGridSheetBlock = clsActionSheetBase._cbOpenGridSheet;\n        cssOrm.declare(\"clsActionSheetBase\", clsActionSheetBase, true);\n    }\n    return cssOrm.obj.clsActionSheetBase();\n});\n","define(\"RxmAudioBase\", [], function () {\n    if (typeof rxm_audio == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsAudioBase === \"undefined\") {\n        function clsAudioBase() {\n            ///<summary> 本地音频播放调用</summary>\n        }\n        clsAudioBase.prototype.openPlayer = function (paths, index) {\n            ///<summary> 打开音频播放器</summary>\n            var indexs = \"0\";\n            if (index) {\n                indexs = index;\n            }\n            if (paths.paths) {\n                rxm_audio.openPlayer(paths.paths, indexs);\n            }\n            else {\n                rxm_audio.openPlayer(paths, indexs);\n            }\n        };\n        clsAudioBase.prototype.open = function (path, repeats) {\n            ///<summary> hout 音频播放器</summary>\n            rxm_audio.open(path);\n            if (repeats) {\n                rxm_audio.play(repeats);\n            }\n            else {\n                rxm_audio.play(0);\n            }\n        };\n        clsAudioBase.prototype.closePlayer = function () {\n            ///<summary> 关闭音频播放器,此操作会触发onPlayerClosed 播放器被关闭时的监听方法</summary>\n            rxm_audio.closePlayer();\n        };\n        clsAudioBase.prototype.record = function (params) {\n            ///<summary>打开音频录制界面 回调 onRecordFinish</summary>\n            ///<param  name=\"params\"  type=\"Object\">必选 JSON字符串</param>\n            //            rxm_audio.record(JSON.stringify(params));\n            var homeArgs = require(\"RxmAppTool\");\n            var mode = homeArgs.getSettingData().voice.mode;\n            var fileName = \"\";\n            if (params.param) {\n                if (params.param.mode) {\n                    mode = params.param.mode;\n                }\n                if (params.param.fileName) {\n                    fileName = params.param.fileName;\n                }\n            }\n            else {\n                if (params.mode) {\n                    mode = params.mode;\n                }\n                if (params.fileName) {\n                    fileName = params.fileName;\n                }\n            }\n            rxm_audio.record(mode, fileName);\n        };\n        clsAudioBase.prototype.startBackgroundRecord = function (params) {\n            var homeArgs = require(\"RxmAppTool\");\n            var mode = homeArgs.getSettingData().voice.mode;\n            var fileName = \"\";\n            if (params.param) {\n                if (params.param.mode) {\n                    mode = params.param.mode;\n                }\n                if (params.param.fileName) {\n                    fileName = params.param.fileName;\n                }\n            }\n            else {\n                if (params.mode) {\n                    mode = params.mode;\n                }\n                if (params.fileName) {\n                    fileName = params.fileName;\n                }\n            }\n            console.log(mode);\n            console.log(fileName);\n            rxm_audio.startBackgroundRecord(mode, fileName);\n        };\n        clsAudioBase.prototype.stopBackgroundRecord = function () {\n            rxm_audio.stopBackgroundRecord();\n        };\n        clsAudioBase.prototype.pause = function () {\n            rxm_audio.pause();\n        };\n        clsAudioBase.prototype.replay = function () {\n            rxm_audio.replay();\n        };\n        clsAudioBase.prototype.stop = function () {\n            rxm_audio.stop();\n        };\n        clsAudioBase._onCbRecord = function (opId, data) {\n            //var a = {\n            //\t\topId: opId,\n            //\t\tdata: data\n            //    }\n            //var a = data;\n            cssOrm.trigger(\"audioCbRecord\", \"\", data);\n        };\n        clsAudioBase._onCbBackgroundRecord = function (opId, data) {\n            //var a = {\n            //\t\topId: opId,\n            //\t\tdata: data\n            //    }\n            //var a = data;\n            console.log(opId);\n            console.log(data);\n            cssOrm.trigger(\"audioStartBackgroundRecord\", \"\", data);\n        };\n        clsAudioBase._onPlayFinished = function (data) {\n            cssOrm.trigger(\"audioOpenBackground\", \"\", data);\n        };\n        rxm_audio.recordBlock = clsAudioBase._onCbRecord;\n        rxm_audio.backgroundRecordBlock = clsAudioBase._onCbBackgroundRecord;\n        rxm_audio.onPlayFinished = clsAudioBase._onPlayFinished;\n        cssOrm.declare(\"clsAudioBase\", clsAudioBase, true);\n    }\n    return cssOrm.obj.clsAudioBase();\n});\n","define(\"RxmCameraBase\", [], function () {\n    if (typeof rxm_camera == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsCameraBase === \"undefined\") {\n        function clsCameraBase() {\n            ///<summary> 对</summary>\n        }\n        clsCameraBase.prototype.openCamera = function (param) {\n            ///<summary> 通过此方法调用系统相机,进入拍照界面。</summary>\n            ///<param  name=\"comtextareass\"  type=\"Number\">可选 图片是否压缩,1表示压缩,0或者不传表示不压缩。</param>\n            ///<param  name=\"quality\"  type=\"Number\">可选 图片压缩质量,comtextareass为1时有效,取值范围[0,100]。</param>\n            ///<param  name=\"value\"  type=\"String\">可选 {\"width\":\"100\",\"height\":\"50\"}.</param>\n            if (param) {\n                if (param.param) {\n                    param = param.param;\n                }\n                var value = {\n                    width: param.width,\n                    height: param.height\n                };\n                rxm_camera.openCamera(param.comtextareass, param.quality, value);\n            }\n            else {\n                rxm_camera.openCamera();\n            }\n        };\n        clsCameraBase._oncameraOpenBlock = function (data) {\n            // var a = {\n            //     data:data\n            // }\n            cssOrm.trigger(\"cameraOpen\", \"\", data);\n        };\n        rxm_camera.cameraOpenBlock = clsCameraBase._oncameraOpenBlock;\n        cssOrm.declare(\"clsCameraBase\", clsCameraBase, true);\n    }\n    return cssOrm.obj.clsCameraBase();\n});\n","define(\"RxmClipBase\", [], function () {\n    if (typeof rxm_clip == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsClipBase === \"undefined\") {\n        function clsClipBase() {\n            ///<summary> 系统剪贴板插件</summary>\n        }\n        clsClipBase.prototype.copyToClip = function (text) {\n            ///<summary> 复制内容到剪切板</summary>\n            ///<param  name=\"text\"  type=\"String\">必选 内容</param>\n            rxm_clip.copyToClip(text);\n        };\n        clsClipBase.prototype.copyFromClip = function () {\n            ///<summary> 获取剪切板的内容 回调方法copyFromClipBlock</summary>\n            rxm_clip.copyFromClip();\n        };\n        clsClipBase._oncopyFromClipBlock = function (data) {\n            //  data = JSON.parse(data);\n            cssOrm.trigger(\"clipGet\", data);\n        };\n        rxm_clip.copyFromClipBlock = clsClipBase._oncopyFromClipBlock;\n        cssOrm.declare(\"clsClipBase\", clsClipBase, true);\n    }\n    return cssOrm.obj.clsClipBase();\n});\n","define(\"RxmContactBase\", [], function () {\n    if (typeof rxm_contact == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsContactBase === \"undefined\") {\n        function clsContactBase() {\n            ///<summary> 对</summary>\n        }\n        clsContactBase.prototype.openContact = function () {\n            ///<summary> 打开联系人应用,将选中的联系人的姓名,电话,邮件通过cbOpen回调,每次只能选择一个联系人。回调方法cbOpen</summary>\n            rxm_contact.openContact();\n        };\n        clsContactBase.prototype.multiOpenContact = function () {\n            ///<summary> 打开联系人选择界面,该界面中的数据是当前设备上所有联系人的信息,支持多选。回调方法cbMultiOpen</summary>\n            rxm_contact.multiOpenContact();\n        };\n        clsContactBase.prototype.addContact = function (name, num, email, option) {\n            ///<summary>添加联系人</summary>\n            ///<param  name=\"name\"  type=\"String\">必选 名称</param>\n            ///<param  name=\"num\"  type=\"String\">必选电话号码</param>\n            ///<param  name=\"email\"  type=\"String\">必选邮件</param>\n            ///<param  name=\"option\"  type=\"Number\">可选\t添加过程中是否隐藏弹出”确认添加”</param>\n            rxm_contact.addContact(name, num, email, option);\n        };\n        clsContactBase.prototype.deleteContact = function (name) {\n            ///<summary>删除联系人 回调方法cbDeleteItem</summary>\n            ///<param  name=\"name\"  type=\"String\">必选 名称</param>\n            rxm_contact.deleteContact(name);\n        };\n        clsContactBase.prototype.searchContact = function (nameKey, option) {\n            ///<summary>查询联系人 回调方法cbSearchItem</summary>\n            ///<param  name=\"name\"  type=\"String\">必选 名称,传空字符串时,查询通讯录中所有联系人</param>\n            ///<param  name=\"option\"  type=\"Number\">可选 一次最多返回的结果条数,默认为50条,-1表示一次返回所有结果</param>\n            rxm_contact.searchContact(nameKey, option);\n        };\n        clsContactBase.prototype.modifyContact = function (name, num, email) {\n            ///<summary>修改联系人 回调方法cbModifyItem</summary>\n            ///<param  name=\"name\"  type=\"String\">必选 名称</param>\n            ///<param  name=\"num\"  type=\"String\">必选电话号码</param>\n            ///<param  name=\"email\"  type=\"String\">必选邮件</param>\n            rxm_contact.modifyContact(name, num, email);\n        };\n        clsContactBase._onopenContactBlock = function (data) {\n            data = JSON.parse(data);\n            var a = [];\n            a.push(data);\n            ///<summary>openContactBlock-open回调方法</summary>\n            cssOrm.trigger(\"contactGet\", a);\n        };\n        clsContactBase._onmultiOpenContactBlock = function (data) {\n            data = JSON.parse(data);\n            var a = [];\n            a.push(data);\n            cssOrm.trigger(\"contactGet\", a);\n        };\n        clsContactBase._onaddContactBlock = function (data) {\n            data = JSON.parse(data);\n            cssOrm.trigger(\"contactAdd\", data);\n        };\n        clsContactBase._ondeleteContactBlock = function (data) {\n            data = JSON.parse(data);\n            cssOrm.trigger(\"contactDel\", data);\n        };\n        clsContactBase._onsearchContactBlock = function (data) {\n            data = JSON.parse(data);\n            cssOrm.trigger(\"contactSearch\", data);\n        };\n        clsContactBase._onmodifyContactBlock = function (data) {\n            data = JSON.parse(data);\n            cssOrm.trigger(\"contactModify\", data);\n        };\n        rxm_contact.openContactBlock = clsContactBase._onopenContactBlock;\n        rxm_contact.multiOpenContactBlock = clsContactBase._onmultiOpenContactBlock;\n        rxm_contact.addContactBlock = clsContactBase._onaddContactBlock;\n        rxm_contact.deleteContactBlock = clsContactBase._ondeleteContactBlock;\n        rxm_contact.searchContactBlock = clsContactBase._onsearchContactBlock;\n        rxm_contact.modifyContactBlock = clsContactBase._onmodifyContactBlock;\n        cssOrm.declare(\"clsContactBase\", clsContactBase, true);\n    }\n    return cssOrm.obj.clsContactBase();\n});\n","define(\"RxmControlBase\", [], function () {\n    if (typeof rxm_control == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsControlBase === \"undefined\") {\n        function clsControlBase() {\n            ///<summary> 日期选择器插件</summary>\n        }\n        clsControlBase.prototype.openDatePicker = function (optId, withDay, year, month, day, startyear, endyear) {\n            ///<summary> 打开日期选择器</summary>\n            if (withDay == undefined) {\n                withDay = cssOrm.default.openDatePicker.withDay;\n            }\n            if (year == undefined) {\n                year = cssOrm.default.openDatePicker.year;\n            }\n            if (month == undefined) {\n                month = cssOrm.default.openDatePicker.month;\n            }\n            if (day == undefined) {\n                day = cssOrm.default.openDatePicker.day;\n            }\n            if (startyear == undefined) {\n                startyear = cssOrm.default.openDatePicker.startyear;\n            }\n            if (endyear == undefined) {\n                endyear = cssOrm.default.openDatePicker.endyear;\n            }\n            rxm_control.openDatePicker(optId, withDay, year, month, day, startyear, endyear);\n        };\n        clsControlBase.prototype.openTimePicker = function (optId, hour, minute) {\n            ///<summary> 打开时间选择器</summary>\n            if (!hour) {\n                hour = \"\";\n            }\n            if (!minute) {\n                minute = \"\";\n            }\n            rxm_control.openTimePicker(optId, hour, minute);\n        };\n        clsControlBase.prototype.openTimeAndSecondPicker = function (optId, hour, minute, second) {\n            ///<summary> 打开时间选择器(包含秒)</summary>\n            if (!hour) {\n                hour = \"\";\n            }\n            if (!minute) {\n                minute = \"\";\n            }\n            if (!second) {\n                second = \"\";\n            }\n            rxm_control.openTimeAndSecondPicker(optId, hour, minute, second);\n        };\n        clsControlBase.prototype.openDateAndTimePicker = function (optId, year, month, day, hour, min) {\n            ///<summary> 打开年月日时分选择器</summary>\n            if (!year) {\n                year = \"\";\n            }\n            if (!month) {\n                month = \"\";\n            }\n            if (!day) {\n                day = \"\";\n            }\n            if (!hour) {\n                hour = \"\";\n            }\n            if (!min) {\n                min = \"\";\n            }\n            rxm_control.openDateAndTimePicker(optId, year, month, day, hour, min);\n        };\n        clsControlBase.prototype.openInputDialog = function (optid, type, inputHint, btnText, dialogbg, dialogInputBg, dialogBtnBg) {\n            ///<summary> 打开输入对话框</summary>\n            if (!type) {\n                type = 0;\n            }\n            if (!inputHint) {\n                inputHint = \"\";\n            }\n            if (!btnText) {\n                btnText = \"\";\n            }\n            if (!dialogbg) {\n                dialogbg = \"\";\n            }\n            if (!dialogInputBg) {\n                dialogInputBg = \"\";\n            }\n            if (!dialogBtnBg) {\n                dialogBtnBg = \"\";\n            }\n            rxm_control.openInputDialog(optid, type, inputHint, btnText, dialogbg, dialogInputBg, dialogBtnBg);\n        };\n        clsControlBase._cbOpenDatePicker = function (opId, year, month, day) {\n            var data = {\n                year: year,\n                month: (parseInt(month) + 1) + \"\",\n                day: day\n            };\n            cssOrm.trigger(\"openDatePicker\", opId, data);\n        };\n        clsControlBase._cbOpenTimePicker = function (opId, hour, minute) {\n            var data = {\n                hour: hour,\n                minute: minute\n            };\n            cssOrm.trigger(\"openTimePicker\", opId, data);\n        };\n        clsControlBase._cbOpenDateAndTimePicker = function (opId, year, month, day, hour, min) {\n            var data = {\n                year: year,\n                month: (parseInt(month) + 1) + \"\",\n                day: day,\n                hour: hour,\n                min: min\n            };\n            cssOrm.trigger(\"openDateAndTimePicker\", opId, data);\n        };\n        clsControlBase._cbOpenTimeAndSecondPicker = function (opId, hour, minute, second) {\n            var data = {\n                hour: hour,\n                minute: minute,\n                second: second\n            };\n            cssOrm.trigger(\"openTimeAndSecondPicker\", opId, data);\n        };\n        clsControlBase._cbOpenInputDialog = function (opId, data) {\n            cssOrm.trigger(\"openInputDialog\", opId, data);\n        };\n        rxm_control.openDatePickerBlock = clsControlBase._cbOpenDatePicker;\n        rxm_control.openTimePickerBlock = clsControlBase._cbOpenTimePicker;\n        rxm_control.openDateAndTimePickerBlock = clsControlBase._cbOpenDateAndTimePicker;\n        rxm_control.openTimeAndSecondPickerBlock = clsControlBase._cbOpenTimeAndSecondPicker;\n        rxm_control.openInputDialogBlock = clsControlBase._cbOpenInputDialog;\n        cssOrm.declare(\"clsControlBase\", clsControlBase, true);\n    }\n    return cssOrm.obj.clsControlBase();\n});\n","define(\"RxmCipDialogBase\", [], function () {\n    if (typeof rxm_dialog == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsCipDialogBaseBase === \"undefined\") {\n        function clsCipDialogBase() {\n            ///<summary>弹出框</summary>\n        }\n        clsCipDialogBase.prototype.alert = function (message) {\n            ///<summary> 显示带有一段消息和一个确认按钮的警告框</summary>\n            ///<param  name=\"message\"  type=\"String\">必选 要在 window 上弹出的对话框中显示的纯文本（而非 HTML 文本）</param>\n            rxm_dialog.alert(message);\n        };\n        clsCipDialogBase.prototype.confirm = function (message) {\n            ///<summary> 显示带有一段消息以及确认按钮和取消按钮的对话框。回调方法cbConfirm</summary>\n            ///<param  name=\"message\"  type=\"String\">必选 要在 window 上弹出的对话框中显示的纯文本（而非 HTML 文本）</param>\n            rxm_dialog.confirm(message);\n        };\n        clsCipDialogBase.prototype.prompt = function (message, text, placeholder, title, btnok, btncancel) {\n            ///<summary>显示可提示用户输入的对话框。 回调方法cbPrompt</summary>\n            ///<param  name=\"text\"  type=\"String\">可选 要在对话框中显示的纯文本（而不是 HTML 格式的文本）。</param>\n            ///<param  name=\"defaultText\"  type=\"String\">可选 默认的输入文本</param>\n            rxm_dialog.prompt(message, text, placeholder, title, btnok, btncancel);\n        };\n        clsCipDialogBase._oncbConfirm = function (data) {\n            var a = {\n                data: data\n            };\n            cssOrm.trigger(\"dialogConfirm\", a);\n        };\n        clsCipDialogBase._oncbPrompt = function (data) {\n            var a = {\n                data: data\n            };\n            cssOrm.trigger(\"dialogPrompt\", a);\n        };\n        rxm_dialog.confirmBlock = clsCipDialogBase._oncbConfirm;\n        rxm_dialog.promptBlock = clsCipDialogBase._oncbPrompt;\n        cssOrm.declare(\"clsCipDialogBase\", clsCipDialogBase, true);\n    }\n    return cssOrm.obj.clsCipDialogBase();\n});\n","define(\"RxmFileMgr\", [], function () {\n    if (typeof rxm_file == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsFileMgr != \"undefined\") {\n        return cssOrm.obj.clsFileMgr();\n    }\n    ;\n    function clsFileMgr() {\n        ///<summary>文件管理</summary>\n    }\n    ;\n    clsFileMgr.prototype.createFile = function (id, arg) {\n    };\n    clsFileMgr.prototype.createDir = function (id, dirPath) {\n    };\n    clsFileMgr.prototype.openFile = function (id, path, mode) {\n        ///<summary>打开文件</summary>\n        ///<param  name=\"id\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"path\" type=\"String\">路径</param>\n        ///<param  name=\"mode\" type=\"String\">打开模式</param>\n        var p = path;\n        if (p.indexOf(\"://\") == -1) {\n            if (p.indexOf(\"www/\" === 0)) {\n                path = \"citp://\" + p;\n            }\n        }\n        rxm_file.open(id, path, mode);\n    };\n    //clsFileMgr.prototype.deleteFileByPath = function (path) { }\n    clsFileMgr.prototype.deleteFileByID = function (id) { };\n    // clsFileMgr.prototype.isFileExistByPath = function (id, path) { }\n    clsFileMgr.prototype.isFileExistByID = function (id) { };\n    //clsFileMgr.prototype.getFileTypeByPath = function (path) { }\n    clsFileMgr.prototype.getFileTypeByID = function (id) { };\n    clsFileMgr.prototype.seekFile = function (id, len) { };\n    clsFileMgr.prototype.seekBeginOfFile = function (id) { };\n    clsFileMgr.prototype.seekEndOfFile = function (id) { };\n    clsFileMgr.prototype.writeFile = function (id, mode, data) { };\n    clsFileMgr.prototype.readFile = function (id, len) {\n        ///<summary>读文件,回调方法cbReadFile</summary>\n        ///<param  name=\"id\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"len\" type=\"Number\">读取长度，-1 全文件</param>\n        rxm_file.read(id, len);\n    };\n    clsFileMgr.prototype.openFileDlg = function (path, ends) {\n        ///<summary>文件管理器,回调方法cbExplorer</summary>\n        ///<param  name=\"path\" type=\"String\">必选 文件路径 </param>\n        if (ends) {\n            if (ends == \"*\") {\n                rxm_file.openFileDlg(\"\");\n            }\n            else {\n                rxm_file.openFileDlg(\"\", ends);\n            }\n        }\n        else {\n            rxm_file.openFileDlg(path);\n        }\n    };\n    clsFileMgr.prototype.multiExplorer = function (path) { };\n    clsFileMgr.prototype.getFileSize = function (id) { };\n    clsFileMgr.prototype.curPath = function (id) {\n        rxm_file.curPath(id);\n    };\n    clsFileMgr.prototype.curRealPath = function (path) {\n        rxm_file.curRealPath(path);\n    };\n    clsFileMgr.prototype.closeFile = function (id) { };\n    clsFileMgr.prototype.getReaderOffset = function (id) { };\n    clsFileMgr.prototype.readPercent = function (id, percent, len) { };\n    clsFileMgr.prototype.readNext = function (id, len) { };\n    clsFileMgr.prototype.readPre = function (id, len) { };\n    clsFileMgr.prototype.openSecure = function (id, path, mode, key) { };\n    clsFileMgr.prototype.createSecure = function (id, path, key) { };\n    clsFileMgr.prototype.getFileLastModifiedTime = function (id, path) {\n        ///<summary>获取文件或文件夹的最后修改时间, 回调方法cbGetFileCreateTime</summary>\n        ///<param  name=\"id\" type=\"String\">必选 文件唯一标识符 </param>\n        ///<param  name=\"path\" type=\"String\">必选 文件路径 </param>\n        rxm_file.getFileLastModifiedTime(id, path);\n    };\n    clsFileMgr.prototype.renameFile = function (param) { };\n    clsFileMgr.prototype.search = function (param) { };\n    clsFileMgr.prototype.getFileListByPath = function (path) { };\n    clsFileMgr.prototype.getSizeByPath = function (id, path) {\n        ///<summary>通过路径获取文件或文件夹大小,回调方法cbGetFileSizeByPath</summary>\n        ///<param  name=\"id\" type=\"String\">必选 唯一标识符,与回调方法中id对应 </param>\n        ///<param  name=\"path\" type=\"String\">必选 文件路径 </param>\n        rxm_file.getSizeByPath(id, path);\n    };\n    clsFileMgr.prototype.copyFile = function (opID, srcFilePath, objPath) {\n    };\n    clsFileMgr.msg = {\n        createFile: \"createFile\",\n        createDir: \"createDir\",\n        openFile: \"openFile\",\n        fileExistByPath: \"fileExistByPath\",\n        readFile: \"readFile\",\n    };\n    clsFileMgr.openMode = {\n        //只读\n        readOnly: \"1\",\n        //只写\n        writeOnly: \"2\",\n        //读写\n        readWrite: \"3\",\n        //新建\n        createOnly: \"4\",\n        //新建读\n        readCreate: \"5\",\n        //新建写\n        writeCreate: \"6\"\n    };\n    clsFileMgr.oncbCreateFile = function (opId, data) {\n        ///<summary>创建文件的回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 </param>\n    };\n    clsFileMgr.oncbCreateDir = function (opId, data) {\n        ///<summary>创建文件夹的回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 </param>\n    };\n    clsFileMgr.onopenBlock = function (opId, data) {\n        ///<summary>打开文件的回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 </param>\n        $(document).trigger(clsFileMgr.msg.openFile + \"_\" + opId, data);\n    };\n    rxm_file.openBlock = clsFileMgr.onopenBlock;\n    clsFileMgr.oncbDeleteFileByID = function (opId, data) {\n        ///<summary>根据id删除文件的回调方法</summary>\n        //<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 </param>\n    };\n    clsFileMgr.oncbIsFileExistByID = function (opId, data) {\n        ///<summary>根据id判断文件是否存在的回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 0 文件不存在1，文件存在</param>\n    };\n    clsFileMgr.oncbGetFileTypeByID = function (opId, data) {\n        ///<summary> 根据路径获取文件类型的回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"Number\">返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据 0 文件，1文件夹</param>\n    };\n    clsFileMgr.oncbMultiExplorer = function (pathInJson) {\n        ///<summary> 文件管理器的回调方法</summary>\n        ///<param  name=\"path\" type=\"String\">返回文件管理器里选择的文件路径 json  {“2”:”/sdcard/DCIM/IMG_0003.JPG”,”1”:”/sdcard/DCIM/1337569458885.png”}</param>\n    };\n    clsFileMgr.oncbWriteFile = function (opId, data) {\n        ///<summary> 写文件的回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"Number\">1- 成功 0-失败</param>\n    };\n    clsFileMgr.onreadBlock = function (opId, data) {\n        ///<summary> 读文件的回调方法</summary>\n        ///<param  name=\"opId\" type=\"Number\">唯一标识符 </param>\n        ///<param  name=\"data\" type=\"String\">返回文件的内容</param>\n        $(document).trigger(clsFileMgr.msg.readFile + \"_\" + opId, data);\n    };\n    rxm_file.readBlock = clsFileMgr.onreadBlock;\n    cssOrm.declare(\"clsFileMgr\", clsFileMgr, true);\n    ///\n    function clsFileWriter() {\n    }\n    cssOrm.declare(\"clsFileWriter\", clsFileWriter, false);\n    return cssOrm.obj.clsFileMgr();\n});\n","define(\"RxmImageBase\", [], function () {\n    if (typeof rxm_image == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsImageBase === \"undefined\") {\n        function clsImageBase() {\n            ///<summary> 图片插件</summary>\n        }\n        clsImageBase.prototype.openImgPicker = function (param) {\n            ///<summary> 打开照片选择器</summary>\n            ///<param name=\"min\",type=\"Number\">可选 最小选择数量 ,传0表示无限制，默认值1</param>\n            ///<param name=\"max\",type=\"Number\">可选 最大选择数量 ,传0表示无限制，默认值0</param>\n            ///<param name=\"quality\",type=\"Number\">可选 PG压缩质量 取值范围 0-1 越大表示质量越好，默认值0.5</param>\n            ///<param name=\"usePng\",type=\"Number\">可选 用png格式导出图片 ,此参数为1时,quality参数无效，默认值0</param>\n            ///<param name=\"detailedInfo\",type=\"Number\">可选 此参数为1时,回调中会包含图片的额外信息，默认值0</param>\n            if (param.param) {\n                param = param.param;\n            }\n            rxm_image.openImgPicker(param.min, param.max, param.quality, param.usePng, param.detailedInfo);\n        };\n        clsImageBase.prototype.openImgBrowser = function (args) {\n            ///<summary> 打开一个可以浏览图片的浏览器</summary>\n            ///<param name=\"data\",type=\"Array\">必选 图片资源构成的数组 </param>\n            ///<param name=\"startIndex\",type=\"Number\">可选 非负整数 起始图片位置，默认值0</param>\n            ///<param name=\"displayActionButton\",type=\"Number\">可选 1:显示分享按钮 ,0 隐藏，默认值0</param>\n            ///<param name=\"enableGrid\",type=\"Number\">可选 1:允许九宫格视图 ,0 不允许，默认值1</param>\n            ///<param name=\"startOnGrid\",type=\"Number\">可选 1:以九宫格视图起始，默认值0</param>\n            ///<param name=\"displayNavArrows\",type=\"Number\">可选 显示切换箭头(仅iOS支持此参数)，默认值0</param>\n            if (!args.startIndex) {\n                args.startIndex = 0;\n            }\n            if (!args.displayActionButton) {\n                args.displayActionButton = 0;\n            }\n            if (!args.enableGrid) {\n                args.enableGrid = 1;\n            }\n            if (!args.startOnGrid) {\n                args.startOnGrid = 0;\n            }\n            if (!args.displayNavArrows) {\n                args.displayNavArrows = 0;\n            }\n            if (!args.supportCacheToAlbum) {\n                args.supportCacheToAlbum = 0;\n            }\n            rxm_image.openImgBrowser(args.data, args.startIndex, args.displayActionButton, args.enableGrid, args.startOnGrid, args.displayNavArrows, args.supportCacheToAlbum);\n            //rxm_image.openBrowser(data, startIndex, enableGrid, startOnGrid, displayNavArrows);\n        };\n        clsImageBase.prototype.openImgCropper = function (src, quality, usePng, mode) {\n            ///<summary>打开一个图片裁剪器,导出裁剪后的图片,并返回图片路径</summary>\n            ///<param name=\"src\",type=\"String\">可选 图片路径 支持wgt:// wgts:// file:// res://</param>\n            ///<param name=\"quality\",type=\"Number\">可选 JPG压缩质量 取值范围 0-1 越大表示质量越好，默认值0.5</param>\n            ///<param name=\"usePng\",type=\"Number\">可选 1:用png格式导出图片 ,此参数为1时,quality参数无效，默认值0</param>\n            ///<param name=\"mode\",type=\"Number\">可选 正方型裁剪 2- 圆形裁剪(仅iOS支持圆形裁剪)，默认值1</param>\n            rxm_image.openImgCropper(src, quality, usePng, mode);\n        };\n        clsImageBase.prototype.saveToPhotoAlbum = function (localPath, extraInfo) {\n            ///<summary>将本地图片储存到系统相册</summary>\n            ///<param name=\"localPath\",type=\"String\">必选 图片路径 支持res:// wgt:// wgts:// file://</param>\n            ///<param name=\"extraInfo\",type=\"String\">可选 任意字符串,设置后会随cbSaveToPhotoAlbum传出,extraInfo 可作唯一标识符用</param>\n            rxm_image.saveToPhotoAlbum(localPath, extraInfo);\n        };\n        clsImageBase.prototype.clearOutputImages = function () {\n            ///<summary>清除由本插件的openPicker、openCropper接口所生成的图片文件 若您的APP有多个widget,则只会清除由当前widget所生成的图片文件</summary>\n            rxm_image.clearOutputImages();\n        };\n        clsImageBase.prototype.setIpadPopEnable = function (flag) {\n            ///<summary>插件在iPad上默认用pop窗口展示插件页面,通过调用此接口,可以选择是否禁用pop窗口,改用全屏展示插件页面。</summary>\n            ///<param name=\"flag\",type=\"Number\">必选  为0时表示禁用pop窗口,非0时表示启用pop窗口</param>\n            rxm_image.setIpadPopEnable(flag);\n        };\n        clsImageBase.prototype.openVideoPicker = function (needBase64) {\n            ///<summary> 打开视频选择器</summary>\n            ///<param name=\"needBase64\",type=\"int\">1返回视频缩略图的 base64，0 不返回</param>\n            ///<param name=\"param\",type=\"Object\">可选 </param>\n            rxm_image.openVideoPicker(needBase64);\n        };\n        clsImageBase._onCbSaveToPhotoAlbum = function (status, info, path) {\n            var a = {\n                status: status,\n                info: info,\n                path: path\n            };\n            cssOrm.trigger(\"imageSaveToPhotoAlbum\", a);\n        };\n        clsImageBase._onPickerClosed = function (status, data, detailedImageInfo, info) {\n            var a = {\n                status: status,\n                data: data,\n                detailedImageInfo: detailedImageInfo,\n                info: info\n            };\n            cssOrm.trigger(\"imagePickerClosed\", a);\n        };\n        clsImageBase._onCropperClosed = function (status, info) {\n            var a = {\n                status: status,\n                info: info\n            };\n            cssOrm.trigger(\"imageCropperClosed\", a);\n        };\n        clsImageBase._onVideoPickerClosed = function (videoPath, thumbnail, thumbnailBase64) {\n            var a = {\n                videoPath: videoPath,\n                thumbnail: thumbnail,\n                thumbnailBase64: thumbnailBase64\n            };\n            cssOrm.trigger(\"videoPickerClosed\", a);\n        };\n        rxm_image.saveToPhotoAlbumBlock = clsImageBase._onCbSaveToPhotoAlbum;\n        rxm_image.onImgPickerClosed = clsImageBase._onPickerClosed;\n        rxm_image.onImgCropperClosed = clsImageBase._onCropperClosed;\n        rxm_image.onVideoPickerClosed = clsImageBase._onVideoPickerClosed;\n        cssOrm.declare(\"clsImageBase\", clsImageBase, true);\n    }\n    return cssOrm.obj.clsImageBase();\n});\n","define(\"RxmLocalNotificationBase\", [], function () {\n    if (typeof rxm_localNotification == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsLocalNotificationBase != \"undefined\") {\n        return cssOrm.obj.clsLocalNotificationBase();\n    }\n    function clsLocalNotificationBase() {\n        ///<summary>本地通知插件原生API封装</summary>\n    }\n    clsLocalNotificationBase.prototype.addNotice = function (args) {\n        ///<summary>本地通知功能,可以做到本地定时推送消息提醒,设置提醒消息时会在通知栏收到消息,提醒声音与系统设置的系统默认铃声提醒一致</summary>\n        ///<param  name=\"args\"  type=\"clsNotificationArgs\"></param>\n        rxm_localNotification.addNotice(args.id, args.time, args.mode, args.message, args.buttonTitle, args.ringPath, args.cycle, args.notifyCount);\n    };\n    clsLocalNotificationBase.prototype.removeNotice = function (id) {\n        ///<summary>移除指定唯一标示符的通知</summary>\n        ///<param  name=\"id\"  type=\"String\">必选 通知的唯一标示符</param>\n        rxm_localNotification.removeNotice(id);\n    };\n    clsLocalNotificationBase.prototype.removeAllNotice = function () {\n        ///<summary>移除所有通知</summary>\n        rxm_localNotification.removeAllNotice();\n    };\n    clsLocalNotificationBase._onAdd = function (id, message, extras) {\n        ///<summary>接收到通知时回调</summary>\n        ///<param  name=\"id\"  type=\"String\">必选 通知的唯一标示符</param>\n        ///<param  name=\"message\"  type=\"String\">必选 通知内容</param>\n        ///<param  name=\"extras\"  type=\"String\">必选 额外的数据信息</param>\n        var cbData;\n        cbData = {\n            id: id,\n            message: message,\n            extras: extras\n        };\n        cssOrm.trigger(\"notificationAdd\", cbData);\n    };\n    rxm_localNotification.onMessage = clsLocalNotificationBase._onAdd;\n    cssOrm.declare(\"clsLocalNotificationBase\", clsLocalNotificationBase, true);\n    return cssOrm.obj.clsLocalNotificationBase();\n});\n","define(\"RxmLocationBase\", [], function () {\n    if (typeof rxm_position == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsLocationBase != \"undefined\") {\n        return cssOrm.obj.clsLocationBase();\n    }\n    function clsLocationBase() {\n        ///<summary>本地定位插件原生API封装</summary>\n    }\n    clsLocationBase.prototype.open = function () {\n        ///<summary>位置信息将通过手机GPS、WIFI或移动网络信号获取。成功打开定位功能时回调cbOpenLocation方法,成功获取到位置信息时通过onChange回调方法返回。</summary>\n        rxm_position.open();\n    };\n    clsLocationBase.prototype.close = function () {\n        ///<summary>关闭定位功能,不再监听位置信息。</summary>\n        rxm_position.close();\n    };\n    clsLocationBase.prototype.getAddressByPosition = function (optId, inLatitude, inLongitude, flag) {\n        ///<summary>根据经纬度获取对应的地址信息 回调 cbGetAddress</summary>\n        ///<param  name=\"inLatitude\"  type=\"String\">必选 纬度</param>\n        ///<param  name=\"inLongitude\"  type=\"String\">必选 经度</param>\n        ///<param  name=\"flag\"  type=\"String\">可选 返回地址类型,默认是地址名称。值为1时返回地址详情(JSON格式)</param>\n        rxm_position.getAddressByPosition(optId, inLatitude, inLongitude, flag);\n    };\n    clsLocationBase.prototype.navigationByApps = function (startName, startLng, startLat, endName, endLng, endLat, coorType) {\n        ///<summary>调用手机安装的地图 app 进行导航，默认驾车模式，进入第三方 app 后可以自行切换导航模式。</summary>\n        rxm_position.navigationByApps(startName, startLng, startLat, endName, endLng, endLat, coorType);\n    };\n    clsLocationBase._onCbOpenLocation = function (data) {\n        ///<summary>定位功能是否成功打开的回调方法</summary>\n        ///<param  name=\"data\"  type=\"Number\">必选 返回cip.cSuccess或cip.cFailed,详见CONTANT中CallbackInt类型数据</param>\n        var cbData;\n        cbData = {\n            data: data\n        };\n        cssOrm.trigger(\"locationOpen\", cbData);\n        if (data == 1) {\n            rxm_position.onChange = function (lat, log) {\n                ///<summary>设备位置变化的监听方法</summary>\n                ///<param  name=\"lat\"  type=\"Number\">必选 纬度</param>\n                ///<param  name=\"log\"  type=\"Number\">必选 经度</param>\n                var cbData;\n                cbData = {\n                    lat: lat,\n                    log: log\n                };\n                cssOrm.trigger(\"locationOnChange\", cbData);\n            };\n        }\n    };\n    clsLocationBase._onCbGetAddress = function (optId, data) {\n        ///<summary>获取到位置信息返回经纬度数据的回调方法</summary>\n        ///<param  name=\"dataType\"  type=\"Number\">必选 参数类型,0：字符串；1：JSON字符串</param>\n        ///<param  name=\"data\"  type=\"Number\">必选 返回获取的地址或者错误信息ErrorCode</param>\n        //var cbData;\n        //cbData = {\n        //    dataType: optId,\n        //    data: data\n        //}\n        cssOrm.trigger(\"locationGetAddress\", optId, data);\n    };\n    //clsLocationBase._onChange = function (lat, log) {\n    //    ///<summary>设备位置变化的监听方法</summary>\n    //    ///<param  name=\"lat\"  type=\"Number\">必选 纬度</param>\n    //    ///<param  name=\"log\"  type=\"Number\">必选 经度</param>\n    //    var cbData;\n    //    cbData = {\n    //        lat: lat,\n    //        log: log\n    //    }\n    //    cssOrm.trigger(\"locationOnChange\", cbData);\n    //}\n    rxm_position.openBlock = clsLocationBase._onCbOpenLocation;\n    rxm_position.getAddressByPositionBlock = clsLocationBase._onCbGetAddress;\n    //rxm_position.onChange = clsLocationBase._onChange;\n    cssOrm.declare(\"clsLocationBase\", clsLocationBase, true);\n    return cssOrm.obj.clsLocationBase();\n});\n","define(\"RxmScannerBase\", [], function () {\n    if (typeof rxm_scanner == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsScannerBase === \"undefined\") {\n        function clsScannerBase() {\n            ///<summary> 二维码插件</summary>\n        }\n        clsScannerBase.prototype.begin = function () {\n            rxm_scanner.begin();\n        };\n        clsScannerBase.prototype.createQR = function (content) {\n            rxm_scanner.createQR(content);\n        };\n        clsScannerBase._cbOpen = function (status, data) {\n            var data = {\n                status: status,\n                data: data\n            };\n            cssOrm.trigger(\"scannerOpen\", data);\n        };\n        clsScannerBase._cbCreateQR = function (data) {\n            cssOrm.trigger(\"scannerCreateQR\", \"\", data);\n        };\n        cssOrm.declare(\"clsScannerBase\", clsScannerBase, true);\n        rxm_scanner.beginBlock = clsScannerBase._cbOpen;\n        rxm_scanner.createQRBlock = clsScannerBase._cbCreateQR;\n    }\n    return cssOrm.obj.clsScannerBase();\n});\n","define(\"RxmSpeechBase\", [], function () {\n    if (typeof rxm_speech == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsSpeechBase === \"undefined\") {\n        function clsSpeechBase() {\n            ///<summary> 对</summary>\n        }\n        clsSpeechBase.prototype.start = function () {\n            ///<summary> 通过此方法调用语音识别</summary>\n            rxm_speech.start();\n        };\n        clsSpeechBase.prototype.stop = function () {\n            ///<summary> 通过此方法调用语音识别</summary>\n            rxm_speech.stop();\n        };\n        clsSpeechBase._getRecgMsgBlock = function (data) {\n            var a = {\n                data: data\n            };\n            cssOrm.trigger(\"speechStop\", a);\n        };\n        rxm_speech.getRecgMsgBlock = clsSpeechBase._getRecgMsgBlock;\n        cssOrm.declare(\"clsSpeechBase\", clsSpeechBase, true);\n    }\n    return cssOrm.obj.clsSpeechBase();\n});\n","define(\"RxmVideoBase\", ['RxmUtil'], function (util) {\n    if (typeof rxm_video_player == 'undefined' || typeof rxm_video_recorder == 'undefined') {\n        return;\n    }\n    if (typeof cssOrm.obj.clsVideoBase === \"undefined\") {\n        function clsVideoBase() {\n            ///<summary> 本地视频播放调用</summary>\n        }\n        var homeArgs = require(require.rxm.AppTool);\n        clsVideoBase.prototype.openSystemPlayer = function (param) {\n            ///<summary> 打开视频播放器</summary>\n            var json = \"\";\n            if (param.param) {\n                json = param.param;\n            }\n            else {\n                json = param;\n            }\n            rxm_video_player.openSystemPlayer(json.src);\n        };\n        clsVideoBase.prototype.openRxmPlayer = function (param) {\n            ///<summary> 打开自定义视频播放器</summary>\n            var id = param.id;\n            var title = param.title;\n            var sources = JSON.stringify(param.sources);\n            var supportRecordPlayPosition = param.supportRecordPlayPosition;\n            var supportLocalPref = param.supportLocalPref;\n            var supportAcceleratedPlay = param.supportAcceleratedPlay;\n            rxm_video_player.openRxmPlayer(id, title, sources, supportRecordPlayPosition, supportLocalPref, supportAcceleratedPlay);\n        };\n        clsVideoBase.prototype.openPlayer = function (param) {\n            ///<summary> 打开自定义视频播放器，支持界面定制</summary>\n            var json = \"\";\n            if (param.param) {\n                json = param.param;\n            }\n            else {\n                json = param;\n            }\n            rxm_video_recorder.openPlayer(JSON.stringify(json));\n        };\n        clsVideoBase.prototype.closePlayer = function () {\n            ///<summary> 关闭视频播放器,此操作会触发onPlayerClosed 播放器被关闭时的监听方法</summary>\n            rxm_video_recorder.closePlayer();\n        };\n        clsVideoBase.prototype.record = function (params) {\n            ///<summary>打开视频录制界面 回调 onRecordFinish</summary>\n            ///<param  name=\"params\"  type=\"Object\">必选 JSON字符串</param>\n            var maxDuration = homeArgs.getSettingData().video.maxDuration;\n            var qualityType = homeArgs.getSettingData().video.qualityType;\n            var bitRateType = homeArgs.getSettingData().video.bitRateType;\n            var fileType = homeArgs.getSettingData().video.fileType;\n            var param = {\n                maxDuration: homeArgs.getSettingData().video.maxDuration,\n                qualityType: homeArgs.getSettingData().video.qualityType,\n                bitRateType: homeArgs.getSettingData().video.bitRateType,\n                fileType: homeArgs.getSettingData().video.fileType,\n                needThumb: homeArgs.getSettingData().video.needThumb\n            };\n            if (params.param) {\n                params = params.param;\n            }\n            if (params) {\n                if (params.maxDuration) {\n                    param.maxDuration = params.maxDuration;\n                }\n                if (params.qualityType) {\n                    param.qualityType = params.qualityType;\n                }\n                if (params.bitRateType) {\n                    param.bitRateType = params.bitRateType;\n                }\n                if (params.fileType) {\n                    param.fileType = params.fileType;\n                }\n                if (params.needThumb) {\n                    param.needThumb = params.needThumb;\n                }\n            }\n            rxm_video_recorder.record(JSON.stringify(param));\n        };\n        clsVideoBase._onPlayerClose = function (src) {\n            result = JSON.parse(src);\n            cssOrm.trigger(\"videoClose\", result);\n            cssOrm.trigger(\"videoOpenPlayer\", result);\n        };\n        clsVideoBase._onPlayerStatusChange = function (status) {\n            status = JSON.parse(status);\n            cssOrm.trigger(\"videoStatusChange\", status);\n        };\n        clsVideoBase._onRecordFinish = function (result) {\n            result = JSON.parse(result);\n            //            console.log(result.result);\n            if (result.result == 2) {\n                util.alert(\"请授权麦克风和相机权限后重试\");\n            }\n            else if (result.result == 1) {\n                util.alert(\"已取消录制\");\n            }\n            else {\n                cssOrm.trigger(\"videoRecordFinish\", result);\n            }\n            //cssOrm.trigger(\"videoRecordFinish\", result);\n        };\n        clsVideoBase._onExportWithProgress = function (data) {\n            data = JSON.parse(data);\n            cssOrm.trigger(\"videoExportWithProgress\", data);\n        };\n        rxm_video_recorder.onPlayerClose = clsVideoBase._onPlayerClose;\n        rxm_video_recorder.onPlayerStatusChange = clsVideoBase._onPlayerStatusChange;\n        rxm_video_recorder.onRecordFinish = clsVideoBase._onRecordFinish;\n        rxm_video_recorder.onExportWithProgress = clsVideoBase._onExportWithProgress;\n        cssOrm.declare(\"clsVideoBase\", clsVideoBase, true);\n    }\n    return cssOrm.obj.clsVideoBase();\n});\n","define(\"RxmAppFileUploader\", [\"\"], function (dataArr, clsUploader) {\n    ///<param name=\"dataArr\" value=\"PdwebDataCollectionBase\"></param>\n    ///<param name=\"clsUploader\" value=\"ClsGdclUploader\"></param>\n    if (cssOrm.cls.clsAppFileUploaderr) {\n        return cssOrm.cls.clsAppFileUploaderr;\n    }\n    var cls = function (options) {\n        ///<summary>原生开发上传类</summary>\n        ///<param name=\"options\" type=\"Object\">baidu WebUploader.uploader对象选择项，参见 /http://fex.baidu.com/webuploader/doc/index.html </param>\n        ///<field  name=\"uploader\" type=\"ClsGdclUploaer\"> </field>\n        ///<field  name=\"modifiedObj\"  type=\"Object\"> 修改操作对象</field>\n        //baiduWebUploader.Mediator.installTo(this);//建立消息队列\n        this.dataArr = new dataArr();\n        itemClass = fileInfo.prototype.constructor;\n        this._onlyRead = false;\n        //默认的缩略图后缀\n        this.defaultThumbSuffix = \"\";\n        this.uploader = new clsUploader(options);\n        //添加文件\n        this.uploader.on(clsUploader.enumEvt.fileQueued, this._onAfterFileAdd, this);\n        //文件上传进度\n        this.uploader.on(clsUploader.enumEvt.uploadProgress, this._onUploadProgress, this);\n        //文件在队列中删除\n        //this.uploader.on(clsUploader.enumEvt.fileDequeued, this.delFile, this);\n        //单个文件上传开始\n        this.uploader.on(clsUploader.enumEvt.uploadStart, this._onUploadStart, this);\n        //单个文件上传结束\n        this.uploader.on(clsUploader.enumEvt.uploadSuccess, this._onAfterUploadSuccess, this);\n        //所有文件上传结束\n        this.uploader.on(clsUploader.enumEvt.uploadFinished, this._onUploadFinished, this);\n        this.uploader.on(clsUploader.enumEvt.error, this._onError, this);\n        this.uploader.on(\"beforeFileQueued\", this._onbeforeFileQueued, this);\n        this._auto = true;\n    };\n    cls.prototype.addFile = function (fileOrFiles, who, ipos) {\n        if (who === 'filedlg') {\n            this.dataArr.addData(fileOrFiles, who, ipos);\n        }\n        else if (who === \"ormApp\") {\n        }\n        else {\n            this.dataArr.addData(fileOrFiles, who, ipos);\n        }\n    };\n    cls.prototype.getFileNum = function () {\n        return this.dataArr.getData().length;\n    };\n    cls.prototype.delFile = function (fileOrFiles) {\n        if ($.isArray(fileOrFiles)) {\n        }\n        else {\n            if (fileOrFiles._uploaderFile) {\n                this.uploader.removeFile(fileOrFiles._uploaderFile);\n            }\n            this.dataArr.removeData(fileOrFiles);\n        }\n    };\n    cls.prototype.getChangedFiles = function () {\n        return this.dataArr.getDataChanged();\n    };\n    cls.prototype.submitSuccess = function () {\n        this.dataArr.submitSuccess();\n    };\n    cls.prototype.option = function (key, opt) {\n        this.uploader.option(key, opt);\n    };\n    cls.prototype.OpenFileDlg = function (IdReplaced) {\n        this.modifiedObj = IdReplaced;\n        this.uploader._openFileDlg();\n        // event.stopPropagation();\n        event.preventDefault();\n        return false;\n    };\n    //accept {Arroy} [可选] [默认值：null] 指定接受哪些类型的文件。 由于目前还有ext转mimeType表，所以这里需要分开指定。\n    //title {String} 文字描述\n    //extensions {String} 允许的文件后缀，不带点，多个用逗号分割。\n    //mimeTypes {String} 多个用逗号分割。\n    //如：\n    //{\n    //    title: 'Images',\n    //    extensions: 'gif,jpg,jpeg,bmp,png',\n    //    mimeTypes: 'image/*'\n    //}\n    cls.prototype.accept = function (fileExt) {\n        ///<summary>指定接受哪些类型的文件</summary>\n        ///<param name=\"fileExt\" type=\"clsBaiduAccept\"></param>\n        this.option({ accept: fileExt });\n        // this.uploader.options.accept = [fileExt];\n    };\n    cls.prototype.enableAdd = function () {\n        ///<summary>能不能继续添加文件</summary>\n        ///<return type=\"Boolean\"></return>\n        var num = this.getFileNum();\n        return num < this.uploader.options.fileNumLimit;\n    };\n    cls.prototype.enableModify = function () {\n        ///<summary>能不能修改文件</summary>\n        ///<return type=\"Boolean\"></return>\n        return this.getFileNum() > 0;\n    };\n    cls.prototype.enableDel = function () {\n        ///<summary>能不能删除文件</summary>\n        ///<return type=\"Boolean\"></return>\n        return this.getFileNum() > 0;\n    };\n    cls.prototype.makeThumb = function (file, func) {\n        ///<summary>产生文件缩略图，填充到image  src字段，</summary>\n        ///<param name=\"fileOrFileId\" type=\"Object\" >文件对象，或者文件id</param>\n        ///<param>产生文件缩略图参数，一般不用填写</param>\n        ///<return type=\"String\">返回 img  src 属性值</return>\n        var ths = this;\n        function MakeThumb(error, src) {\n            if (!error) {\n                file.thumbnail = src;\n            }\n            func(error, src);\n            if (ths._auto)\n                ths.uploader.upload(file);\n        }\n        ;\n        this.uploader.makeThumb(file, MakeThumb, this.uploader.options.thumb.width, this.uploader.options.thumb.height);\n    };\n    cls.prototype.beginUpload = function (fileOrFileId) {\n        ///<summary>调用baiduWebUpload  upload 函数开始上传，</summary>\n        ///<param name=\"fileOrFileId\" type=\"Object\" >文件对象，或者文件id,undefined为全部上传</param>\n        ///<return type=\"String\">返回 img  src 属性值</return>\n        this.uploader.upload(fileOrFileId);\n    };\n    cls.prototype.on = function (msgType, callback, thisArg) {\n        this.dataArr.on(msgType, callback, thisArg);\n    };\n    cls.prototype.trigger = function (msgType, a1, a2, a3, a4, a5, a6) {\n        this.dataArr.trigger(msgType, a1, a2, a3, a4, a5, a6);\n    };\n    cls.prototype._onAfterFileAdd = function (file) {\n        if (typeof this.modifiedObj === \"undefined\") {\n            this.addFile(new fileInfo(file), 'filedlg');\n        }\n        else {\n            //修改\n        }\n    };\n    //function(file){};\n    cls.prototype._onUploadStart = function (file) {\n        this.trigger(cls.enumEvt.uploadStart, file);\n    };\n    cls.prototype._onUploadProgress = function (file, percentage) {\n        ///<summary>上传过程中触发，携带上传进度。</summary>\n        ///<param name=\"file\" type=\"clsBaiduFile\">File对象</param>\n        ///<param name=\"percentage\" type=\"Number\"\">进度百分比</param>\n        var size = this._fileSize();\n        if (typeof percentage == \"number\") {\n            percentage *= 1.0;\n            i = percentage;\n            size.already += file.size * percentage;\n            percentage *= 100;\n        }\n        else {\n            i = Number(percentage) * 1.0 / 100;\n            size.already += file.size * i;\n        }\n        var thisFilePercent = \"\" + percentage;\n        var totalPercent = \"\" + (size.already * 1.0 / size.total) * 100;\n        this.trigger(cls.enumEvt.uploadProgress, file, totalPercent, thisFilePercent);\n    };\n    cls.prototype._fileSize = function () {\n        var total = 0;\n        var already = 0;\n        var d = this.dataArr.getData();\n        for (i = 0; i < d.length; i++) {\n            var it = d[i];\n            total += it.fileSize;\n            if (typeof (it._uploaderFile) === \"undefined\") {\n                already += it.fileSize;\n            }\n            ;\n        }\n        return {\n            total: total,\n            already: already\n        };\n    };\n    //function(file,reason){};\n    cls.prototype._onUploadError = function (file, reason) {\n        ///<summary>当文件上传出错时触发</summary>\n        ///<param name=\"file\" type=\"File\"\">File对象</param>\n        ///<param name=\")\" type=\"String\"\">出错的code</param>\n    };\n    //function(file,responseData){};\n    cls.prototype._onAfterUploadSuccess = function (file, responseData) {\n        ///<summary>当文件上传成功时触发</summary>\n        ///<param name=\"file\" type=\"File\">File对象</param>\n        ///<param name=\"responseData\" type=\"Object\"\">服务端返回的数据</param>\n        this.trigger(cls.enumEvt.uploadSuccess, file, responseData);\n    };\n    cls.prototype._onUploadFinished = function () {\n        ///<summary>当所有文件上传结束时触发。</summary>\n        //this.setState('confirm');\n        //this._setSubmitBtnEnable(true);\n    };\n    //function(type){};\n    cls.prototype._onError = function (type) {\n        ///<summary>当validate不通过时，会以派送错误事件的形式通知调用者。通过upload.on('error', handler)可以捕获到此类错误，目前有以下错误会在特定的情况下派送错来。<br/>Q_EXCEED_NUM_LIMIT 在设置了fileNumLimit且尝试给uploader添加的文件数量超出这个值时派送。<br/>Q_EXCEED_SIZE_LIMIT 在设置了Q_EXCEED_SIZE_LIMIT且尝试给uploader添加的文件总大小超出这个值时派送。<br/>Q_TYPE_DENIED 当文件类型不满足时触发<br/>});</summary>\n        ///<param name=\"type\" type=\"String\"\">错误类型</param>     \n        var error;\n        switch (type) {\n            case \"Q_EXCEED_NUM_LIMIT\":\n                {\n                    error = \"文件数量不能超过\" + this.uploader.options.fileNumLimit + \"个\";\n                }\n                ;\n                break;\n            case \"F_EXCEED_SIZE\":\n                {\n                    error = \"文件大小不能超过\" + this.uploader.options.fileSingleSizeLimit;\n                }\n                ;\n                break;\n            case \"Q_TYPE_DENIED\":\n                {\n                    error = \"文件种类错误\";\n                }\n                ;\n                break;\n            case \"F_DUPLICATE\":\n                {\n                    error = \"不可选择相同的照片\";\n                }\n                ;\n                break;\n            default: {\n                error = type;\n            }\n        }\n        alert(error);\n    };\n    cls.prototype._onFileDequeued = function (file) {\n        ///<summary>移除文件</summary>\n        ///<param name=\"file\"  type=\"File\"> 文件</param>\n        this.trigger(cls.enumEvt.fileChanged);\n    };\n    cls.prototype._onbeforeFileQueued = function (file) {\n        if (!this.enableAdd()) {\n            var s = \"上传文件数量不能超过\" + this.getFileNum() + \"个\";\n            util.alert(s);\n            return false;\n        }\n        return true;\n    };\n    //静态变量，事件枚举\n    cls.enumEvt = $.extend({}, dataArr.enumEvt, {\n        //数据被转变事件\n        //function({data:file,reasion:string})\n        changed: \"changed\",\n        //function({file:fileinfo,fileprogress:number,total:number}\n        //文件上传进度\n        uploadProgress: \"uploadProgress\",\n        uploadStart: \"uploadStart\",\n        uploadSuccess: \"uploadSuccess\"\n    }, clsUploader.enumEvt);\n    //读取文件的缩略图\n    cls.urlThumb = function (fileId, width, height) {\n        var path = getServer() + '/resoft/x/file/thumb?fileId=' + fileId;\n        return path;\n    };\n    //打开文件，在浏览器中显示\n    cls.urlOpen = function (fileId) {\n        var path = getServer() + '/resoft/x/file/open?fileId=' + fileId;\n        return path;\n    };\n    //下载文件，通过文件保存对话框选择路径，文件名称进行保存\n    cls.urlDown = function (fileId) {\n        var path = getServer() + '/resoft/x/file/down?fileId=' + fileId;\n        return path;\n    };\n    cls.urlDownApk = function (fileId) {\n        var path = getServer() + '/resoft/x/file/downApk?fileId=' + fileId;\n        return path;\n    };\n    cls.urlDownH5 = function (fileId) {\n        var path = getServer() + '/resoft/x/file/downH5?filePath=' + fileId;\n        return path;\n    };\n    cls.urlUpload = function (fileId) {\n        var path = getServer() + \"/resoft/x/file/add\";\n        return path;\n    };\n    cssOrm.declare(\"clsAppFileUploaderr\", cls);\n    return cls;\n});\n","define(\"RxmAppUploader\", [require.rxm.NativeFile, \"RxmOrmFileUploader\",\n    require.rxm.Video,\n    require.rxm.Audio,\n    require.rxm.Camera,\n    require.rxm.Image,\n    require.rxm.AppTool], function (fileOp, ormUploader, video, audio, camera, image, appTool) {\n    ///<param name=\"fileOp\" type=\"objOrmFile\"></param>\n    ///<param name=\"ormUploader\" type=\"clsOrmFileUploader\"></param>\n    ///<param name=\"video\" type=\"objOrmVideo\"></param>\n    ///<param name=\"audio\" type=\"objOrmAudio\"></param>\n    ///<param name=\"camera\" type=\"objOrmCamera\"></param>\n    ///<param name=\"image\" type=\"objOrmImage\"></param>\n    ///<param name=\"appTool\" type=\"clsAppArgs\"></param>\n    ///<summary>调用 封装</summary>\n    if (cssOrm.cls.clsAppUploader) {\n        return cssOrm.cls.clsAppUploader;\n    }\n    var cls = function (options, events) {\n        ///<summary></summary>\n        ///<param  name=\"options\" value=\"cssArgs.clsOrmFileUploader.constructorArg\"></param>\n        ///<param  name=\"events\" type=\"Object\">事件名称和叫回函数{click:function{}}</param>\n        ///<field  name=\"fileArr\" type=\"Array\" elementType=\"clsOrmFileUploader\">事件名称和叫回函数{click:function{}}</param>\n        this.options = options;\n        this.msgid = appTool.unid();\n        var dom = '<div id=\"' + this.msgid + '\" style=\"width:0px;height:0px;display:none\"></div>';\n        //this.msgid = \"#\" + this.msgid;\n        //var $contents = $(\"#rxm_content\");\n        //$(dom).appendTo($contents.length > 0 ? $contents : $(document));\n        this.$msg = $(document);\n        this.fileArr = [];\n        this.uploadIndex = 0;\n        this.on('uploadBeforeSend', this._onSendFileBefore, this);\n        this.on('uploadAccept', this._onUploadAccept, this);\n        if (typeof events != 'undefined') {\n            for (var item in events) {\n                this.on(item, events[item]);\n            }\n        }\n    };\n    cls.prototype.on = function (msgName, callback, scope) {\n        if (!$.isExist(scope)) {\n            scope = this;\n        }\n        this.$msg.on(msgName + this.msgid, $.proxy(callback, scope));\n    };\n    cls.prototype.off = function (msgName, callback) {\n        this.$msg.on(msgName + this.msgid, callback);\n    };\n    cls.prototype.trigger = function (msgName, data) {\n        this.$msg.trigger(msgName + this.msgid, data);\n    };\n    cls.prototype.addOrmFile = function (arg) {\n        ///<param  name=\"arg\"  value= \"cssArgs.clsAppUploader.addOrmFile\"></param>\n        var arr = [];\n        if ($.isArray(arg)) {\n            arr = arg;\n        }\n        else {\n            arr.push(arg);\n        }\n        for (var i = 0; i < arr.length; i++) {\n            arg = arr[i];\n            arg.id = arg.id || appTool.uuid();\n            var a = {\n                id: arg.id,\n                opType: \"new\",\n                ///<field  type=\"String\">文件名</field>\n                fileName: $.isExist(arg.realName) ? arg.realName : fileOp.getFileName(arg.filePath),\n                ///<field  type=\"String\">文件扩展名</field>\n                fileExt: fileOp.getFileExt(arg.filePath),\n                ///<field type=\"Number\">文件大小</field>\n                fileSize: 5,\n                ///<field type=\"Number\">序号</field>\n                orderNum: 1,\n                ///<field type=\"String\">文件缩略图Url地址</field>\n                thumbnailUrl: \"\",\n                ///<field type=\"String\">文件本身的Url地址</field>\n                lastModifiedDate: \"\",\n                ///<field  type=\"clsAppUploader\">uploader对象文件</field>\n                _uploaderFile: null,\n                ///<field  type=\"String\">文件传输类型</field>\n                httpType: \"\"\n            };\n            a.fileRemarks = a.fileName + \".\" + a.fileExt;\n            fileOp.getSizeByPath({\n                filePath: arg.filePath,\n                callback: sizeCall\n            });\n            var the = this;\n            function sizeCall(evt, redata) {\n                a.fileSize = redata;\n                //var opt = $.extend({}, the.options);\n                a.filePath = arg.filePath;\n                var uploader = new ormUploader(arg);\n                uploader.option.fileInfo = a;\n                uploader.onProgress($.proxy(the._onFileUplaoderProgress, the));\n                uploader.onStart($.proxy(the._onFileUplaoderStart, the));\n                uploader.onStop($.proxy(the._onFileUplaoderEnd, the));\n                a._uploaderFile = uploader;\n                the.fileArr.push(uploader);\n                the.trigger(cls.enumEvt.fileQueued, a);\n            }\n            ;\n        }\n    };\n    var _removeFile = function (id, arr) {\n        ///<param  name=\"arr\"  type=\"Array\"></param>\n        var arg = \"\";\n        var i = true;\n        $.each(arr, function (index, item) {\n            if (i && item.option.id == id.option.id) {\n                arr.splice(index, 1);\n                arg = item;\n                i = false;\n                return;\n            }\n        });\n        return arg;\n    };\n    cls.prototype.removeFile = function (id) {\n        var ret = _removeFile(id, this.fileArr);\n        this.trigger(cls.enumEvt.fileDequeued, ret.option.fileInfo);\n    };\n    cls.prototype.upload = function () {\n        if (this.fileArr.length == 0) {\n            this.trigger(cls.enumEvt.uploadFinished);\n            return;\n        }\n        //this.trigger(cls.enumEvt.startUpload,);//上传全部文件\n        this.fileArr[0].upload();\n        //$.each(this.fileArr,function(index,item)\n        //{\n        //    the.uploadIndex=index;\n        //    ///<param name=\"item\" type=\"clsOrmFileUploader\"></param>\n        //    item.upload();\n        //})\n    };\n    cls.prototype._onFileUplaoderStart = function (evt, arg) {\n        this.options.errorNum = 0;\n        this.trigger(cls.enumEvt.uploadStart, evt.data.option.fileInfo);\n    };\n    cls.prototype._onFileUplaoderEnd = function (evt, arg) {\n        //文件上传结束\n        var a = { file: evt.data.option.fileInfo };\n        if (arg.success) {\n            a.data = arg.message;\n            a.file._uploaderFile = undefined;\n            this.trigger(cls.enumEvt.uploadSuccess, a);\n            this.fileArr.splice(0, 1);\n            this.upload();\n        }\n        else {\n            this.options.errorNum = this.options.errorNum++ || 1;\n            if (this.options.errorNum == 2) {\n                a.data = arg;\n                this.trigger(cls.enumEvt.uploadError, arg);\n            }\n        }\n    };\n    cls.prototype._onFileUplaoderProgress = function (evt, arg) {\n        var a = {\n            file: evt.data.option.fileInfo,\n            data: arg\n        };\n        //没有成功！！\n        this.trigger(cls.enumEvt.uploadProgress, a);\n    };\n    cls.prototype._openFileDlg = function (arg) {\n        ///<param  name=\"arg\" value=\"cssArgs.clsFileUploader.OpenFileDlg\"></param>\n        var the = this;\n        if (arg.filePath == \"startVideo\") { //打开摄像头，录视频\n            var args = {\n                callback: function (e, data) {\n                    var path = data.path;\n                    var file = {\n                        filePath: data.path,\n                        realName: arg.realName\n                    };\n                    the.addOrmFile(file);\n                },\n                params: {\n                    maxDuration: appTool.getSettingData().video.maxDuration,\n                    qualityType: appTool.getSettingData().video.qualityType,\n                    bitRateType: appTool.getSettingData().video.bitRateType,\n                    fileType: appTool.getSettingData().video.fileType,\n                    needThumb: appTool.getSettingData().video.needThumb\n                },\n                data: {\n                    id: \"videoRecordBtn\"\n                }\n            };\n            video.record(args);\n        }\n        else if (arg.filePath == \"startPhoto\") { //照相\n            var args = {\n                callback: function (e, data) {\n                    var file = {\n                        filePath: data,\n                        realName: arg.realName\n                    };\n                    the.addOrmFile(file);\n                },\n                // comtextareass: appTool.getSettingData().image.comtextareass,\n                // quality:  appTool.getSettingData().image.quality,\n                // value: { \"width\": appTool.getSettingData().image.imgWidth, \n                //     \"height\": appTool.getSettingData().image.imgHeight },\n                data: { id: \"cameraOpenBtn\" }\n            };\n            camera.open(args);\n        }\n        else if (arg.filePath == \"startAudio\") { //录音\n            var fileType = appTool.getSettingData().voice.mode;\n            var mode = 2;\n            if (fileType == \"mp3\") {\n                mode = 2;\n            }\n            var args = {\n                callback: function (e, data) {\n                    var path = data.data;\n                    var file = {\n                        filePath: path,\n                        realName: arg.realName\n                    };\n                    the.addOrmFile(file);\n                },\n                param: {\n                    mode: mode,\n                    fileName: \"1111\"\n                },\n                data: {\n                    id: \"audioRecordBtn\"\n                }\n            };\n            audio.record(args);\n        }\n        else if (arg.filePath == \"video\" || arg.filePath == \"video\" || arg.filePath.indexOf(\"/\") > -1) { //打开filedlg浏览文件\n            arg.callback = function (data) {\n                if ($.isString(data) && data.length > 6) {\n                    this.filePath = data;\n                    the.addOrmFile(this);\n                }\n                else if ($.isArray(data)) {\n                    $.each(data, function (index, item) {\n                        the.addOrmFile(item);\n                    });\n                }\n                ;\n            };\n            //如果是\n            fileOp.openFileDlg(arg);\n        }\n        else if (arg.filePath == \"audio\" || arg.filePath == \"audio\" || arg.filePath.indexOf(\"/\") > -1) { //打开filedlg浏览文件\n            arg.callback = function (data) {\n                if ($.isString(data) && data.length > 6) {\n                    this.filePath = data;\n                    the.addOrmFile(this);\n                }\n                else if ($.isArray(data)) {\n                    $.each(data, function (index, item) {\n                        the.addOrmFile(item);\n                    });\n                }\n                ;\n            };\n            //如果是\n            fileOp.openFileDlg(arg);\n        }\n        else if (arg.filePath == \"camera\" || arg.filePath == \"camera\" || arg.filePath.indexOf(\"/\") > -1) { //打开filedlg浏览文件\n            arg.callback = function (data) {\n                if ($.isString(data) && data.length > 6) {\n                    this.filePath = data;\n                    the.addOrmFile(this);\n                }\n                else if ($.isArray(data)) {\n                    $.each(data, function (index, item) {\n                        the.addOrmFile(item);\n                    });\n                }\n                ;\n            };\n            //如果是\n            fileOp.openFileDlg(arg);\n        }\n        else if (arg.filePath == \"systemImage\") {\n            var args = {\n                callback: function (e, data) {\n                    var fileArray = [];\n                    fileArray = JSON.parse(data.data);\n                    for (var i = 0; i < fileArray.length; i++) {\n                        var file = {\n                            filePath: fileArray[i]\n                        };\n                        the.addOrmFile(file);\n                    }\n                },\n                data: {\n                    id: \"videoRecordBtn\"\n                }\n            };\n            image.openPicker(args);\n        }\n        else if (arg.filePath == \"systemVideo\") {\n            var args = {\n                callback: function (e, data) {\n                    if (data.videoPath) {\n                        var file = {\n                            filePath: data.videoPath\n                        };\n                        the.addOrmFile(file);\n                    }\n                },\n                needBase64: 1\n            };\n            image.openVideoPicker(args);\n        }\n        else { //打开filedlg浏览文件\n            arg.callback = function (data) {\n                if ($.isString(data) && data.length > 6) {\n                    this.filePath = data;\n                    the.addOrmFile(this);\n                }\n                else if ($.isArray(data)) {\n                    $.each(data, function (index, item) {\n                        the.addOrmFile(item);\n                    });\n                }\n                ;\n            };\n            //如果是\n            arg.ends = arg.filePath;\n            fileOp.openFileDlg(arg);\n        }\n    };\n    cls.prototype._onSendFileBefore = function (object, data, headers) {\n        //var me = this;\n        //if (typeof object === \"undefined\") {\n        //    headers = {};\n        //} else {\n        //    if (object.file) {\n        //        var f = object.file;\n        //        data[\"fileId\"] = f.uuid;\n        //        data[\"chunk\"] = object.chunk;\n        //        if (object.chunk == 0) {\n        //            data[\"md5\"] = f.statusText;\n        //            data[\"fileExt\"] = f.ext;\n        //            data[\"fileName\"] = f.name.substring(0, f.name.lastIndexOf(\".\"));\n        //            data[\"chunks\"] = object.chunks;\n        //            data[\"chunkSize\"] = this.options.chunkSize;\n        //            data[\"fileSize\"] = f.size;\n        //            data['httpType'] = f.type;\n        //            data['lastModifiedDate'] = f.lastModifiedDate;\n        //            if (typeof f.thumbnail != \"undefined\") {\n        //                data[\"thumbnail\"] = f.thumbnail;\n        //                data['thumbWidth'] = this.options.thumb.width;\n        //                data['thumbHeight'] = this.options.thumb.height;\n        //                data['thumbType'] = this.options.thumb.type;\n        //            }\n        //        }\n        //    }\n        //}\n    };\n    cls.prototype._onUploadAccept = function (obj, ret) {\n        return ret.model.success;\n    };\n    cls.enumEvt = {\n        /*参数说明\titems {DataTransferItemList}DataTransferItem\n        描述 阻止此事件可以拒绝某些类型的文件拖入进来。目前只有 chrome 提供这样的 API，且只能通过 mime-type 验证。\n        */\n        dndAccept: 'dndAccept',\n        /*参数说明\tfile {File}File对象\n          描述 当文件被加入队列之前触发，此事件的handler返回值为false，则此文件不会被添加进入队列\n          */\n        beforeFileQueued: 'beforeFileQueued',\n        /*参数说明\tfile {File}File对象\n          描述 当文件被加入队列以后触发。\n          */\n        fileQueued: 'fileQueued',\n        /*参数说明\tfiles {File}数组，内容为原始File(lib/File）对象。\n          描述 当一批文件添加进队列以后触发。\n          */\n        filesQueued: 'filesQueued',\n        /*参数说明\tfile {File}File对象\n          描述当文件被移除队列后触发。\n          */\n        fileDequeued: 'fileDequeued',\n        /*参数说明\n       描述 当 uploader 被重置的时候触发。\n       */\n        reset: 'reset',\n        /*参数说明\n       描述 当开始上传流程时触发。\n       */\n        startUpload: 'startUpload',\n        /*参数说明\n       描述当开始上传流程暂停时触发。\n       */\n        stopUpload: 'stopUpload',\n        /*参数说明\n       描述当所有文件上传结束时触发。\n       */\n        uploadFinished: 'uploadFinished',\n        /*参数说明\tfile {File}File对象\n        描述某个文件开始上传前触发，一个文件只会触发一次。\n           */\n        uploadStart: 'uploadStart',\n        /*参数说明\tobject {Object}\n              data {Object}默认的上传参数，可以扩展此对象来控制上传参数。\n              headers {Object}可以扩展此对象来控制上传头部。\n     描述当某个文件的分块在发送前触发，主要用来询问是否要添加附带参数，大文件在开起分片上传的前提下此事件可能会触发多次。\n      */\n        uploadBeforeSend: 'uploadBeforeSend',\n        /*参数说明\tobject {Object}\n            ret {Object}服务端的返回数据，json格式，如果服务端不是json格式，从ret._raw中取数据，自行解析。\n            描述  当某个文件上传到服务端响应后，会派送此事件来询问服务端响应是否有效。如果此事件handler返回值为false, 则此文件将派送server类型的uploadError事件。\n        */\n        uploadAccept: 'uploadAccept',\n        /*参数说明\tfile {File}File对象\n            percentage {Number}上传进度\n         描述   上传过程中触发，携带上传进度。\n        */\n        uploadProgress: 'uploadProgress',\n        /*参数说明\tfile {File}File对象\n            reason {String}出错的code\n          描述  当文件上传出错时触发。\n       */\n        uploadError: 'uploadError',\n        /*参数说明\tfile {File}File对象\n            response {Object}服务端返回的数据\n         描述   当文件上传成功时触发。*/\n        uploadSuccess: 'uploadSuccess',\n        /*参数说明\tfile {File} [可选]File对象\n        描述  不管成功或者失败，文件上传完成时触发。\n       */\n        uploadComplete: 'uploadComplete',\n        /*参数说明\ttype {String}错误类型。\n         描述:当validate不通过时，会以派送错误事件的形式通知调用者。通过upload.on('error', handler)可以捕获到此类错误，目前有以下错误会在特定的情况下派送错来。\n                Q_EXCEED_NUM_LIMIT 在设置了fileNumLimit且尝试给uploader添加的文件数量超出这个值时派送。\n                Q_EXCEED_SIZE_LIMIT 在设置了Q_EXCEED_SIZE_LIMIT且尝试给uploader添加的文件总大小超出这个值时派送。\n                Q_TYPE_DENIED 当文件类型不满足时触发。。\n       */\n        error: 'error'\n    };\n    cssOrm.declare(\"clsAppUploader\", cls, false);\n    return cls;\n});\n","define(\"RxmFileExplorer\", [\"RxmFileMgr\"], function (c) {\n    ///<param  name=\"c\"  type=\"clsFileMgr\"><param>\n    if (typeof rxm_file == 'undefined') {\n        return;\n    }\n    function clsFileExplorer() {\n        ///<summary>explorer文件管理器插件</summary>\n    }\n    clsFileExplorer.prototype.openFileDlg = function (args) {\n        ///<summary>文件管理器</summary>\n        ///<param  name=\"path\" type=\"String\">必选 文件路径 </param>\n        cssOrm.on({ callback: args.callback, data: args.data, msgType: \"explorerOpen\", one: true, id: \"\" });\n        if (args.ends) {\n            c.openFileDlg(args.path, args.ends);\n        }\n        else {\n            c.openFileDlg(args.path);\n        }\n    };\n    clsFileExplorer.prototype.getSizeByPath = function (args) {\n        ///<summary>通过路径获取文件大小的回调方法</summary>\n        ///<param  name=\"id\" type=\"String\">必选 唯一标识符,与回调方法中id对应 </param>\n        ///<param  name=\"path\" type=\"String\">必选 文件路径 </param>\n        cssOrm.on({ callback: args.callback, data: args.data, id: args.id, msgType: \"getFileSizeByPath\", one: true });\n        c.getSizeByPath(args.id, args.path);\n    };\n    clsFileExplorer.prototype.getFileLastModifiedTime = function (args) {\n        ///<summary>获取文件或文件夹的最后修改时间</summary>\n        ///<param  name=\"id\" type=\"String\">必选 文件唯一标识符 </param>\n        ///<param  name=\"path\" type=\"String\">必选 文件路径 </param>\n        cssOrm.on({ callback: args.callback, data: args.data, id: args.id, msgType: \"getFileCreateTime\", one: true });\n        c.getFileLastModifiedTime(args.id, args.path);\n    };\n    clsFileExplorer.prototype.curPath = function (args) {\n        ///<summary>获取文件路径</summary>\n        ///<param  name=\"id\" type=\"Number\">必选 文件唯一标识符 </param>\n        cssOrm.on({ callback: args.callback, data: args.data, id: args.id, msgType: \"getFilePath\", one: true });\n        c.curPath(args.id);\n    };\n    clsFileExplorer.prototype.curRealPath = function (args) {\n        ///<summary>获取文件实际路径</summary>\n        ///<param  name=\"path\" type=\"String\">必选 文件路径 </param>\n        cssOrm.on({ callback: args.callback, data: args.data, id: \"\", msgType: \"getFileRealPath\", one: true });\n        c.curRealPath(args.path);\n    };\n    clsFileExplorer._onopenFileDlgBlock = function (path) {\n        ///<summary> 文件管理器回调方法</summary>\n        ///<param  name=\"path\" type=\"String\">返回文件管理器里选择的文件路径 </param>\n        var fileName = path.substring(path.lastIndexOf('/') + 1);\n        var fileExt = fileName.substring(fileName.lastIndexOf('.') + 1);\n        var cbData = {\n            filePath: path,\n            fileName: fileName,\n            fileExt: fileExt\n        };\n        cssOrm.trigger(\"explorerOpen\", cbData);\n    };\n    clsFileExplorer._ongetSizeByPathBlock = function (opID, len) {\n        ///<summary> 通过路径获取文件大小的回调方法 </summary>\n        ///<param  name=\"opId\" type=\"String\">文件ID</param>\n        ///<param  name=\"len\" type=\" Number\">文件大小 单位为B 文件不存在时返回-1</param>\n        var cbData = {\n            opId: opID,\n            fileSize: len\n        };\n        cssOrm.trigger(\"getFileSizeByPath\", opID, cbData);\n    };\n    clsFileExplorer._ongetFileLastModifiedTimeBlock = function (opID, data) {\n        ///<summary> 通过路径获取文件大小的回调方法 </summary>\n        ///<param  name=\"opID\" type=\"Number\">文件ID</param>\n        ///<param  name=\"data\" type=\" String\">返回创建时间，yyyy-MM-dd HH:mm:ss</param>\n        var cbData = {\n            opId: opID,\n            createTime: data\n        };\n        cssOrm.trigger(\"getFileCreateTime\", cbData);\n    };\n    clsFileExplorer._oncurPathBlock = function (opID, data) {\n        ///<summary> 通过路径获取文件大小的回调方法 </summary>\n        ///<param  name=\"opID\" type=\"Number\">文件ID</param>\n        ///<param  name=\"data\" type=\" String\">返回文件的路径</param>\n        var cbData = {\n            opId: opID,\n            filePath: data\n        };\n        cssOrm.trigger(\"getFilePath\", opID, cbData);\n    };\n    clsFileExplorer._oncurRealBlock = function (data) {\n        ///<summary> 通过路径获取文件大小的回调方法 </summary>\n        ///<param  name=\"data\" type=\" String\">返回文件的真实路径</param>\n        var cbData = {\n            fileRealPath: data\n        };\n        cssOrm.trigger(\"getFileRealPath\", cbData);\n    };\n    rxm_file.openFileDlgBlock = clsFileExplorer._onopenFileDlgBlock;\n    rxm_file.getSizeByPathBlock = clsFileExplorer._ongetSizeByPathBlock;\n    rxm_file.getFileLastModifiedTimeBlock = clsFileExplorer._ongetFileLastModifiedTimeBlock;\n    rxm_file.curPathBlock = clsFileExplorer._oncurPathBlock;\n    rxm_file.curRealBlock = clsFileExplorer._oncurRealBlock;\n    cssOrm.declare(\"clsFileExplorer\", clsFileExplorer);\n    return clsFileExplorer;\n});\n"]}